<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Window.Notify">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/Window/WindowBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Window.Notify.Default, TypeInTargetAssembly={x:Type local:NotifyWindowBase}}" BasedOn="{StaticResource {x:Static h:WindowBase.DefaultKey}}" TargetType="{x:Type local:NotifyWindowBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static h:SystemKeys.FontFamily}}" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="220" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IconSize" Value="15" />
        <Setter Property="CaptionHeight" Value="25" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        <Setter Property="h:Cattach.Icon" Value="&#xe65c;" />
        <Setter Property="MaxboxEnable" Value="True" />
        <Setter Property="MinboxEnable" Value="True" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NotifyWindowBase}">
                    <Grid Name="g_all" Margin="6">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Border x:Name="Bg"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Effect="{DynamicResource {x:Static h:EffectShadowKeys.Window}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="BgInner"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="18" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    Margin="0"
                                    Background="{TemplateBinding CaptionBackground}"
                                    CornerRadius="3,3,0,0">
                                <Grid Margin="2,1,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel x:Name="PART_Header"
                                                Height="{TemplateBinding CaptionHeight}"
                                                Margin="5,1,5,1"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBlock FontSize="{TemplateBinding IconSize}"
                                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=h:WindowBase}, Path=CaptionForeground}"
                                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                   Text="{TemplateBinding Icon}" />
                                        <TextBlock Margin="5"
                                                   VerticalAlignment="Center"
                                                   FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=h:WindowBase}, Path=CaptionForeground}"
                                                   Text="{TemplateBinding Title}" />
                                    </StackPanel>

                                    <StackPanel Grid.Column="1"
                                                Height="{TemplateBinding CaptionHeight}"
                                                Margin="1"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Orientation="Horizontal">
                                        <Button x:Name="btnClose"
                                                Width="35"
                                                Margin="1"
                                                Padding="1,2,1,2"
                                                VerticalAlignment="Center"
                                                h:Cattach.AllowsAnimation="True"
                                                h:Cattach.CornerRadius="0"
                                                h:Cattach.Icon="&#xe6f4;"
                                                h:Cattach.IconMargin="0"
                                                h:Cattach.IconSize="14"
                                                h:Cattach.MouseOverBackground="Red"
                                                h:Cattach.MouseOverForeground="White"
                                                h:Cattach.PressBackground="#AA0D0D"
                                                h:Cattach.PressForeground="White"
                                                Command="{x:Static h:Commander.Close}"
                                                Foreground="{Binding RelativeSource={RelativeSource AncestorType=h:WindowBase}, Path=CaptionForeground}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                                WindowChrome.IsHitTestVisibleInChrome="True" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <AdornerDecorator Grid.Row="1" Margin="3,0,3,3">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:NotifyWindowBase.DefaultKey}}" TargetType="{x:Type local:NotifyWindowBase}" />
</ResourceDictionary>
