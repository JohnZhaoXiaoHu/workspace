<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Window.Link"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/Control/Button.xaml"/>-->
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Window.Message;component/MessageWindowBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Window.Link.Phone, TypeInTargetAssembly={x:Type local:PhoneWindowBase}}" BasedOn="{StaticResource {x:Static h:MessageWindowBase.DynamicKey}}" TargetType="{x:Type local:PhoneWindowBase}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CaptionHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="700" />
        <Setter Property="h:Cattach.Icon" Value="&#xe7fd;" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PhoneWindowBase}">
                    <Grid Name="g_all">
                        <Border Margin="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Effect="{DynamicResource {x:Static h:EffectShadowKeys.Window}}" />

                        <Grid Margin="{TemplateBinding Padding}">
                            <AdornerDecorator WindowChrome.IsHitTestVisibleInChrome="True">
                                <Grid>
                                    <h:NotifyIcon x:Name="PART_NotifyIcon"
                                                  Command="{Binding Path=MinimizeWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Icon="{Binding Path=NotifyIconSource, RelativeSource={RelativeSource TemplatedParent}}"
                                                  IconVisibility="Visible"
                                                  Text="{TemplateBinding Title}">
                                        <FrameworkElement.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=NotifyWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="显示面板" />

                                                <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=NotifyWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="隐藏" />

                                                <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CloseWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="退出" />
                                            </ContextMenu>
                                        </FrameworkElement.ContextMenu>
                                    </h:NotifyIcon>
                                    <Grid>
                                        <h:DialogHost HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
                                                      Effect="{TemplateBinding AdornerDecoratorEffect}"
                                                      Identifier="windowDialog">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="60" />
                                                </Grid.RowDefinitions>

                                                <local:LinkActionFrame Grid.Row="0" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentLink}" UseRandomWipe="False">
                                                    <local:LinkActionFrame.CurrentWipe>
                                                        <h:CircleWipe Duration="200" />
                                                    </local:LinkActionFrame.CurrentWipe>
                                                </local:LinkActionFrame>

                                                <ListBox Grid.Row="1"
                                                         Margin="5"
                                                         Background="Transparent"
                                                         BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                                         BorderThickness="0 1 0 0"
                                                         ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Links}"
                                                         SelectedIndex="0"
                                                         SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentLink}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                    <TextBlock x:Name="tb_logo"
                                                                               Margin="1"
                                                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                                               Text="{Binding Logo}" />
                                                                    <TextBlock VerticalAlignment="Center" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}" Text="{Binding DisplayName}" />
                                                                </StackPanel>
                                                            </Grid>
                                                            <DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding Logo}" Value="{x:Null}">
                                                                    <Setter TargetName="tb_logo" Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>

                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <UniformGrid Columns="4" />
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>

                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid>
                                                                            <ContentPresenter />
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                                                                            </Trigger>

                                                                            <Trigger Property="IsSelected" Value="true">
                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>

                                                    <ListBox.Template>
                                                        <ControlTemplate TargetType="ListBox">
                                                            <Grid>
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Bottom}}">
                                                                    <ItemsPresenter />
                                                                </Border>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </ListBox.Template>
                                                </ListBox>


                                                <h:ContainPanel x:Name="PART_LAYERGROUP"
                                                                Background="{DynamicResource {x:Static h:BrushKeys.DialogCover}}"
                                                                ClipToBounds="True"
                                                                Visibility="Collapsed">
                                                    <h:ContainPanel.AnimationAction>
                                                        <h:ScaleTransition />
                                                    </h:ContainPanel.AnimationAction>
                                                </h:ContainPanel>
                                            </Grid>
                                        </h:DialogHost>

                                        <h:MessageContainer x:Name="PART_Message" Grid.Row="1" />

                                        <h:Snackbar x:Name="PART_SnackBar" MessageQueue="{h:MessageQueue}" />
                                    </Grid>
                                </Grid>
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:PhoneWindowBase.DefaultKey}}" TargetType="{x:Type local:PhoneWindowBase}" />
</ResourceDictionary>
