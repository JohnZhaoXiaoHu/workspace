<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Window.Link">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Window.Message;component/MessageWindowBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Window.Office.Default, TypeInTargetAssembly={x:Type local:OfficeWindowBase}}" BasedOn="{StaticResource {x:Static h:MessageWindowBase.DynamicKey}}" TargetType="{x:Type local:OfficeWindowBase}">
        <Setter Property="LinkActions" Value="{Binding LinkActions}" />
        <Setter Property="CurrentLink" Value="{Binding CurrentLink}" />
        <Setter Property="CaptionHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="h:TransitionService.VisibleActions">
            <Setter.Value>
                <h:TransitionCollection>
                    <h:ScaleGeomotryTransition HideDuration="500" PointOriginType="MouseInnerOrCenter" VisibleDuration="1500" />
                </h:TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="NotifyIconSource" Value="/HeBianGu.General.WpfControlLib;component/Resources/logo.ico" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:OfficeWindowBase}">
                    <Grid Effect="{TemplateBinding AdornerDecoratorEffect}">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Loaded">
                                <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>

                        <Border Margin="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Effect="{DynamicResource {x:Static h:EffectShadowKeys.Window}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <h:GuideHost IsGuide="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IsGuide)}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" MinHeight="20" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CaptionBackground}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Top}}">
                                        <DockPanel Margin="2,1,2,0">
                                            <TextBlock Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconMargin)}"
                                                       VerticalAlignment="Center"
                                                       FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconSize)}"
                                                       Foreground="{TemplateBinding CaptionForeground}"
                                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}"
                                                       Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon), Converter={x:Static h:Converter.GetNullToCollapsed}}" />

                                            <Image Height="25"
                                                   Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconMargin)}"
                                                   VerticalAlignment="Center"
                                                   Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon}"
                                                   Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon, Converter={x:Static h:Converter.GetNullToCollapsed}}" />

                                            <TextBlock VerticalAlignment="Center"
                                                       FontSize="{StaticResource {x:Static h:FontSizeKeys.Header}}"
                                                       Foreground="{TemplateBinding CaptionForeground}"
                                                       Text="{TemplateBinding Title}" />

                                            <Control Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CaptionBackground}"
                                                     DockPanel.Dock="Left"
                                                     Foreground="{TemplateBinding CaptionForeground}"
                                                     Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionLeftTemplate)}"
                                                     WindowChrome.IsHitTestVisibleInChrome="True" />


                                            <ContentPresenter HorizontalAlignment="Left"
                                                              Content="{Binding Source={x:Static h:WindowMenuViewPresenter.Instance}}"
                                                              DockPanel.Dock="Left"
                                                              WindowChrome.IsHitTestVisibleInChrome="True" />

                                            <StackPanel Height="{TemplateBinding CaptionHeight}"
                                                        Margin="1"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        DockPanel.Dock="Right"
                                                        Orientation="Horizontal">

                                                <ContentPresenter Content="{Binding Source={x:Static h:WindowCaptionViewPresenter.Instance}}" />

                                                <Separator Height="20" Background="{Binding RelativeSource={RelativeSource AncestorType=h:OfficeWindowBase}, Path=CaptionForeground}" Style="{DynamicResource {x:Static h:SeparatorKeys.Vertical}}" />

                                                <Button Style="{DynamicResource {x:Static h:ButtonKeys.MinimizeWindow}}" />
                                                <Button x:Name="btnMax" Style="{DynamicResource {x:Static h:ButtonKeys.MaximizeWindow}}" />
                                                <Button Style="{DynamicResource {x:Static h:ButtonKeys.CloseWindow}}" />
                                            </StackPanel>


                                            <Control Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CaptionBackground}"
                                                     DockPanel.Dock="Right"
                                                     Foreground="{TemplateBinding CaptionForeground}"
                                                     Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionRightTemplate)}"
                                                     WindowChrome.IsHitTestVisibleInChrome="True" />

                                            <Control Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CaptionBackground}"
                                                     Foreground="{TemplateBinding CaptionForeground}"
                                                     Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionCenterTemplate)}"
                                                     WindowChrome.IsHitTestVisibleInChrome="True" />
                                        </DockPanel>
                                    </Border>

                                    <AdornerDecorator Grid.Row="2" Margin="3,-1,3,3">
                                        <Grid>
                                            <h:NotifyIcon x:Name="PART_NotifyIcon"
                                                          Command="{Binding Path=MinimizeWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                          Icon="{Binding Path=NotifyIconSource, RelativeSource={RelativeSource TemplatedParent}}"
                                                          IconVisibility="Visible"
                                                          Text="{TemplateBinding Title}">

                                                <FrameworkElement.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=NotifyWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="显示面板" />

                                                        <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=NotifyWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="隐藏" />

                                                        <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CloseWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="退出" />
                                                    </ContextMenu>
                                                </FrameworkElement.ContextMenu>
                                            </h:NotifyIcon>

                                            <h:DialogHost Margin="-3,0,-3,-3" Identifier="windowDialog">
                                                <Grid>
                                                    <DockPanel>
                                                        <!--<Border DockPanel.Dock="Top">
                                                            <Grid>-->
                                                        <ContentControl  DockPanel.Dock="Top" Margin="0,0" Template="{TemplateBinding Tab}" />
                                                        <!--<Button Width="60"
                                                                        Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top"
                                                                        h:Cattach.MouseOverBackground="Transparent"
                                                                        Content="文件"
                                                                        Foreground="{TemplateBinding CaptionForeground}"
                                                                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}">
                                                                    <h:Interaction.Triggers>
                                                                        <h:EventTrigger EventName="Click">
                                                                            <h:ChangePropertyAction PropertyName="IsShowLink" TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:OfficeWindowBase}}}" Value="True" />
                                                        -->
                                                        <!--<h:ChangePropertyAction PropertyName="CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                                    <h:ChangePropertyAction PropertyName="CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>-->
                                                        <!--
                                                                        </h:EventTrigger>
                                                                    </h:Interaction.Triggers>
                                                                </Button>
                                                            </Grid>
                                                        </Border>-->

                                                        <DockPanel>
                                                            <Control DockPanel.Dock="Left" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.LeftTemplate)}" />
                                                            <Control DockPanel.Dock="Right" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.RightTemplate)}" />
                                                            <Control DockPanel.Dock="Bottom" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.BottomTemplate)}" />
                                                            <Control DockPanel.Dock="Top" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.TopTemplate)}" />
                                                            <ContentPresenter Content="{Binding Source={x:Static h:WindowToolbarViewPresenter.Instance}}" DockPanel.Dock="Top" />
                                                            <ContentPresenter Panel.ZIndex="1" Content="{Binding Source={x:Static h:WindowStatusViewPresenter.Instance}}" DockPanel.Dock="Bottom" />
                                                            <Grid>
                                                                <ContentPresenter Content="{TemplateBinding Content}" />
                                                                <Control Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CenterTemplate)}" />
                                                                <ContentPresenter VerticalAlignment="Bottom"
                                                                                  h:TransitionService.IsVisible="{Binding Source={x:Static h:WindowMessageViewPresenter.Instance}, Path=IsVisible}"
                                                                                  Content="{Binding Source={x:Static h:WindowMessageViewPresenter.Instance}}"
                                                                                  DockPanel.Dock="Bottom">
                                                                    <h:TransitionService.VisibleActions>
                                                                        <h:TransitionCollection>
                                                                            <h:TranslateTransition StartPoint="0 50" EndPoint="0 50" Duration="200" />
                                                                        </h:TransitionCollection>
                                                                    </h:TransitionService.VisibleActions>
                                                                </ContentPresenter>

                                                                <ToggleButton Margin="5"
                                                                              HorizontalAlignment="Right"
                                                                              VerticalAlignment="Bottom"
                                                                              h:Cattach.Icon="{Binding Source={x:Static h:WindowMessageViewPresenter.Instance}, Path=Icon}"
                                                                              h:Cattach.IconSize="20"
                                                                              Content="{x:Static h:IconAll.Down_Arrow}"
                                                                              IsChecked="{Binding Source={x:Static h:WindowMessageViewPresenter.Instance}, Path=IsVisible}"
                                                                              Style="{DynamicResource {x:Static h:ToggleButtonKeys.DoubleFIconCheckedSingle}}"
                                                                              Visibility="{Binding Source={x:Static h:WindowMessageViewPresenter.Instance}, Path=UseTool, FallbackValue=Collapsed, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                                                            </Grid>
                                                        </DockPanel>
                                                    </DockPanel>

                                                    <Border Margin="0,-43,0,0"
                                                            h:TransitionService.IsVisible="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsShowLink, IsAsync=True}"
                                                            Background="{TemplateBinding Background}"
                                                            CornerRadius="{TemplateBinding h:Cattach.CornerRadius}">
                                                        <h:TransitionService.VisibleActions>
                                                            <h:TransitionCollection>
                                                                <!--<h:TranslateTransition StartPoint="-100,0" EndPoint="-100,0" Duration="200" />-->
                                                                <h:OpacityTransition Duration="200" />
                                                            </h:TransitionCollection>
                                                        </h:TransitionService.VisibleActions>
                                                        <DockPanel>
                                                            <Border Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CaptionBackground}" CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Left}}">
                                                                <DockPanel Width="130" VerticalAlignment="Stretch">
                                                                    <Button Width="Auto"
                                                                            Height="Auto"
                                                                            Margin="30,30,0,0"
                                                                            HorizontalAlignment="Left"
                                                                            h:Cattach.Icon="&#xe9d9;"
                                                                            h:Cattach.IconSize="45"
                                                                            DockPanel.Dock="Top"
                                                                            Foreground="{TemplateBinding CaptionForeground}"
                                                                            Style="{DynamicResource {x:Static h:ButtonKeys.Icon}}">
                                                                        <h:Interaction.Triggers>
                                                                            <h:EventTrigger EventName="Click">
                                                                                <h:ChangePropertyAction PropertyName="IsShowLink" TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:OfficeWindowBase}}}" Value="False" />
                                                                                <!--<h:ChangePropertyAction PropertyName="CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                                <h:ChangePropertyAction PropertyName="CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>-->
                                                                            </h:EventTrigger>
                                                                        </h:Interaction.Triggers>
                                                                    </Button>

                                                                    <ListBox h:Cattach.SelectBackground="{DynamicResource {x:Static h:BrushKeys.Orange}}"
                                                                             h:Cattach.SelectForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                                                             h:Cattach.UseSearch="False"
                                                                             Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionForeground)}"
                                                                             ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=LinkActions}"
                                                                             SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentLink, Mode=TwoWay}"
                                                                             Style="{TemplateBinding LeftMenuStyle}" />
                                                                </DockPanel>
                                                            </Border>
                                                            <Grid>
                                                                <local:LinkActionFrame Grid.Row="1"
                                                                                       Margin="15,10"
                                                                                       BorderThickness="0,0,0,0"
                                                                                       LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentLink, Mode=TwoWay}" />

                                                                <StackPanel Grid.Column="1"
                                                                            Height="{TemplateBinding CaptionHeight}"
                                                                            Margin="3"
                                                                            HorizontalAlignment="Right"
                                                                            VerticalAlignment="Top"
                                                                            Orientation="Horizontal">
                                                                    <Button Foreground="{StaticResource {x:Static h:BrushKeys.ForegroundDefault}}" Style="{DynamicResource {x:Static h:ButtonKeys.MinimizeWindow}}" />
                                                                    <Button h:Cattach.Icon="{Binding ElementName=btnMax, Path=(h:Cattach.Icon)}" Foreground="{StaticResource {x:Static h:BrushKeys.ForegroundDefault}}" Style="{DynamicResource {x:Static h:ButtonKeys.MaximizeWindow}}" />
                                                                    <Button Foreground="{StaticResource {x:Static h:BrushKeys.ForegroundDefault}}" Style="{DynamicResource {x:Static h:ButtonKeys.CloseWindow}}" />
                                                                </StackPanel>
                                                            </Grid>
                                                        </DockPanel>
                                                    </Border>


                                                    <h:ContainPanel x:Name="PART_LAYERGROUP"
                                                                    Background="{DynamicResource {x:Static h:BrushKeys.DialogCover}}"
                                                                    ClipToBounds="True"
                                                                    Visibility="Collapsed">
                                                        <h:ContainPanel.AnimationAction>
                                                            <h:OpacityTransition />
                                                        </h:ContainPanel.AnimationAction>
                                                    </h:ContainPanel>

                                                    <h:MessageContainer x:Name="PART_Message" Grid.Row="1" />
                                                </Grid>
                                            </h:DialogHost>

                                            <h:Snackbar x:Name="PART_SnackBar" MessageQueue="{h:MessageQueue}" />
                                        </Grid>
                                    </AdornerDecorator>
                                </Grid>
                            </h:GuideHost>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="btnMax" Property="h:Cattach.Icon" Value="&#xe665;" />
                            <Setter Property="Padding" Value="0" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="btnMax" Property="h:Cattach.Icon" Value="&#xe615;" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LeftMenuStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static h:ListBoxKeys.Dynamic}}" TargetType="ListBox">
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock Margin="20,0" Text="{Binding DisplayName}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:OfficeWindowBase.DefaultKey}}" TargetType="{x:Type local:OfficeWindowBase}" />
</ResourceDictionary>