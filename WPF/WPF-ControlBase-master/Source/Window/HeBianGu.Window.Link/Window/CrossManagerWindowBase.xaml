<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Window.Link">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Window.Message;component/MessageWindowBase.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{ComponentResourceKey ResourceId=S.Window.Cross.Default, TypeInTargetAssembly={x:Type local:CrossManagerWindowBase}}" BasedOn="{StaticResource {x:Static h:MessageWindowBase.DefaultKey}}" TargetType="{x:Type local:CrossManagerWindowBase}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaptionHeight" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CrossManagerWindowBase}">
                    <Grid Name="g_all" Background="Transparent">
                        <h:Interaction.Behaviors>
                            <h:DragMoveWindowBehavior />
                        </h:Interaction.Behaviors>
                        <Border x:Name="Bg"
                                Margin="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Effect="{DynamicResource {x:Static h:EffectShadowKeys.Window}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Clip="{TemplateBinding ContenClip}">
                            <AdornerDecorator Grid.Row="1" WindowChrome.IsHitTestVisibleInChrome="True">
                                <Grid>
                                    <h:NotifyIcon x:Name="PART_NotifyIcon"
                                                  Command="{Binding Path=MinimizeWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Icon="{Binding Path=NotifyIconSource, RelativeSource={RelativeSource TemplatedParent}}"
                                                  IconVisibility="Visible"
                                                  Text="{TemplateBinding Title}">

                                        <FrameworkElement.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=NotifyWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="显示面板" />

                                                <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=NotifyWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="隐藏" />

                                                <MenuItem Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CloseWindowCommand}" CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Header="退出" />
                                            </ContextMenu>
                                        </FrameworkElement.ContextMenu>
                                    </h:NotifyIcon>

                                    <h:DrawerHost HorizontalContentAlignment="Stretch">
                                        <Grid>

                                            <h:DialogHost HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Identifier="windowDialog">
                                                <Grid>

                                                    <local:LinkActionFrame LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentLink, Mode=TwoWay}" />
                                                    <ListBox h:Cattach.ItemHeight="Auto"
                                                             Background="Transparent"
                                                             BorderBrush="Transparent"
                                                             ItemTemplate="{TemplateBinding LinkActionDataTemplate}"
                                                             ItemsPanel="{TemplateBinding ItemsPanel}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=LinkActions}"
                                                             SelectedIndex="0"
                                                             SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentLink}"
                                                             Style="{DynamicResource {x:Static h:ListBoxKeys.Clear}}" />
                                                    <h:ContainPanel x:Name="PART_LAYERGROUP"
                                                                    Grid.Row="1"
                                                                    Background="{DynamicResource {x:Static h:BrushKeys.DialogCover}}"
                                                                    ClipToBounds="True"
                                                                    Visibility="Collapsed">
                                                        <h:ContainPanel.AnimationAction>
                                                            <h:ScaleTransition />
                                                        </h:ContainPanel.AnimationAction>
                                                    </h:ContainPanel>
                                                </Grid>
                                            </h:DialogHost>

                                            <h:MessageContainer x:Name="PART_Message" />

                                            <h:Snackbar x:Name="PART_SnackBar" MessageQueue="{h:MessageQueue}" />
                                        </Grid>
                                    </h:DrawerHost>
                                </Grid>
                            </AdornerDecorator>
                        </Grid>

                        <Button Width="60"
                                Height="60"
                                Margin="60"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                h:Cattach.CornerRadius="40"
                                h:Cattach.Icon="&#xe6f4;"
                                h:Cattach.IconSize="25"
                                h:Cattach.MouseOverBackground="Red"
                                Command="{Binding Path=CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource {x:Static h:ButtonKeys.MouseOver}}"
                                WindowChrome.IsHitTestVisibleInChrome="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:CrossManagerWindowBase.DefaultKey}}" TargetType="{x:Type local:CrossManagerWindowBase}" />
</ResourceDictionary>