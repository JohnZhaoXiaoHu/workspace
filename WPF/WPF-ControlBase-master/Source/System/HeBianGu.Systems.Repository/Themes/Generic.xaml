<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Systems.Repository"
                    xmlns:sys="clr-namespace:System"
                    xmlns:sys1="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Systems.Repository;component/Service/View/RepositoryView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Systems.Repository;component/RespositoryBox.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/HeBianGu.Systems.Repository;component/RepositoryViewPresenter.xaml" />-->

    </ResourceDictionary.MergedDictionaries>

    <Style BasedOn="{StaticResource S.RepositoryView.Default}" TargetType="{x:Type local:RepositoryView}" />
    <Style BasedOn="{StaticResource {x:Static h:RespositoryBox.DefaultKey}}" TargetType="{x:Type local:RespositoryBox}" />

    <DataTemplate DataType="{x:Type local:ComboboxRepositoryPropertyItem}">
        <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" Visibility="{Binding Visibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox x:Name="cb"
                      Margin="5,0"
                      h:Cattach.Title="{Binding Name}"
                      h:Cattach.TitleWidth="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=(h:Cattach.TitleWidth)}"
                      BorderBrush="Red"
                      ItemsSource="{Binding ItemsSource}"
                      SelectedItem="{Binding Value}"
                      Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}">
                <ComboBox.ToolTip>
                    <ToolTip Padding="0"
                             Background="Transparent"
                             BorderThickness="0"
                             StaysOpen="True">
                        <Border Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                                Background="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                BorderBrush="Transparent"
                                CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                            <TextBlock Margin="10,0"
                                       VerticalAlignment="Center"
                                       FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                       Text="{Binding Message}" />
                        </Border>
                    </ToolTip>
                </ComboBox.ToolTip>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Grid Grid.Column="1" Width="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=MessageWidth}">
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="14"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="&#xe626;"
                           TextTrimming="CharacterEllipsis"
                           ToolTip="{Binding Message}"
                           Visibility="{Binding Message, Converter={x:Static h:XConverter.VisibilityWithOutStringConverter}, ConverterParameter={x:Null}, Mode=TwoWay}" />
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                <Setter TargetName="cb" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
                <Setter TargetName="cb" Property="ToolTip" Value="{x:Null}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MultiSelectRepositoryPropertyItem}">
        <Grid Visibility="{Binding Visibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ListBox x:Name="cb"
                     Margin="5,0"
                     h:Cattach.SelectedItems="{Binding Value}"
                     h:Cattach.Title="{Binding Name}"
                     h:Cattach.TitleWidth="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=(h:Cattach.TitleWidth)}"
                     BorderBrush="Red"
                     ItemsSource="{Binding ItemsSource}"
                     SelectionMode="Multiple"
                     Style="{DynamicResource {x:Static h:ListBoxKeys.Label}}">
                <ListBox.ToolTip>
                    <ToolTip Padding="0"
                             Background="Transparent"
                             BorderThickness="0"
                             StaysOpen="True">
                        <Border Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                                Background="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                BorderBrush="Transparent"
                                CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                            <TextBlock Margin="10,0"
                                       VerticalAlignment="Center"
                                       FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                       Text="{Binding Message}" />
                        </Border>
                    </ToolTip>
                </ListBox.ToolTip>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Column="1" Width="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=MessageWidth}">
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="14"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="&#xe626;"
                           TextTrimming="CharacterEllipsis"
                           ToolTip="{Binding Message}"
                           Visibility="{Binding Message, Converter={x:Static h:XConverter.VisibilityWithOutStringConverter}, ConverterParameter={x:Null}, Mode=TwoWay}" />
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                <Setter TargetName="cb" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
                <Setter TargetName="cb" Property="ToolTip" Value="{x:Null}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ListBoxRepositoryPropertyItem}">
        <Grid Visibility="{Binding Visibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ListBox x:Name="cb"
                     Margin="5,0"
                     h:Cattach.Title="{Binding Name}"
                     h:Cattach.TitleWidth="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=(h:Cattach.TitleWidth)}"
                     BorderBrush="Red"
                     ItemsSource="{Binding ItemsSource}"
                     SelectedItem="{Binding Value}"
                     Style="{DynamicResource {x:Static h:ListBoxKeys.Label}}">
                <ListBox.ToolTip>
                    <ToolTip Padding="0"
                             Background="Transparent"
                             BorderThickness="0"
                             StaysOpen="True">
                        <Border Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                                Background="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                BorderBrush="Transparent"
                                CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                            <TextBlock Margin="10,0"
                                       VerticalAlignment="Center"
                                       FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                       Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                       Text="{Binding Message}" />
                        </Border>
                    </ToolTip>
                </ListBox.ToolTip>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Column="1" Width="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=MessageWidth}">
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="14"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="&#xe626;"
                           TextTrimming="CharacterEllipsis"
                           ToolTip="{Binding Message}"
                           Visibility="{Binding Message, Converter={x:Static h:XConverter.VisibilityWithOutStringConverter}, ConverterParameter={x:Null}, Mode=TwoWay}" />
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                <Setter TargetName="cb" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
                <Setter TargetName="cb" Property="ToolTip" Value="{x:Null}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:RepositoryViewPresenter}">
        <DockPanel>
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <Button Margin="2,0"
                        Command="{Binding ViewModel.AddCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        DockPanel.Dock="Left"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                        Visibility="{Binding UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <!--<Button Command="{Binding ViewModel.AddCommand}"
                        Content=""
                        DockPanel.Dock="Right"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

                <Button Command="{Binding ViewModel.DeleteCheckedCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                        Visibility="{Binding UseDeleteChecked, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ViewModel.ClearCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        DockPanel.Dock="Left"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                        Visibility="{Binding UseClear, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <!--<Button x:Name="bt_gridset"
                        Width="Auto"
                        Command="{Binding ViewModel.GridSetCommand}"
                        CommandParameter="{Binding ElementName=dg, Path=ColumnSet.ColumnSetItems}"
                        Content="设置"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Set}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseGridSet, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

                <!--<Button Command="{Binding ViewModel.ExportCommand}"
                        Content="导出Xml"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ViewModel.ExportCommand}"
                        Content="导出Json"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

                <Button Command="{Binding ViewModel.ExportCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding UseExport, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <!--<Button Command="{Binding ViewModel.ExportCommand}"
                        Content="导入Xml"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ViewModel.ExportCommand}"
                        Content="导入Json"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ViewModel.ExportCommand}"
                        Content="导入Excel"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

                <!--<Button Command="{Binding ViewModel.ExportCommand}"
                        Content="撤销"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ViewModel.ExportCommand}"
                        Content="重做"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseExportXml, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

            </DockPanel>

            <Separator Margin="0,5,0,2" DockPanel.Dock="Top" />

            <Grid>
                <DockPanel x:Name="lb">
                    <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" DockPanel.Dock="Bottom" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UsePagination, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.FontSize16}}">
                                <Run Text="第" />
                                <Run FontWeight="Black" Text="{Binding ViewModel.Collection.MinValue, FallbackValue=0}" />
                                <Run Text="到" />
                                <Run FontWeight="Black" Text="{Binding ViewModel.Collection.MaxValue, FallbackValue=0}" />
                                <Run Text="条记录，共" />
                                <Run FontWeight="Black" Text="{Binding ViewModel.Collection.Total}" />
                                <Run Text="条" />
                            </TextBlock>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <h:Pagination Width="600" MaxPageCount="{Binding ViewModel.Collection.TotalPage, Mode=TwoWay}" PageIndex="{Binding ViewModel.Collection.PageIndex, Mode=TwoWay}" />
                        </StackPanel>
                    </Grid>

                    <DockPanel Margin="0,2" DockPanel.Dock="Bottom" LastChildFill="False">
                        <!--<ListBox Style="{DynamicResource {x:Static h:ListBoxKeys.Label}}" h:Cattach.Title="布局"
                                     SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ItemsPanel}"
                                     ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ItemsPanelSelectSource}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>-->

                        <TextBox Width="250"
                                 h:Cattach.BackgroundColumn="1"
                                 h:Cattach.Title="搜索"
                                 Style="{DynamicResource {x:Static h:TextBoxKeys.Label}}"
                                 Text="{Binding SearchText}"
                                 Visibility="{Binding UseSearch, Converter={x:Static h:Converter.GetTrueToVisible}}">
                            <h:Interaction.Triggers>
                                <!--<h:EventTrigger EventName="TextChanged">
                                                <h:InvokeCommandAction Command="{Binding SearchTextCommand}"/>
                                            </h:EventTrigger>-->
                                <h:KeyTrigger Key="Enter">
                                    <h:InvokeCommandAction Command="{Binding SearchTextCommand}" />
                                </h:KeyTrigger>
                            </h:Interaction.Triggers>
                        </TextBox>
                        <ComboBox x:Name="cb"
                                  h:Cattach.BackgroundColumn="1"
                                  h:Cattach.Title="布局"
                                  DockPanel.Dock="Right"
                                  SelectedIndex="{Binding LayoutSelectedIndex}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}"
                                  Visibility="{Binding UseLayout, Converter={x:Static h:Converter.GetTrueToVisible}}">
                            <ComboBox.ItemsSource>
                                <x:Array Type="{x:Type local:ItemsPanelTemplateDisplay}">
                                    <local:ItemsPanelTemplateDisplay Name="StackPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <StackPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="StackPanel-Horizontal">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(3)">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="3" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(2)">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="2" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="CirclePanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:CirclePanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="CrossPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:CrossPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="DockPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:DockPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="DragPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:DragPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <!--<local:ItemsPanelTemplateDisplay Name="FlashPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:FlashPanel>
                                                    <h:FlashPanel.Timelines>
                                                        <cl:ArrayList>
                                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             From="0" To="1"
                                                             Duration="00:00:01" />
                                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             From="0" To="1"
                                                             Duration="00:00:01" />
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="1" To="0"
                                                             Duration="00:00:01" />
                                                        </cl:ArrayList>
                                                    </h:FlashPanel.Timelines>
                                                </h:FlashPanel>
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>-->


                                    <local:ItemsPanelTemplateDisplay Name="PagePanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:PagePanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>
                                </x:Array>
                            </ComboBox.ItemsSource>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!--<ComboBox Grid.Column="1"
                                  h:Cattach.Title="显示"
                                  ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplateSelectSource}"
                                  SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplate}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}"
                                  Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseTemplate, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>-->

                        <!--<DockPanel Grid.Column="3" DockPanel.Dock="Right" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UsePageCount, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                        -->
                        <!--<TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="每页显示条数:" />
                            <TextBlock DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding ElementName=slider, Path=Value}" />
                            <Slider x:Name="slider"
                                    VerticalAlignment="Center"
                                    Maximum="50"
                                    Minimum="2"
                                    SmallChange="1"
                                    Value="{Binding ViewModel.Collection.PageCount}" />-->
                        <!--


                        </DockPanel>-->


                        <ComboBox h:Cattach.BackgroundColumn="1"
                                  h:Cattach.Title="显示条数"
                                  DockPanel.Dock="Right"
                                  ItemsSource="{h:GetRange Start=1,
                                                           Count=20}"
                                  SelectedItem="{Binding ViewModel.Collection.PageCount}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.Label}}"
                                  Visibility="{Binding UsePageCount, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                    </DockPanel>

                    <Separator Margin="0,5,0,2" DockPanel.Dock="Bottom" />

                    <ScrollViewer>
                        <ItemsControl ItemsPanel="{Binding ElementName=cb, Path=SelectedItem.ItemsPanelTemplate, Mode=TwoWay}" ItemsSource="{Binding ViewModel.Collection.Source}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{DynamicResource {x:Static h:BorderKeys.CardBorderBrush}}">
                                        <Grid>
                                            <h:PropertyGrid VerticalAlignment="Stretch"
                                                            SelectObject="{Binding Model}"
                                                            Style="{DynamicResource {x:Static h:PropertyGrid.ClearlyKey}}"
                                                            UsePropertyView="True">

                                                <!--<h:PropertyGrid.BottomContent>
                                                <DockPanel LastChildFill="False">
                                                    <UniformGrid DockPanel.Dock="Right" Rows="1">
                                                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.DeleteCommand}"
                                                                DockPanel.Dock="Right"
                                                                Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                                                Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDelete, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                            <h:Interaction.Behaviors>
                                                                <h:SelectListBoxItemElementBehavior />
                                                            </h:Interaction.Behaviors>
                                                        </Button>

                                                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.EditCommand}"
                                                                DockPanel.Dock="Right"
                                                                Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}"
                                                                Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseEdit, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                            <h:Interaction.Behaviors>
                                                                <h:SelectListBoxItemElementBehavior />
                                                            </h:Interaction.Behaviors>
                                                        </Button>

                                                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=local:RepositoryView}, Path=DataContext.DetialCommand}"
                                                                DockPanel.Dock="Right"
                                                                Style="{DynamicResource {x:Static h:ButtonKeys.Detial}}"
                                                                Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseDetial, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                            <h:Interaction.Behaviors>
                                                                <h:SelectListBoxItemElementBehavior />
                                                            </h:Interaction.Behaviors>
                                                        </Button>

                                                    </UniformGrid>

                                                    <CheckBox Content="选择"
                                                              DockPanel.Dock="Left"
                                                              IsChecked="{Binding IsSelected}"
                                                              Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckBox, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                                                </DockPanel>

                                            </h:PropertyGrid.BottomContent>-->
                                            </h:PropertyGrid>

                                            <DockPanel Margin="-10" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <Button x:Name="btn_edit"
                                                        h:Cattach.Icon="{x:Static h:Icons.Eye}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewModel.ViewCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewModel.UseView}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <Button h:Cattach.Icon="{x:Static h:Icons.Edit}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewModel.EditCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewModel.UseEdit}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <Button h:Cattach.Icon="{x:Static h:Icons.Delete}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewModel.DeleteCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewModel.UseDelete}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </DockPanel>

                                            <!--<CheckBox IsChecked="{Binding IsSelect}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0"/>-->
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </DockPanel>

                <h:AutoColumnPagedDataGrid x:Name="dg"
                                           AutoGenerateColumns="False"
                                           BindingPath="Model.{0}"
                                           BorderThickness="0"
                                           DataSource="{Binding ViewModel.Collection.Cache}"
                                           IsReadOnly="False"
                                           ModelType="{Binding ViewModel.ModelType}"
                                           PageCount="{Binding ViewModel.Collection.PageCount}"
                                           SelectedItem="{Binding ViewModel.SelectedItem}"
                                           UsePageCount="{Binding UsePageCount}"
                                           UseSearch="{Binding UseSearch}">
                    <h:AutoColumnPagedDataGrid.HomeColumns>
                        <DataGridTemplateColumn Width="Auto"
                                                CellTemplate="{DynamicResource {x:Static h:DataGridTemplateColumnKeys.CheckAllCell}}"
                                                Header="序号"
                                                HeaderTemplate="{DynamicResource {x:Static h:DataGridTemplateColumnKeys.CheckAllHeader}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.UseCheckAll, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                        <!--<DataGridTemplateColumn >
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox h:Cattach.MouseOverForeground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.CheckedAllCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                              Content="全选"
                                              Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                              Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckAll, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Path=Foreground}" IsChecked="{Binding IsSelected}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                    </h:AutoColumnPagedDataGrid.HomeColumns>
                    <h:AutoColumnPagedDataGrid.EndColumns>
                        <DataGridTemplateColumn Width="Auto" Header="操作">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.DeleteCommand}"
                                                CommandParameter="{Binding Model}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseDelete, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>

                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.EditCommand}"
                                                CommandParameter="{Binding Model}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseEdit, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>

                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.ViewCommand}"
                                                CommandParameter="{Binding Model}"
                                                Content="查看"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseView, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>
                                    </DockPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </h:AutoColumnPagedDataGrid.EndColumns>
                </h:AutoColumnPagedDataGrid>
            </Grid>

            <h:Interaction.Triggers>
                <h:EventTrigger EventName="Loaded">
                    <h:InvokeCommandAction Command="{Binding ViewModel.LoadedCommand}" />
                    <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
                </h:EventTrigger>
            </h:Interaction.Triggers>
        </DockPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DisplayMode}" Value="ListBox">
                <Setter TargetName="dg" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="lb" Property="Visibility" Value="Visible" />
                <!--<Setter TargetName="bt_gridset" Property="Visibility" Value="Collapsed" />-->
            </DataTrigger>

            <DataTrigger Binding="{Binding DisplayMode}" Value="DataGrid">
                <Setter TargetName="dg" Property="Visibility" Value="Visible" />
                <Setter TargetName="lb" Property="Visibility" Value="Collapsed" />
                <!--<Setter TargetName="cb_all" Property="Visibility" Value="Collapsed" />-->
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:RepositoryPropertyChangedPresenterBase}">
        <DockPanel>
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <Button Margin="2,0"
                        Command="{Binding AddCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        DockPanel.Dock="Left"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                        Visibility="{Binding UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <!--<Button Command="{Binding ViewModel.AddCommand}"
                        Content=""
                        DockPanel.Dock="Right"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

                <Button Command="{Binding DeleteCheckedCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                        Visibility="{Binding UseDeleteChecked, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ClearCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        DockPanel.Dock="Left"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                        Visibility="{Binding UseClear, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />



                <Button Command="{Binding ExportCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding UseExport, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

            </DockPanel>

            <Separator Margin="0,5,0,2" DockPanel.Dock="Top" />

            <Grid>
                <DockPanel x:Name="lb">
                    <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" DockPanel.Dock="Bottom" Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UsePagination, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.FontSize16}}">
                                <Run Text="第" />
                                <Run FontWeight="Black" Text="{Binding Collection.MinValue, FallbackValue=0}" />
                                <Run Text="到" />
                                <Run FontWeight="Black" Text="{Binding Collection.MaxValue, FallbackValue=0}" />
                                <Run Text="条记录，共" />
                                <Run FontWeight="Black" Text="{Binding Collection.Total}" />
                                <Run Text="条" />
                            </TextBlock>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <h:Pagination Width="600" MaxPageCount="{Binding Collection.TotalPage, Mode=TwoWay}" PageIndex="{Binding Collection.PageIndex, Mode=TwoWay}" />
                        </StackPanel>
                    </Grid>

                    <DockPanel Margin="0,2" DockPanel.Dock="Bottom" LastChildFill="False">

                        <TextBox Width="250"
                                 h:Cattach.BackgroundColumn="1"
                                 h:Cattach.Title="搜索"
                                 Style="{DynamicResource {x:Static h:TextBoxKeys.Label}}"
                                 Text="{Binding SearchText}"
                                 Visibility="{Binding UseSearch, Converter={x:Static h:Converter.GetTrueToVisible}}">
                            <h:Interaction.Triggers>
                                <!--<h:EventTrigger EventName="TextChanged">
                                                <h:InvokeCommandAction Command="{Binding SearchTextCommand}"/>
                                            </h:EventTrigger>-->
                                <h:KeyTrigger Key="Enter">
                                    <h:InvokeCommandAction Command="{Binding SearchTextCommand}" />
                                </h:KeyTrigger>
                            </h:Interaction.Triggers>
                        </TextBox>
                        <ComboBox x:Name="cb"
                                  h:Cattach.BackgroundColumn="1"
                                  h:Cattach.Title="布局"
                                  DockPanel.Dock="Right"
                                  SelectedIndex="{Binding LayoutSelectedIndex}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}"
                                  Visibility="{Binding UseLayout, Converter={x:Static h:Converter.GetTrueToVisible}}">
                            <ComboBox.ItemsSource>
                                <x:Array Type="{x:Type local:ItemsPanelTemplateDisplay}">
                                    <local:ItemsPanelTemplateDisplay Name="StackPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <StackPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="StackPanel-Horizontal">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(3)">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="3" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(2)">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="2" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="CirclePanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:CirclePanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="CrossPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:CrossPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="DockPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:DockPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="DragPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:DragPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="PagePanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:PagePanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>
                                </x:Array>
                            </ComboBox.ItemsSource>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <ComboBox h:Cattach.BackgroundColumn="1"
                                  h:Cattach.Title="显示条数"
                                  DockPanel.Dock="Right"
                                  ItemsSource="{h:GetRange Start=1,
                                                           Count=20}"
                                  SelectedItem="{Binding Collection.PageCount}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.Label}}"
                                  Visibility="{Binding UsePageCount, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                    </DockPanel>

                    <Separator Margin="0,5,0,2" DockPanel.Dock="Bottom" />

                    <ScrollViewer>
                        <ItemsControl ItemsPanel="{Binding ElementName=cb, Path=SelectedItem.ItemsPanelTemplate, Mode=TwoWay}" ItemsSource="{Binding ViewModel.Collection.Source}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{DynamicResource {x:Static h:BorderKeys.CardBorderBrush}}">
                                        <Grid>
                                            <h:PropertyGrid VerticalAlignment="Stretch"
                                                            SelectObject="{Binding Model}"
                                                            Style="{DynamicResource {x:Static h:PropertyGrid.ClearlyKey}}"
                                                            UsePropertyView="True" />

                                            <DockPanel Margin="-10" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <Button x:Name="btn_edit"
                                                        h:Cattach.Icon="{x:Static h:Icons.Eye}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UseView}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <Button h:Cattach.Icon="{x:Static h:Icons.Edit}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.EditCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UseEdit}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <Button h:Cattach.Icon="{x:Static h:Icons.Delete}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.DeleteCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UseDelete}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </DockPanel>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </DockPanel>

                <h:AutoColumnPagedDataGrid x:Name="dg"
                                           AutoGenerateColumns="False"
                                           BindingPath="Model.{0}"
                                           BorderThickness="0"
                                           DataSource="{Binding Collection.Cache}"
                                           IsReadOnly="False"
                                           ModelType="{Binding ModelType}"
                                           PageCount="{Binding Collection.PageCount}"
                                           SelectedItem="{Binding SelectedItem}"
                                           UsePageCount="{Binding UsePageCount}"
                                           UseSearch="{Binding UseSearch}">
                    <h:AutoColumnPagedDataGrid.HomeColumns>
                        <DataGridTemplateColumn Width="Auto"
                                                CellTemplate="{DynamicResource {x:Static h:DataGridTemplateColumnKeys.CheckAllCell}}"
                                                Header="序号"
                                                HeaderTemplate="{DynamicResource {x:Static h:DataGridTemplateColumnKeys.CheckAllHeader}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseCheckAll, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                        <!--<DataGridTemplateColumn >
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox h:Cattach.MouseOverForeground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.CheckedAllCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                              Content="全选"
                                              Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                              Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckAll, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Path=Foreground}" IsChecked="{Binding IsSelected}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                    </h:AutoColumnPagedDataGrid.HomeColumns>
                    <h:AutoColumnPagedDataGrid.EndColumns>
                        <DataGridTemplateColumn Width="Auto" Header="操作">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.DeleteCommand}"
                                                CommandParameter="{Binding Model}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseDelete, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>

                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.EditCommand}"
                                                CommandParameter="{Binding Model}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseEdit, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>

                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewCommand}"
                                                CommandParameter="{Binding Model}"
                                                Content="查看"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseView, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>
                                    </DockPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </h:AutoColumnPagedDataGrid.EndColumns>
                </h:AutoColumnPagedDataGrid>
            </Grid>

            <h:Interaction.Triggers>
                <h:EventTrigger EventName="Loaded">
                    <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
                </h:EventTrigger>
            </h:Interaction.Triggers>
        </DockPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DisplayMode}" Value="ListBox">
                <Setter TargetName="dg" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="lb" Property="Visibility" Value="Visible" />
                <!--<Setter TargetName="bt_gridset" Property="Visibility" Value="Collapsed" />-->
            </DataTrigger>

            <DataTrigger Binding="{Binding DisplayMode}" Value="DataGrid">
                <Setter TargetName="dg" Property="Visibility" Value="Visible" />
                <Setter TargetName="lb" Property="Visibility" Value="Collapsed" />
                <!--<Setter TargetName="cb_all" Property="Visibility" Value="Collapsed" />-->
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>
