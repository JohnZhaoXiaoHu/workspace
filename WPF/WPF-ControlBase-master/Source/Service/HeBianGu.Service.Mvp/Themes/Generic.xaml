<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Service.Mvp">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowCaptionViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowContentViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowMenuViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowMessageViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowOverViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowSideEditViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowSideMenuPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowStatusViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowToolbarViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/Window/WindowTreeViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/CopyRightViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/HideWindowViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/HomeViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/AsnycProgressViewPresenter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Service.Mvp;component/Presenter/MoreViewPresenter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Button.Mvp.Icon, TypeInTargetAssembly={x:Type local:MvpKeys}}" BasedOn="{StaticResource {x:Static h:ButtonKeys.Icon}}" TargetType="{x:Type Button}">
        <Setter Property="h:Cattach.IconSize" Value="20" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <!--<Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CaptionForeground), RelativeSource={RelativeSource AncestorType=Window}}" />-->
        <Setter Property="h:Cattach.UseGuide" Value="True" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Foreground}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverForeground)}" />
        <Setter Property="h:Cattach.PressForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.PressForeground)}" />
        <Setter Property="Command" Value="{Binding InvokeCommand}" />
        <Setter Property="h:Cattach.Icon" Value="{Binding Icon}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding Name}" />
        <Setter Property="h:Cattach.GuideData" Value="{Binding Description}" />
        <Setter Property="ToolTip" Value="{Binding Description}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAuthority}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Button.Mvp.Default, TypeInTargetAssembly={x:Type local:MvpKeys}}" BasedOn="{StaticResource {x:Static h:ButtonKeys.Transparent}}" TargetType="{x:Type Button}">
        <Setter Property="h:Cattach.IconSize" Value="20" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Foreground}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverForeground)}" />
        <Setter Property="h:Cattach.PressForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Foreground}" />
        <Setter Property="h:Cattach.UseGuide" Value="True" />
        <Setter Property="Command" Value="{Binding InvokeCommand}" />
        <Setter Property="h:Cattach.Icon" Value="{Binding Icon}" />
        <Setter Property="Content" Value="{Binding Name}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding Name}" />
        <Setter Property="h:Cattach.GuideData" Value="{Binding Description}" />
        <Setter Property="h:Cattach.UseMouseOverScale" Value="True" />
        <Setter Property="h:Cattach.UseMouseOverOpacity" Value="True" />
        <Setter Property="ToolTip" Value="{Binding Description}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAuthority}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ToggleButton.Mvp.Default, TypeInTargetAssembly={x:Type local:MvpKeys}}" BasedOn="{StaticResource {x:Static h:ToggleButtonKeys.BrushFIconChecked}}" TargetType="{x:Type ToggleButton}">
        <Setter Property="h:Cattach.IconSize" Value="20" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="h:Cattach.UncheckForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.UncheckForeground)}" />
        <Setter Property="h:Cattach.CheckedForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.CheckedForeground)}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverForeground)}" />
        <Setter Property="h:Cattach.PressForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.PressForeground)}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Foreground}" />
        <Setter Property="h:Cattach.UseGuide" Value="True" />
        <!--<Setter Property="Command" Value="{Binding InvokeCommand}" />-->
        <Setter Property="h:Cattach.Icon" Value="{Binding Icon}" />
        <Setter Property="h:Cattach.CheckedIcon" Value="{Binding Icon}" />
        <Setter Property="h:Cattach.UncheckedIcon" Value="{Binding Icon}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding Name}" />
        <Setter Property="h:Cattach.GuideData" Value="{Binding Description}" />
        <Setter Property="ToolTip" Value="{Binding Description}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAuthority}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.MenuItem.Mvp.Default, TypeInTargetAssembly={x:Type local:MvpKeys}}" BasedOn="{StaticResource {x:Static h:MenuItemKeys.Icon}}" TargetType="{x:Type MenuItem}">
        <Setter Property="h:Cattach.IconSize" Value="20" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!--<Setter Property="Foreground" Value="{Binding Path=(h:Cattach.CaptionForeground), RelativeSource={RelativeSource AncestorType=h:MainWindowBase}}" />-->
        <Setter Property="h:Cattach.CheckedForeground" Value="{Binding Path=(h:Cattach.CaptionForeground), RelativeSource={RelativeSource AncestorType=h:MainWindowBase}}" />
        <Setter Property="h:Cattach.UseGuide" Value="True" />
        <Setter Property="Command" Value="{Binding InvokeCommand}" />
        <Setter Property="Icon" Value="{Binding Icon}" />
        <Setter Property="Header" Value="{Binding Name}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding Name}" />
        <Setter Property="h:Cattach.GuideData" Value="{Binding Description}" />
        <Setter Property="h:Cattach.UseMouseOverScale" Value="True" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel>
                        <DockPanel>
                            <TextBlock VerticalAlignment="Center" Text="{Binding}" />
                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=DataContext.Flag, IsAsync=True}" />
                        </DockPanel>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="h:Cattach.UseMouseOverOpacity" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAuthority}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ItemsControl.Mvp.WindowCaption, TypeInTargetAssembly={x:Type local:MvpKeys}}" BasedOn="{StaticResource {x:Type ItemsControl}}" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding Path=CaptionForeground, RelativeSource={RelativeSource AncestorType=Window}}" />
        <Setter Property="h:Cattach.PressForeground" Value="{Binding Path=CaptionForeground, RelativeSource={RelativeSource AncestorType=Window}}" />
        <Setter Property="h:Cattach.CheckedForeground" Value="{Binding Path=CaptionForeground, RelativeSource={RelativeSource AncestorType=Window}}" />
        <Setter Property="Foreground" Value="{Binding Path=CaptionForeground, RelativeSource={RelativeSource AncestorType=Window}}" />
        <Setter Property="ItemsSource" Value="{Binding Source={x:Static h:WindowCaptionvper.Instance}, Path=Presenters}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAuthority}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate DataType="{x:Type local:InvokePresenterBase}">
        <Button Style="{DynamicResource {x:Static local:MvpKeys.Button}}" />
    </DataTemplate>
</ResourceDictionary>
