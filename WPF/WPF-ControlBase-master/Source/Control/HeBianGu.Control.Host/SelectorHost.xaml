<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.Host">


    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.Default, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" TargetType="ContentControl">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Collapsed"/> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource AncestorType=local:HostBase},Path=HostData}"/>
    </Style>


    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.Left, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.Right, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.Top, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.Bottom, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.LeftTop, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.LeftBottom, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.RightTop, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Container.RightBottom, TypeInTargetAssembly={x:Type local:HostContianerKeys}}" BasedOn="{StaticResource {x:Static local:HostContianerKeys.DefaultKey}}" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="S.HostBase.Default" TargetType="{x:Type local:HostBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HostBase}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContainerStyle" Value="{DynamicResource {x:Static local:HostContianerKeys.DefaultKey}}"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.SelectorHost.Default, TypeInTargetAssembly={x:Type local:SelectorHost}}" BasedOn="{StaticResource S.HostBase.Default}" TargetType="{x:Type local:SelectorHost}">
        <Setter Property="Duration" Value="00:00:00.2"/>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:SelectorHost.DefaultKey}}" TargetType="{x:Type local:SelectorHost}" />

</ResourceDictionary>

