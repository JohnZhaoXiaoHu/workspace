<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.TopContainer">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GitTopContainer.Dynamic, TypeInTargetAssembly={x:Type local:GitTopContainer}}" BasedOn="{StaticResource {x:Static h:ControlKeys.ForegroundDynamic}}" TargetType="{x:Type local:GitTopContainer}">
        <Setter Property="CoverVisibility" Value="Collapsed" />
        <Setter Property="HeaderHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />-->
        <Setter Property="h:Cattach.IconSize" Value="50" />
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopContainer}">
                    <Grid Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Border Height="{TemplateBinding HeaderHeight}" Background="{TemplateBinding Background}" DockPanel.Dock="{TemplateBinding DockPanel.Dock}" />
                            <ContentPresenter ContentSource="CenterContent" />
                        </DockPanel>

                        <Border x:Name="PART_COVER"
                                Grid.RowSpan="2"
                                Background="{DynamicResource {x:Static h:BrushKeys.DialogCover}}"
                                Visibility="{TemplateBinding CoverVisibility}" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="h:Cattach.Behaviors">
            <Setter.Value>
                <h:Behaviors>
                    <h:LoadedAdornerBehavior AdornerType="{x:Type h:WaterMarkAdorner}" />
                </h:Behaviors>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GitTopContainer.Default, TypeInTargetAssembly={x:Type local:GitTopContainer}}" BasedOn="{StaticResource {x:Static local:GitTopContainer.DynamicKey}}" TargetType="{x:Type local:GitTopContainer}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GitTopContainer.Toggle, TypeInTargetAssembly={x:Type local:GitTopContainer}}" BasedOn="{StaticResource {x:Static local:GitTopContainer.DefaultKey}}" TargetType="{x:Type local:GitTopContainer}">
        <Setter Property="h:Cattach.IconSize" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopContainer}">
                    <Grid Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Border Height="{TemplateBinding HeaderHeight}" Background="{TemplateBinding Background}" DockPanel.Dock="Top" />
                            <ContentPresenter ContentSource="CenterContent" />
                        </DockPanel>

                        <ToggleButton x:Name="tg"
                                      Height="Auto"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"
                                      h:Cattach.Icon="&#xe635;"
                                      h:Cattach.IconSize="{TemplateBinding h:Cattach.IconSize}"
                                      Content="&#xe639;"
                                      Style="{DynamicResource {x:Static h:ToggleButtonKeys.DoubleFIconChecked}}">
                            <h:Interaction.Triggers>
                                <h:EventTrigger EventName="MouseEnter">
                                    <h:ChangePropertyAction PropertyName="IsChecked" Value="true" />
                                </h:EventTrigger>
                            </h:Interaction.Triggers>
                        </ToggleButton>

                        <Border x:Name="PART_COVER"
                                Grid.RowSpan="2"
                                Background="{DynamicResource {x:Static h:BrushKeys.DialogCover}}"
                                Visibility="{TemplateBinding CoverVisibility}" />

                        <ItemsPresenter Visibility="{Binding ElementName=tg, Path=IsChecked, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GitTopItem.Dynamic, TypeInTargetAssembly={x:Type local:GitTopItem}}" BasedOn="{StaticResource {x:Static h:ControlKeys.ForegroundDynamic}}" TargetType="{x:Type local:GitTopItem}">
        <!--<Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent" />-->
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />-->
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="DockPanel.Dock" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}, Path=(DockPanel.Dock)}" />
        <Setter Property="HeaderHeight" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}, Path=HeaderHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopItem}">
                    <Grid>
                        <DockPanel x:Name="sp_scene" Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" Visibility="Collapsed">
                            <Border Height="{TemplateBinding HeaderHeight}" DockPanel.Dock="{TemplateBinding DockPanel.Dock}" />
                            <ContentPresenter />
                        </DockPanel>

                        <ToggleButton x:Name="tb_scene"
                                      Height="{TemplateBinding HeaderHeight}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Background="{TemplateBinding Background}"
                                      Content="{TemplateBinding HeaderContent}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}">

                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="h:Cattach.IconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Small}}" />
                                    <Setter Property="h:Cattach.IconMargin" Value="10,0" />
                                    <Setter Property="h:Cattach.Icon" Value="&#xe63a;" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>

                                                    <Border x:Name="border"
                                                            Grid.ColumnSpan="2"
                                                            Margin="{TemplateBinding Padding}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <ContentPresenter />
                                                    </Border>

                                                    <TextBlock x:Name="Icon"
                                                               Grid.Column="1"
                                                               Margin="{TemplateBinding h:Cattach.IconMargin}"
                                                               HorizontalAlignment="Right"
                                                               h:Cattach.AllowsAnimation="{TemplateBinding IsChecked}"
                                                               FontSize="{Binding Path=(h:Cattach.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                                               Foreground="{TemplateBinding Foreground}"
                                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                               Text="{TemplateBinding h:Cattach.Icon}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.MouseOver}}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" Value="0.7" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="border" Property="Background" Value="{Binding Path=(h:Cattach.SelectBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                                                    </Trigger>

                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopItem}, Path=Foreground}" />
                                                    </Trigger>

                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <ToggleButton.Triggers>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <!--<DoubleAnimation From="0.5" To="1" Duration="00:00:00.5" Storyboard.Target="{Binding ElementName=bd_cover}" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>-->

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimation Storyboard.Target="{Binding ElementName=sp_scene}"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.5" To="1"
                                                             Duration="00:00:00.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <!--<DoubleAnimation From="1" To="0"  Duration="00:00:00.5"  Storyboard.Target="{Binding ElementName=bd_cover}" Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>-->

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimation Storyboard.Target="{Binding ElementName=sp_scene}"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="1" To="0"
                                                             Duration="00:00:00.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{ComponentResourceKey ResourceId=S.GitTopItem.Default, TypeInTargetAssembly={x:Type local:GitTopItem}}" BasedOn="{StaticResource {x:Static local:GitTopItem.DynamicKey}}" TargetType="{x:Type local:GitTopItem}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GitTopItem.Circle, TypeInTargetAssembly={x:Type local:GitTopItem}}" TargetType="{x:Type local:GitTopItem}">
        <!--<Setter Property="h:Cattach.CheckedBackgroundBrush" Value="Transparent" />-->
        <Setter Property="h:Cattach.IconSize" Value="50" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="HeaderHeight" Value="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}, Path=HeaderHeight}" />
        <Setter Property="h:TransitionService.VisibleActions">
            <Setter.Value>
                <h:TransitionCollection>
                    <h:ScaleTransition />
                </h:TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GitTopItem}">
                    <Grid>
                        <Grid x:Name="sp_scene"
                              h:TransitionService.IsVisible="{Binding ElementName=tb_scene, Path=IsChecked}"
                              h:TransitionService.VisibleActions="{TemplateBinding h:TransitionService.VisibleActions}"
                              Visibility="Collapsed">
                            <ContentPresenter />
                        </Grid>

                        <ToggleButton x:Name="tb_scene"
                                      Height="Auto"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      h:Cattach.IconSize="{TemplateBinding h:Cattach.IconSize}"
                                      Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HeaderContent}"
                                      ContentTemplate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HeaderTemplate}"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}"
                                      Style="{DynamicResource {x:Static h:ToggleButtonKeys.Accent}}">
                            <ToggleButton.Triggers>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType=local:GitTopContainer}}" Storyboard.TargetProperty="CoverVisibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding ElementName=sp_scene}" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:01">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
