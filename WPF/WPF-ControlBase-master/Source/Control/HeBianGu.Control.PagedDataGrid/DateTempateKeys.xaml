<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.PagedDataGrid">
    <DataTemplate x:Key="{ComponentResourceKey ResourceId=S.RepositoryViewModel.GridDate, TypeInTargetAssembly={x:Type local:RepositoryViewModelKeys}}">
        <DockPanel Background="{DynamicResource {x:Static h:BrushKeys.Dark0_3}}">
            <DockPanel Margin="0,2" DockPanel.Dock="Top" LastChildFill="False">
                <DatePicker h:Cattach.Title="起始日期" SelectedDate="{Binding StartTime}" Style="{DynamicResource {x:Static h:DatePickerKeys.Label}}" />
                <TextBlock VerticalAlignment="Center" Text=" - " />
                <DatePicker h:Cattach.Title="结束日期" SelectedDate="{Binding EndTime}" Style="{DynamicResource {x:Static h:DatePickerKeys.Label}}" />
                <Button Command="{Binding LoadedCommand}" Content="查询" />

                <Button Command="{Binding ExportCommand}" Content="导出" DockPanel.Dock="Right" />
                <Button Command="{Binding PrintCommand}" Content="打印" DockPanel.Dock="Right" />
            </DockPanel>
            <local:AutoColumnPagedDataGrid Margin="2"
                                           h:Cattach.CornerRadius="6"
                                           AutoGenerateColumns="False"
                                           BindingPath="Model.{0}"
                                           DataSource="{Binding Collection.Source}"
                                           PageCount="12" />
            <h:Interaction.Triggers>
                <h:EventTrigger EventName="Loaded">
                    <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
                </h:EventTrigger>
            </h:Interaction.Triggers>
        </DockPanel>
    </DataTemplate>
    <!--  后面完善全功能  -->
    <DataTemplate x:Key="{ComponentResourceKey ResourceId=S.RepositoryViewModel.GridAll, TypeInTargetAssembly={x:Type local:RepositoryViewModelKeys}}">
        <DockPanel>
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <Button Margin="2,0"
                        Command="{Binding AddCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        DockPanel.Dock="Left"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                        Visibility="{Binding UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <!--<Button Command="{Binding ViewModel.AddCommand}"
                        Content=""
                        DockPanel.Dock="Right"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Add}}"
                        Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseAdd, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />-->

                <Button Command="{Binding DeleteCheckedCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                        Visibility="{Binding UseDeleteChecked, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                <Button Command="{Binding ClearCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        DockPanel.Dock="Left"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                        Visibility="{Binding UseClear, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />



                <Button Command="{Binding ExportCommand}"
                        Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                        Visibility="{Binding UseExport, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

            </DockPanel>

            <Separator Margin="0,5,0,2" DockPanel.Dock="Top" />

            <Grid>
                <DockPanel x:Name="lb">
                    <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" DockPanel.Dock="Bottom">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <TextBlock Style="{DynamicResource {x:Static h:TextBlockKeys.FontSize16}}">
                                <Run Text="第" />
                                <Run FontWeight="Black" Text="{Binding Collection.MinValue, FallbackValue=0}" />
                                <Run Text="到" />
                                <Run FontWeight="Black" Text="{Binding Collection.MaxValue, FallbackValue=0}" />
                                <Run Text="条记录，共" />
                                <Run FontWeight="Black" Text="{Binding Collection.Total}" />
                                <Run Text="条" />
                            </TextBlock>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <local:Pagination Width="600" MaxPageCount="{Binding Collection.TotalPage, Mode=TwoWay}" PageIndex="{Binding Collection.PageIndex, Mode=TwoWay}" />
                        </StackPanel>
                    </Grid>

                    <DockPanel Margin="0,2" DockPanel.Dock="Bottom" LastChildFill="False">

                        <TextBox Width="250"
                                 h:Cattach.BackgroundColumn="1"
                                 h:Cattach.Title="搜索"
                                 Style="{DynamicResource {x:Static h:TextBoxKeys.Label}}"
                                 Text="{Binding SearchText}"
                                 Visibility="{Binding UseSearch, Converter={x:Static h:Converter.GetTrueToVisible}}">
                            <h:Interaction.Triggers>
                                <!--<h:EventTrigger EventName="TextChanged">
                                                <h:InvokeCommandAction Command="{Binding SearchTextCommand}"/>
                                            </h:EventTrigger>-->
                                <h:KeyTrigger Key="Enter">
                                    <h:InvokeCommandAction Command="{Binding SearchTextCommand}" />
                                </h:KeyTrigger>
                            </h:Interaction.Triggers>
                        </TextBox>
                        <ComboBox x:Name="cb"
                                  h:Cattach.BackgroundColumn="1"
                                  h:Cattach.Title="布局"
                                  DockPanel.Dock="Right"
                                  SelectedIndex="{Binding LayoutSelectedIndex}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}"
                                  Visibility="{Binding UseLayout, Converter={x:Static h:Converter.GetTrueToVisible}}">
                            <!--<ComboBox.ItemsSource>
                                <x:Array Type="{x:Type local:ItemsPanelTemplateDisplay}">
                                    <local:ItemsPanelTemplateDisplay Name="StackPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <StackPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="StackPanel-Horizontal">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(3)">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="3" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="UniformGrid(2)">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="2" />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="CirclePanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:CirclePanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="CrossPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:CrossPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="DockPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:DockPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="DragPanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:DragPanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>

                                    <local:ItemsPanelTemplateDisplay Name="PagePanel">
                                        <local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                            <ItemsPanelTemplate>
                                                <h:PagePanel />
                                            </ItemsPanelTemplate>
                                        </local:ItemsPanelTemplateDisplay.ItemsPanelTemplate>
                                    </local:ItemsPanelTemplateDisplay>
                                </x:Array>
                            </ComboBox.ItemsSource>-->
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <ComboBox h:Cattach.BackgroundColumn="1"
                                  h:Cattach.Title="显示条数"
                                  DockPanel.Dock="Right"
                                  ItemsSource="{h:GetRange Start=1,
                                                           Count=20}"
                                  SelectedItem="{Binding Collection.PageCount}"
                                  Style="{DynamicResource {x:Static h:ComboBoxKeys.Label}}"
                                  Visibility="{Binding UsePageCount, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                    </DockPanel>

                    <Separator Margin="0,5,0,2" DockPanel.Dock="Bottom" />

                    <ScrollViewer>
                        <ItemsControl ItemsPanel="{Binding ElementName=cb, Path=SelectedItem.ItemsPanelTemplate, Mode=TwoWay}" ItemsSource="{Binding ViewModel.Collection.Source}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{DynamicResource {x:Static h:BorderKeys.CardBorderBrush}}">
                                        <Grid>
                                            <h:PropertyGrid VerticalAlignment="Stretch"
                                                            SelectObject="{Binding Model}"
                                                            Style="{DynamicResource {x:Static h:PropertyGrid.ClearlyKey}}"
                                                            UsePropertyView="True" />

                                            <DockPanel Margin="-10" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <Button x:Name="btn_edit"
                                                        h:Cattach.Icon="{x:Static h:Icons.Eye}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ViewCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UseView}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <Button h:Cattach.Icon="{x:Static h:Icons.Edit}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.EditCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UseEdit}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <Button h:Cattach.Icon="{x:Static h:Icons.Delete}"
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.DeleteCommand}"
                                                        CommandParameter="{Binding Model}"
                                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Name}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=IsMouseOver}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UseDelete}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </DockPanel>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </DockPanel>

                <local:AutoColumnPagedDataGrid x:Name="dg"
                                           AutoGenerateColumns="False"
                                           BindingPath="Model.{0}"
                                           BorderThickness="0"
                                           DataSource="{Binding Collection.Cache}"
                                           IsReadOnly="False"
                                           ModelType="{Binding ModelType}"
                                           PageCount="{Binding Collection.PageCount}"
                                           SelectedItem="{Binding SelectedItem}"
                                           UsePageCount="{Binding UsePageCount}"
                                           UseSearch="{Binding UseSearch}">
                    <local:AutoColumnPagedDataGrid.HomeColumns>
                        <DataGridTemplateColumn Width="Auto"
                                                CellTemplate="{DynamicResource {x:Static h:DataGridTemplateColumnKeys.CheckAllCell}}"
                                                Header="序号"
                                                HeaderTemplate="{DynamicResource {x:Static h:DataGridTemplateColumnKeys.CheckAllHeader}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseCheckAll, Converter={x:Static h:Converter.GetTrueToVisible}}" />
                        <!--<DataGridTemplateColumn >
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox h:Cattach.MouseOverForeground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewModel.CheckedAllCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                              Content="全选"
                                              Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"
                                              Visibility="{Binding Source={x:Static sys:RepositorySetting.Instance}, Path=UseCheckAll, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Path=Foreground}" IsChecked="{Binding IsSelected}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                    </local:AutoColumnPagedDataGrid.HomeColumns>
                    <local:AutoColumnPagedDataGrid.EndColumns>
                        <DataGridTemplateColumn Width="Auto" Header="操作">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.DeleteCommand}"
                                                CommandParameter="{Binding Model}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseDelete, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>

                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.EditCommand}"
                                                CommandParameter="{Binding Model}"
                                                Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseEdit, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>

                                        <Button Width="Auto"
                                                Height="Auto"
                                                Padding="1"
                                                h:Cattach.Icon=""
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ViewCommand}"
                                                CommandParameter="{Binding Model}"
                                                Content="查看"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UseView, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                            <h:Interaction.Behaviors>
                                                <h:SelectListBoxItemElementBehavior />
                                            </h:Interaction.Behaviors>
                                        </Button>
                                    </DockPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </local:AutoColumnPagedDataGrid.EndColumns>
                </local:AutoColumnPagedDataGrid>
            </Grid>

            <h:Interaction.Triggers>
                <h:EventTrigger EventName="Loaded">
                    <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
                </h:EventTrigger>
            </h:Interaction.Triggers>
        </DockPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DisplayMode}" Value="ListBox">
                <Setter TargetName="dg" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="lb" Property="Visibility" Value="Visible" />
                <!--<Setter TargetName="bt_gridset" Property="Visibility" Value="Collapsed" />-->
            </DataTrigger>

            <DataTrigger Binding="{Binding DisplayMode}" Value="DataGrid">
                <Setter TargetName="dg" Property="Visibility" Value="Visible" />
                <Setter TargetName="lb" Property="Visibility" Value="Collapsed" />
                <!--<Setter TargetName="cb_all" Property="Visibility" Value="Collapsed" />-->
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


</ResourceDictionary>