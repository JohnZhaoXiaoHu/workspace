<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.Screen">

    <Style x:Key="{ComponentResourceKey ResourceId=S.ScreenCover.Default, TypeInTargetAssembly={x:Type local:ScreenCover}}" TargetType="{x:Type local:ScreenCover}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}"/>
        <Setter Property="RenderTransform" Value="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ScreenCover}">
                    <Border Background="{TemplateBinding Background}" OpacityMask="{TemplateBinding ImageBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ScreenCover.Cross.1, TypeInTargetAssembly={x:Type local:ScreenCover}}" BasedOn="{StaticResource {x:Static local:ScreenCover.DefaultKey}}" TargetType="{x:Type local:ScreenCover}">
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Height" Value="300"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ScreenCover}">
                    <Border>
                        <Grid>
                            <Border RenderTransformOrigin="0.5,0.5" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" Background="{DynamicResource {x:Static h:CoverImageBrushKeys.C1}}" h:StoryService.IsStart="True">
                                <h:StoryService.Storys>
                                    <h:StoryCollection>
                                        <h:AngleStory Duration="20000"/>
                                    </h:StoryCollection>
                                </h:StoryService.Storys>
                            </Border>
                            <Border RenderTransformOrigin="0.5,0.5" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" Background="{DynamicResource {x:Static h:CoverImageBrushKeys.C2}}" h:StoryService.IsStart="True">
                                <h:StoryService.Storys>
                                    <h:StoryCollection>
                                        <h:AngleStory Duration="20000" From="300" To="0"/>
                                    </h:StoryCollection>
                                </h:StoryService.Storys>
                            </Border>
                            <Border RenderTransformOrigin="0.5,0.5" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" Background="{DynamicResource {x:Static h:CoverImageBrushKeys.C3}}" h:StoryService.IsStart="True">
                                <h:StoryService.Storys>
                                    <h:StoryCollection>
                                        <h:AngleStory Duration="20000"/>
                                    </h:StoryCollection>
                                </h:StoryService.Storys>
                            </Border>

                            <ContentPresenter/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    
    
    <Style x:Key="{ComponentResourceKey ResourceId=S.ScreenCover.Background.1, TypeInTargetAssembly={x:Type local:ScreenCover}}" BasedOn="{StaticResource {x:Static local:ScreenCover.DefaultKey}}" TargetType="{x:Type local:ScreenCover}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}"/>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:ScreenCover.DefaultKey}}" TargetType="{x:Type local:ScreenCover}" />

</ResourceDictionary>

