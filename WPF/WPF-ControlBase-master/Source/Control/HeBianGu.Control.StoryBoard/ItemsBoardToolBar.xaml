<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.StoryBoard">

    <Style BasedOn="{StaticResource {x:Static h:ListBoxKeys.Dynamic}}" TargetType="{x:Type local:ItemsBoardToolBar}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity5}}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="h:Cattach.ItemMargin" Value="0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Default}}" TargetType="ListBoxItem">
                    <Setter Property="Canvas.Left" Value="{Binding Left}" />
                    <Setter Property="Canvas.Top" Value="0" />
                    <Setter Property="Padding" Value="0" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ItemThumbBar">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity2}}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ItemThumbBar">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(h:Cattach.CornerRadius)}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0.6"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
