<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.LeftMenu">

    <DataTemplate x:Key="D.LinkAction.Default" DataType="h:ILinkActionBase">
        <RadioButton FontSize="{DynamicResource {x:Static h:FontSizeKeys.Fixed}}"
                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkGroupExpander}, Path=Foreground}"
                     GroupName="sss"
                     IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected, Mode=TwoWay}"
                     RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
            <RadioButton.Template>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="border" Background="Transparent" />

                        <StackPanel Margin="60,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                            <TextBlock Margin="10,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                       Text="{Binding Logo}" />
                            <TextBlock VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{Binding DisplayName}" />
                        </StackPanel>

                        <Border x:Name="left"
                                Width="8"
                                HorizontalAlignment="Left"
                                Background="{Binding RelativeSource={RelativeSource AncestorType=local:LinkGroupExpander}, Path=SelectItemFlagForeground}"
                                Visibility="Collapsed" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:LinkGroupExpander}, Path=MouseOverBackground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.1"
                                                         Duration="0:0:0" />
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:LinkGroupExpander}, Path=SelectItemBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="left" Property="Visibility" Value="Visible" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </RadioButton.Template>

        </RadioButton>
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LinkGrouExpander.ListBoxItem.Default, TypeInTargetAssembly={x:Type local:LinkGroupExpander}}" TargetType="ListBoxItem">
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border x:Name="border" Background="Transparent" />
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                        <Border x:Name="left"
                                Width="5"
                                HorizontalAlignment="Left"
                                Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                Visibility="Collapsed" />

                    </Grid>
                    <!--<ControlTemplate.Triggers>
                    -->
                    <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                        </Trigger>-->
                    <!--

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"  Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <DataTemplate x:Key="D.LinkActionGroup.Default" DataType="h:LinkActionGroup">
        <Grid Margin="0,0.2">
            <Expander h:Cattach.IconMargin="10,0,0,0"
                         h:Cattach.IconSize="16"
                         Header="{Binding DisplayName}"
                         IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                         Style="{DynamicResource S.FExpander.Default}">
                <ListBox Background="Transparent"
                         BorderThickness="0"
                         ItemContainerStyle="{StaticResource {x:Static h:LinkGroupExpander.ListBoxItemKey}}"
                         ItemTemplate="{StaticResource D.LinkAction.Default}"
                         ItemsSource="{Binding Links}"
                         SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=local:LinkGroupExpander}, Path=SelectedLink, Mode=TwoWay}"
                         Style="{DynamicResource {x:Static h:ListBoxKeys.Default}}" />
            </Expander>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="D.LinkActionGroup.Accent" DataType="h:LinkActionGroup">
        <Grid Margin="0,0">
            <Expander h:Cattach.IconMargin="10,0,0,0"
                         h:Cattach.IconSize="16"
                         Header="{Binding DisplayName}"
                         IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                         Style="{DynamicResource S.FExpander.Accent}">

                <ListBox Background="Transparent"
                         BorderThickness="0"
                         ItemContainerStyle="{StaticResource {x:Static h:LinkGroupExpander.ListBoxItemKey}}"
                         ItemTemplate="{StaticResource D.LinkAction.Default}"
                         ItemsSource="{Binding Links}"
                         SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=local:LinkGroupExpander}, Path=SelectedLink, Mode=TwoWay}"
                         Style="{DynamicResource {x:Static h:ListBoxKeys.Default}}" />
            </Expander>
        </Grid>
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LinkGroupExpander.Default, TypeInTargetAssembly={x:Type local:LinkGroupExpander}}" TargetType="local:LinkGroupExpander">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemTemplate" Value="{StaticResource D.LinkActionGroup.Default}" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="SelectItemBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_6}}" />
        <Setter Property="SelectItemFlagForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LinkGroupExpander.Accent, TypeInTargetAssembly={x:Type local:LinkGroupExpander}}" BasedOn="{StaticResource {x:Static local:LinkGroupExpander.DefaultKey}}" TargetType="local:LinkGroupExpander">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        <Setter Property="ItemTemplate" Value="{StaticResource D.LinkActionGroup.Accent}" />
        <Setter Property="SelectItemBackground" Value="{DynamicResource {x:Static h:BrushKeys.WhiteOpactiy2}}" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.WhiteOpactiy1}}" />
        <Setter Property="SelectItemFlagForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:LinkGroupExpander.DefaultKey}}" TargetType="local:LinkGroupExpander" />

</ResourceDictionary>
