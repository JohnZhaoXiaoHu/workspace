<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.LeftMenu">

    <Style x:Key="S.GroupExpander.ListBox.Base" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="S.GroupExpander.ListBoxItem.Default" TargetType="ListBoxItem">
        <Setter Property="Height" Value="35" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Margin="0">

                        <Border x:Name="border" Background="Transparent" />
                        <ContentPresenter Margin="12,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <Border x:Name="left"
                                Width="6"
                                HorizontalAlignment="Left"
                                Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                        </Trigger>

                        <Trigger Property="ListBoxItem.IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_6}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="left" Property="Visibility" Value="Visible" />
                            <!--<Setter Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <DataTemplate x:Key="D.GroupExpander.Default" DataType="{x:Type local:GroupObject}">
        <Grid>
            <Expander h:Cattach.IconMargin="10,0,0,0"
                      h:Cattach.IconSize="16"
                      BorderThickness="0"
                      Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                      Header="{Binding DisplayName}"
                      IsExpanded="True">
                <ListBox Margin="-1,0,0,0"
                         Background="Transparent"
                         BorderThickness="0"
                         ItemContainerStyle="{StaticResource S.GroupExpander.ListBoxItem.Default}"
                         ItemsSource="{Binding}"
                         SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=local:GroupExpander}, Path=SelectItem, Mode=TwoWay}"
                         Style="{StaticResource S.GroupExpander.ListBox.Base}">
                    <!--  ItemTemplate="{StaticResource D.LinkAction.Default}"  -->
                </ListBox>
            </Expander>
        </Grid>
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.GroupExpander.Default, TypeInTargetAssembly={x:Type local:GroupExpander}}" TargetType="{x:Type local:GroupExpander}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ItemTemplate" Value="{StaticResource D.GroupExpander.Default}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
