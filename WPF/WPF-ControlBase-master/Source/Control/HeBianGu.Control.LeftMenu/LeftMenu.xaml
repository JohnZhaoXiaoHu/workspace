<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.LeftMenu"
                    xmlns:net="clr-namespace:System.Net.NetworkInformation;assembly=System">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LeftMenu.ListBoxItem.Default, TypeInTargetAssembly={x:Type local:LeftMenu}}" BasedOn="{StaticResource {x:Static h:ControlKeys.ForegroundSelected}}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="h:Cattach.IsMouseOver" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" />
        <Setter Property="h:Cattach.IsSelected" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="boder"
                            Height="45"
                            Margin="5,1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LeftMenu.Default, TypeInTargetAssembly={x:Type local:LeftMenu}}" BasedOn="{StaticResource {x:Static h:ControlKeys.ForegroundDynamic}}" TargetType="{x:Type local:LeftMenu}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="60" />
        <Setter Property="IconSize" Value="25" />
        <Setter Property="h:Cattach.Icon" Value="&#xe7b1;" />
        <Setter Property="h:Cattach.IconMargin" Value="0,50,0,0" />
        <Setter Property="h:Cattach.IconSize" Value="30" />
        <Setter Property="UseLogo" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Static h:LeftMenu.ListBoxItemKey}}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type h:LinkActionGroup}">
                    <Grid>
                        <Grid x:Name="expend" Margin="0" Visibility="Collapsed">
                            <Expander h:Cattach.Icon="{Binding Logo}"
                                      h:Cattach.IconMargin="10,0,0,0"
                                      h:Cattach.IconSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IconSize}"
                                      h:Cattach.MouseOverBorderBrush="Transparent"
                                      Background="Transparent"
                                      BorderBrush="Transparent"
                                      Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                      Header="{Binding DisplayName}"
                                      IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
                                <ListBox Background="Transparent"
                                         BorderThickness="0"
                                         ItemContainerStyle="{StaticResource {x:Static h:LeftMenu.ListBoxItemKey}}"
                                         ItemsSource="{Binding Links}"
                                         SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=SelectedLink, Mode=TwoWay}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type h:ActionBase}">
                                            <RadioButton FontSize="{DynamicResource {x:Static h:FontSizeKeys.Fixed}}"
                                                         Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                                         GroupName="sss"
                                                         IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected, Mode=TwoWay}"
                                                         RenderTransform="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}">
                                                <RadioButton.Template>
                                                    <ControlTemplate TargetType="RadioButton">
                                                        <Grid>
                                                            <Grid x:Name="expend" Background="Transparent" Visibility="Collapsed">
                                                                <StackPanel Margin="25,0" HorizontalAlignment="Left" Orientation="Horizontal">
                                                                    <TextBlock FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IconSize}" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" Text="{Binding Logo}" />
                                                                    <TextBlock Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                                                                </StackPanel>
                                                            </Grid>

                                                            <Grid x:Name="unexpend"
                                                                  Height="Auto"
                                                                  Margin="-20"
                                                                  Background="Transparent"
                                                                  Visibility="Collapsed">
                                                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding DisplayName}">
                                                                    <TextBlock FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IconSize}" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" Text="{Binding Logo}" />
                                                                    <TextBlock FontSize="8"
                                                                               Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                                                                               Text="{Binding DisplayName}" />
                                                                </StackPanel>
                                                            </Grid>
                                                        </Grid>

                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}" Value="true">
                                                                <Setter TargetName="expend" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="unexpend" Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}" Value="false">
                                                                <Setter TargetName="expend" Property="Visibility" Value="Collapsed" />
                                                                <Setter TargetName="unexpend" Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </RadioButton.Template>
                                            </RadioButton>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Expander>
                        </Grid>

                        <Grid x:Name="unexpend"
                              Background="Transparent"
                              Tag="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}"
                              Visibility="Collapsed">
                            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="-10,0" ToolTip="{Binding DisplayName}">
                    <TextBlock Text="{Binding Logo}" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IconSize}"/>
                </StackPanel>-->

                            <StackPanel Margin="0,5"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ToolTip="{Binding DisplayName}">
                                <TextBlock FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IconSize}"
                                           Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                           Text="{Binding Logo}" />
                                <TextBlock Margin="-15,0"
                                           FontSize="8"
                                           Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                                           Text="{Binding DisplayName}" />
                            </StackPanel>

                            <Popup x:Name="Pop"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Bottom"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding ElementName=unexpend, Path=IsMouseOver, Mode=OneWay}"
                                   Placement="Right"
                                   PlacementTarget="{Binding ElementName=unexpend}"
                                   PopupAnimation="Slide"
                                   StaysOpen="True">
                                <Border Background="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Background}"
                                        BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=BorderBrush}"
                                        BorderThickness="0"
                                        CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                                    <ListBox Margin="5"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                             ItemsSource="{Binding Links}"
                                             SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Popup}, Path=PlacementTarget.Tag.SelectedLink, Mode=TwoWay}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type h:ActionBase}">
                                                <RadioButton Content="{Binding}"
                                                             FontSize="{DynamicResource {x:Static h:FontSizeKeys.Fixed}}"
                                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                                             GroupName="sssss"
                                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected, Mode=TwoWay}">
                                                    <RadioButton.Template>
                                                        <ControlTemplate TargetType="RadioButton">
                                                            <Grid>
                                                                <StackPanel Margin="25,0" HorizontalAlignment="Left" Orientation="Horizontal">
                                                                    <TextBlock Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" Text="{Binding Logo}" />
                                                                    <TextBlock Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                                                                </StackPanel>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </RadioButton.Template>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>

                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="boder"
                                                                    Height="40"
                                                                    Margin="5,2"
                                                                    CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                                                                <ContentPresenter />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="true">
                                                                    <Setter TargetName="boder" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity4}}" />
                                                                </Trigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="true" />
                                                                        <Condition Property="IsMouseOver" Value="true" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="boder" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity2}}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="false" />
                                                                        <Condition Property="IsMouseOver" Value="true" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="boder" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity1}}" />
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                </Border>

                                <h:Interaction.Behaviors>
                                    <local:PopupRefreshBehavior LeftMenu="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}}" />
                                </h:Interaction.Behaviors>
                            </Popup>
                        </Grid>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}" Value="true">
                            <Setter TargetName="expend" Property="Visibility" Value="Visible" />
                            <Setter TargetName="unexpend" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}" Value="false">
                            <Setter TargetName="unexpend" Property="Visibility" Value="Visible" />
                            <Setter TargetName="expend" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LeftMenu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Expanded">
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="logo"
                                                         Storyboard.TargetProperty="FontSize"
                                                         From="35" To="75"
                                                         Duration="00:00:00.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="(local:LeftMenu.IconSize)"
                                                         From="35" To="20"
                                                         Duration="00:00:00.2" />

                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         From="60" To="250"
                                                         Duration="00:00:00.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnExpanded">
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="logo"
                                                         Storyboard.TargetProperty="FontSize"
                                                         From="75" To="35"
                                                         Duration="00:00:00.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="(local:LeftMenu.IconSize)"
                                                         From="20" To="35"
                                                         Duration="00:00:00.2" />

                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         From="250" To="60"
                                                         Duration="00:00:00.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <DockPanel x:Name="sp_left">
                            <Grid DockPanel.Dock="Top">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock x:Name="logo"
                                               Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconMargin)}"
                                               VerticalAlignment="Center"
                                               FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconSize)}"
                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                               Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}"
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=UseLogo, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />
                                </StackPanel>
                                <ToggleButton Margin="13,7,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              h:Cattach.AllowsAnimation="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                              h:Cattach.Icon="&#xeb3a;"
                                              h:Cattach.IconSize="30"
                                              Content="&#xe7f2;"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}"
                                              IsTabStop="False"
                                              Opacity="1"
                                              Style="{DynamicResource {x:Static h:ToggleButtonKeys.DoubleFIconCheckedSingle}}" />
                            </Grid>
                            <ScrollViewer h:Cattach.StyleType="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.StyleType)}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter Grid.Row="1"
                                                Margin="5,0"
                                                HorizontalAlignment="Stretch"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LeftMenu.LinkActions.Default, TypeInTargetAssembly={x:Type local:LeftMenu}}" BasedOn="{StaticResource {x:Static local:LeftMenu.DefaultKey}}" TargetType="{x:Type local:LeftMenu}">
        <Setter Property="SelectedItem" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectedLink, Mode=OneWayToSource}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type h:ActionBase}">
                    <RadioButton FontSize="{DynamicResource {x:Static h:FontSizeKeys.Fixed}}"
                                 Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                 GroupName="sss"
                                 IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected, Mode=TwoWay}"
                                 RenderTransform="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}">
                        <RadioButton.Template>
                            <ControlTemplate TargetType="RadioButton">
                                <Grid>
                                    <Grid x:Name="expend" Background="Transparent" Visibility="Collapsed">
                                        <StackPanel Margin="25,0" HorizontalAlignment="Left" Orientation="Horizontal">
                                            <TextBlock FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IconSize}" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" Text="{Binding Logo}" />
                                            <!--  FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IconSize}"  -->
                                            <TextBlock Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                                        </StackPanel>
                                    </Grid>

                                    <Grid x:Name="unexpend"
                                          Height="Auto"
                                          Margin="-20"
                                          Background="Transparent"
                                          Visibility="Collapsed">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding DisplayName}">
                                            <TextBlock FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IconSize}" Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" Text="{Binding Logo}" />

                                            <!--  FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu},Path=IconSize}"  -->
                                            <TextBlock FontSize="8"
                                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=Foreground}"
                                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                                                       Text="{Binding DisplayName}" />
                                        </StackPanel>
                                    </Grid>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}" Value="true">
                                        <Setter TargetName="expend" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="unexpend" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:LeftMenu}, Path=IsExpended}" Value="false">
                                        <Setter TargetName="expend" Property="Visibility" Value="Collapsed" />
                                        <Setter TargetName="unexpend" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RadioButton.Template>
                    </RadioButton>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.LeftMenu.LinkActionGroup.Default, TypeInTargetAssembly={x:Type local:LeftMenu}}" BasedOn="{StaticResource {x:Static local:LeftMenu.DefaultKey}}" TargetType="{x:Type local:LeftMenu}">
        <!--<Setter Property="ItemTemplate" Value="{StaticResource S.LinkActionGroup.LeftMenu}"/>-->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="boder" Height="Auto">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="boder" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity1}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

