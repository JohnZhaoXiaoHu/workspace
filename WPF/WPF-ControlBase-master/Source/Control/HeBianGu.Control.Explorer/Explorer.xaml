<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.Explorer"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/DataGrid.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:NavigationBar}">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="boder">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="boder" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:NavigationBar}, Path=Background}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type local:DirectoryModel}">
                    <StackPanel Orientation="Horizontal">
                        <!--<Button x:Name="btn" Content="{Binding Model.Name}" Width="Auto" Style="{DynamicResource {x:Static h:ButtonKeys.Link}}" Margin="0">
                            <h:Interaction.Behaviors>
                                <h:SelectListBoxItemElementBehavior/>
                            </h:Interaction.Behaviors>
                        </Button>-->

                        <TextBlock x:Name="txt"
                                   Margin="5,0"
                                   VerticalAlignment="Center"
                                   Cursor="Hand"
                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                                   Text="{Binding Model.Name, Mode=OneWay}"
                                   TextDecorations="UnderLine">
                            <!--<h:Interaction.Behaviors>
                                <h:SelectListBoxItemElementBehavior/>
                                 </h:Interaction.Behaviors>-->
                        </TextBlock>

                        <TextBlock x:Name="flag"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                                   Text="&gt;" />
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={x:Static h:XConverter.IsLastItemInContainerConverter}}" Value="True">
                            <Setter TargetName="flag" Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                            <Setter TargetName="txt" Property="TextDecorations" Value="{x:Null}" />
                            <!--<Setter Property="Style" Value="{DynamicResource {x:Static h:ButtonKeys.Transparent}}" TargetName="btn"/>-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="true">
                            <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="S.Explorer.Template.Default" TargetType="{x:Type local:Explorer}">
        <Border Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <!--<h:Interaction.Behaviors>
                <h:LoadedAdornerBehavior AdornerType="{x:Type h:WaterMarkAdorner}" />
            </h:Interaction.Behaviors>-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column12Key}}" Visibility="{TemplateBinding HeaderVisibility}">
                    <!--<TextBox Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClearSingle}}"  h:Cattach.Title="当前路径:" Grid.Column="0" Grid.ColumnSpan="5"/>-->

                    <UniformGrid Columns="3">
                        <Button Margin="-10"
                                Command="{x:Static local:Explorer.Next}"
                                Content="&lt;"
                                Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                ToolTip="返回" />
                        <Button Margin="-10"
                                Command="{x:Static local:Explorer.Previous}"
                                Content="&gt;"
                                Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                ToolTip="前进" />
                        <ToggleButton x:Name="tb"
                                      HorizontalAlignment="Center"
                                      Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                                      Style="{DynamicResource {x:Static h:ToggleButtonKeys.ComboBox}}"
                                      ToolTip="最近浏览的位置" />
                    </UniformGrid>

                    <TextBlock Grid.Column="1"
                               Margin="2,0,0,0"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                               Text="|" />

                    <local:NavigationBar x:Name="navigationBar"
                                         Grid.Column="1"
                                         Grid.ColumnSpan="9"
                                         Margin="10,0,0,0"
                                         CurrentPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CurrentPath, Mode=TwoWay}"
                                         IsHitTestVisible="{TemplateBinding NavigationBarEnbled}" />

                    <TextBox Grid.Column="9"
                             Grid.ColumnSpan="5"
                             Width="Auto"
                             Margin="0"
                             HorizontalAlignment="Stretch"
                             h:Cattach.Title=""
                             h:Cattach.Watermark="请输入通配符（* 和 ?）"
                             Style="{DynamicResource {x:Static h:TextBoxKeys.ClearSingle}}"
                             Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AllSearchPattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SearchBoxVisibility}" />
                </h:Row>

                <h:FScrollView Grid.Row="1">
                    <ScrollViewer.Template>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Button Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                        Command="{x:Static DataGrid.SelectAllCommand}"
                                        Focusable="false"
                                        Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},
                                                                                      ResourceId=DataGridSelectAllButtonStyle}}"
                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />

                                <Border Grid.Column="0"
                                        Grid.ColumnSpan="9"
                                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionBackground)}"
                                        CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionCornerRadius)}" />

                                <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        Grid.Row="1"
                                                        Grid.ColumnSpan="2"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Grid>
                        </ControlTemplate>
                    </ScrollViewer.Template>
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </h:FScrollView>

                <!--<Grid Grid.Row="2" Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <TextBlock  Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}">
                               <Run Text="共"/>
                               <Run Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Total}"/>
                               <Run Text="项目"/>
                        </TextBlock>
                    </StackPanel>
                </Grid>-->
                <Popup x:Name="Pop"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Bottom"
                       AllowsTransparency="True"
                       IsOpen="{Binding ElementName=tb, Path=IsChecked}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=tb}"
                       PopupAnimation="Slide"
                       StaysOpen="False">
                    <Border Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                            BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                            BorderThickness="1"
                            CornerRadius="5">
                        <StackPanel>
                            <GroupBox Header="最近浏览的位置" Style="{DynamicResource {x:Static h:GroupBoxKeys.UnderLine}}" Padding="0">
                                <ListBox MinWidth="250" ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=History}" SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HistorySelectedItem}" Style="{DynamicResource {x:Static h:ListBoxKeys.Dynamic}}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type local:DirectoryModel}">
                                            <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" Background="Transparent">
                                                <TextBlock x:Name="flag"
                                                           HorizontalAlignment="Left"
                                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                           Text="&#xe759;"
                                                           Visibility="Hidden" />
                                                <StackPanel Margin="25,0,0,0"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <Image Height="25" VerticalAlignment="Center" Source="{Binding Logo, Converter={x:Static h:XConverter.IconToImageSourceConverter}}" />
                                                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{Binding Model.Name}" />
                                                </StackPanel>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                                                    <Setter TargetName="flag" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </GroupBox>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Explorer.Default, TypeInTargetAssembly={x:Type local:Explorer}}" BasedOn="{StaticResource {x:Static h:DataGridKeys.Dynamic}}" TargetType="{x:Type local:Explorer}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="NavigationBarEnbled" Value="True" />
        <Setter Property="Template" Value="{StaticResource S.Explorer.Template.Default}" />
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Explorer.Single, TypeInTargetAssembly={x:Type local:Explorer}}" BasedOn="{StaticResource {x:Static h:DataGridKeys.Single}}" TargetType="{x:Type local:Explorer}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="NavigationBarEnbled" Value="True" />
        <Setter Property="Template" Value="{StaticResource S.Explorer.Template.Default}" />
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
