<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.MultiComboBox"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="{ComponentResourceKey ResourceId=S.MultiComboBox.Default, TypeInTargetAssembly={x:Type local:MultiComboBox}}" BasedOn="{StaticResource {x:Static h:ComboBoxKeys.Dynamic}}" TargetType="{x:Type local:MultiComboBox}">
        <!--<Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.White}}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static h:SystemKeys.FontFamily}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="h:Cattach.IconMargin" Value="0,0,7,0" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />-->
        <!--<Setter Property="h:Cattach.Path" Value="{StaticResource S.Geometry.Rectangle.Rounded.TopRight}"/>-->
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="SelectedItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultiComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="25" />
                            </Grid.ColumnDefinitions>

                            <ContentControl x:Name="Label"
                                            Margin="1,1,0,1"
                                            Content="{TemplateBinding h:Cattach.Title}"
                                            Foreground="{TemplateBinding Background}"
                                            IsHitTestVisible="False"
                                            IsTabStop="False"
                                            Template="{TemplateBinding h:Cattach.TitleTemplate}" />

                            <Border Grid.Column="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="2">
                                <ContentControl x:Name="PART_AttachContent"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                                                Template="{TemplateBinding h:Cattach.AttachContent}" />
                            </Border>

                            <ToggleButton x:Name="PART_DropDownToggle"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="3"
                                          HorizontalAlignment="Right"
                                          h:Cattach.IconMargin="{TemplateBinding h:Cattach.IconMargin}"
                                          h:Cattach.IconSize="15"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static h:XConverter.TrueToFalseConverter}, Mode=OneWay}"
                                          IsTabStop="False"
                                          Style="{DynamicResource {x:Static h:ToggleButtonKeys.ComboBox}}" />

                            <Border Grid.Column="1">
                                <TextBlock x:Name="Message"
                                           Margin="5,2,5,2"
                                           Padding="0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           IsHitTestVisible="False"
                                           Opacity="0.6"
                                           Text="{TemplateBinding h:Cattach.Watermark}"
                                           TextAlignment="Center"
                                           Visibility="Collapsed" />
                            </Border>

                            <Grid Grid.Column="1" Margin="1">
                                <ListBox Height="Auto"
                                         h:Cattach.UseClose="True"
                                         ItemTemplate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedItemsTemplate}"
                                         ItemsPanel="{TemplateBinding SelectedItemsPanel}"
                                         ItemsSource="{Binding ElementName=PART_ListBox, Path=SelectedItems}">
                                    <ListBox.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Default}}" TargetType="ListBoxItem">
                                            <Setter Property="MinHeight" Value="10" />
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Padding" Value="2,0" />
                                            <Setter Property="Margin" Value="1" />
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBackground)}" />
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />
                                            <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.MouseOver}}" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <!--<Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />-->
                                            <!--<Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Padding" Value="2,0" />
                                            <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
                                            <Setter Property="h:Cattach.UseClose" Value="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=(h:Cattach.UseClose)}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Background="Transparent">
                                                            <Border x:Name="boder"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />

                                                            <Grid Margin="{TemplateBinding Padding}">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                                                <Button Grid.Column="1"
                                                                        Height="Auto"
                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                        Foreground="{TemplateBinding Foreground}"
                                                                        Style="{DynamicResource {x:Static h:ButtonKeys.Clear}}"
                                                                        Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseClose), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                                    <h:Interaction.Triggers>
                                                                        <h:EventTrigger EventName="Click">
                                                                            <h:CloseItemsAction Item="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}}" ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                                                        </h:EventTrigger>
                                                                    </h:Interaction.Triggers>
                                                                </Button>
                                                            </Grid>
                                                        </Grid>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Opacity" Value="0.8" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>-->
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Grid>

                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False"
                                   VerticalOffset="2">
                                <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid x:Name="grid_auto"
                                          Height="Auto"
                                          Margin="0,5,0,0"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Top">

                                        <Border Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                                BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />

                                        <Polygon Margin="0,-5,8,0"
                                                 HorizontalAlignment="Right"
                                                 Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.FocusForeground)}"
                                                 FillRule="Nonzero"
                                                 Points="0,5 5,0 10,5 0,5"
                                                 Stroke="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                                            <ListBox x:Name="PART_ListBox"
                                                     MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                     Margin="1,1"
                                                     Background="Transparent"
                                                     BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}"
                                                     ItemTemplate="{TemplateBinding ItemTemplate}"
                                                     ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                                     SelectionMode="Multiple" />
                                        </ScrollViewer>
                                    </Grid>

                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItems.Count}">
                            <DataTrigger.Value>
                                <sys:Int32>0</sys:Int32>
                            </DataTrigger.Value>

                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItems}" Value="{x:Null}">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_AttachContent" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_DropDownToggle" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />

                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_DropDownToggle" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="PART_AttachContent" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.MultiComboBox.Clear, TypeInTargetAssembly={x:Type local:MultiComboBox}}" BasedOn="{StaticResource {x:Static local:MultiComboBox.DefaultKey}}" TargetType="{x:Type local:MultiComboBox}">
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <!--<Button Icon="&#xe6f4;" Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                   IsTabStop="False" IconMargin="0"
                                   h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                                   Command="h:Cattach.ClearTextCommand"
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MultiComboBox}}}"
                                   IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MultiComboBox}},
                        Converter={x:Static h:XConverter.TrueToFalseConverter},Mode=OneWay}"
                               Margin="1,3,0,4" IconSize="13" Foreground="{TemplateBinding Foreground}"  Cursor="Arrow"/>-->

                    <Button Width="Auto"
                            h:Cattach.Icon="&#xe701;"
                            h:Cattach.IconSize="18"
                            h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                            Command="h:Cattach.ClearTextCommand"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MultiComboBox}}}"
                            IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MultiComboBox}}, Converter={x:Static h:XConverter.TrueToFalseConverter}, Mode=OneWay}"
                            Style="{DynamicResource {x:Static h:ButtonKeys.Clear}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.MultiComboBox.Label, TypeInTargetAssembly={x:Type local:MultiComboBox}}" BasedOn="{StaticResource {x:Static local:MultiComboBox.DefaultKey}}" TargetType="{x:Type local:MultiComboBox}">
        <Setter Property="h:Cattach.TitleTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="90" Background="{DynamicResource {x:Static h:BrushKeys.Accent}}" CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Left}}">
                        <TextBlock Margin="2"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.MultiComboBox.LabelClear, TypeInTargetAssembly={x:Type local:MultiComboBox}}" BasedOn="{StaticResource {x:Static local:MultiComboBox.DefaultKey}}" TargetType="{x:Type local:MultiComboBox}">
        <Setter Property="h:Cattach.TitleTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="90" Background="{DynamicResource {x:Static h:BrushKeys.Accent}}" CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.Left}}">
                        <TextBlock Margin="2"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="h:Cattach.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <!--<Button Icon="&#xe6f4;" Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}"
                                   IsTabStop="False" IconMargin="0"
                                   h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                                   Command="h:Cattach.ClearTextCommand"
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MultiComboBox}}}"
                                   IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MultiComboBox}},
                                   Converter={x:Static h:XConverter.TrueToFalseConverter},Mode=OneWay}"
                                   Margin="0,3,0,4" IconSize="13"
                                   Foreground="{TemplateBinding Foreground}"  Cursor="Arrow"/>-->

                    <Button Width="Auto"
                            h:Cattach.Icon="&#xe701;"
                            h:Cattach.IconSize="18"
                            h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                            Command="h:Cattach.ClearTextCommand"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MultiComboBox}}}"
                            IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MultiComboBox}}, Converter={x:Static h:XConverter.TrueToFalseConverter}, Mode=OneWay}"
                            Style="{DynamicResource {x:Static h:ButtonKeys.Clear}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:MultiComboBox.DefaultKey}}" TargetType="{x:Type local:MultiComboBox}" />

</ResourceDictionary>

