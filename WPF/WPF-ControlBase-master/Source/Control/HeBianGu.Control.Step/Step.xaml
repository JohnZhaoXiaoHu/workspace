<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.Step">

    <DataTemplate x:Key="S.StepItem.Running" DataType="{x:Type local:StepItem}">
        <StackPanel x:Name="running" HorizontalAlignment="Left" Orientation="Horizontal">
            <Grid x:Name="line" Margin="0,-30,0,0">
                <Line Width="Auto"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Stroke="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                      StrokeThickness="2"
                      X1="0"
                      X2="{Binding RelativeSource={RelativeSource AncestorType=local:Step}, Path=LineWidth}"
                      Y1="0" Y2="0">
                    <Line.OpacityMask>
                        <LinearGradientBrush>
                            <GradientStop x:Name="stop1" Offset="0" Color="Black" />
                            <GradientStop x:Name="stop2" Offset="0.2" Color="Transparent" />
                            <GradientStop x:Name="stop3" Offset="0.4" Color="Black" />
                        </LinearGradientBrush>
                    </Line.OpacityMask>
                    <Line.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                    <DoubleAnimation RepeatBehavior="Forever"
                                                     Storyboard.TargetName="stop1"
                                                     Storyboard.TargetProperty="Offset"
                                                     From="0" To="1"
                                                     Duration="0:0:5">
                                        <DoubleAnimation.EasingFunction>
                                            <QuarticEase />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>

                                    <DoubleAnimation RepeatBehavior="Forever"
                                                     Storyboard.TargetName="stop2"
                                                     Storyboard.TargetProperty="Offset"
                                                     From="0.2" To="1.2"
                                                     Duration="0:0:5">
                                        <DoubleAnimation.EasingFunction>
                                            <QuarticEase />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>

                                    <DoubleAnimation RepeatBehavior="Forever"
                                                     Storyboard.TargetName="stop3"
                                                     Storyboard.TargetProperty="Offset"
                                                     From="0.4" To="1.4"
                                                     Duration="0:0:5">
                                        <DoubleAnimation.EasingFunction>
                                            <QuarticEase />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Line.Triggers>
                </Line>
            </Grid>

            <StackPanel>
                <Grid x:Name="run">
                    <Ellipse Width="40"
                             Height="40"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                             RenderTransform="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}"
                             RenderTransformOrigin="0.5,0.5"
                             Stroke="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                             StrokeDashArray="5,1"
                             StrokeThickness="2">
                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard Storyboard="{DynamicResource {x:Static h:StoryBoardKeys.RotateForever3}}" />
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                    <Ellipse Width="30"
                             Height="30"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                    <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                </Grid>

                <TextBlock Margin="-50,10,-50,0"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                           Text="{Binding Message}" />

            </StackPanel>

            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Storyboard="{DynamicResource {x:Static h:StoryBoardKeys.OpacityForever}}" />
                </EventTrigger>
            </StackPanel.Triggers>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={x:Static h:XConverter.IsFirstItemInContainerConverter}}" Value="True">
                <Setter TargetName="line" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="S.StepItem.Unkown" DataType="{x:Type local:StepItem}">
        <StackPanel x:Name="unkown" HorizontalAlignment="Left" Orientation="Horizontal">
            <Grid x:Name="line" Margin="0,-30,0,0">
                <Line Width="Auto"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Stroke="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                      StrokeThickness="2"
                      X1="0"
                      X2="{Binding RelativeSource={RelativeSource AncestorType=local:Step}, Path=LineWidth}"
                      Y1="0" Y2="0" />
            </Grid>

            <StackPanel>
                <Grid x:Name="run">
                    <Ellipse Width="40"
                             Height="40"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                             Stroke="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                             StrokeThickness="3" />
                    <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                </Grid>

                <TextBlock Margin="-50,10,-50,0"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                           Text="{Binding Message}" />

            </StackPanel>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={x:Static h:XConverter.IsFirstItemInContainerConverter}}" Value="True">
                <Setter TargetName="line" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="S.StepItem.Error" DataType="{x:Type local:StepItem}">
        <StackPanel x:Name="error" HorizontalAlignment="Left" Orientation="Horizontal">
            <Grid x:Name="line" Margin="0,-30,0,0">
                <Line Width="Auto"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Stroke="{DynamicResource {x:Static h:BrushKeys.Red}}"
                      StrokeThickness="2"
                      X1="0"
                      X2="{Binding RelativeSource={RelativeSource AncestorType=local:Step}, Path=LineWidth}"
                      Y1="0" Y2="0" />

                <TextBlock Margin="0,0,0,5"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="25"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                           Text="×" />
            </Grid>

            <StackPanel>
                <Grid x:Name="run">
                    <Ellipse Width="40"
                             Height="40"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                             Stroke="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                    <Ellipse Width="30"
                             Height="30"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.Red}}" />

                    <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                </Grid>

                <TextBlock Margin="-50,10,-50,0"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                           Text="{Binding Message}" />

            </StackPanel>

        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={x:Static h:XConverter.IsFirstItemInContainerConverter}}" Value="True">
                <Setter TargetName="line" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="S.StepItem.Success" DataType="{x:Type local:StepItem}">
        <StackPanel x:Name="success" HorizontalAlignment="Left" Orientation="Horizontal">
            <Grid x:Name="line" Margin="0,-30,0,0">
                <Line Width="Auto"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Stroke="{DynamicResource {x:Static h:BrushKeys.Green}}"
                      StrokeThickness="2"
                      X1="0"
                      X2="{Binding RelativeSource={RelativeSource AncestorType=local:Step}, Path=LineWidth}"
                      Y1="0" Y2="0" />

                <TextBlock Margin="0,0,0,5"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="20"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Green}}"
                           Text="√" />
            </Grid>
            <StackPanel>

                <Grid x:Name="run">
                    <Ellipse Width="40"
                             Height="40"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                             Stroke="{DynamicResource {x:Static h:BrushKeys.Green}}" />
                    <Ellipse Width="30"
                             Height="30"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Fill="{DynamicResource {x:Static h:BrushKeys.Green}}" />

                    <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                </Grid>

                <TextBlock Margin="-50,10,-50,0"
                           Foreground="{DynamicResource {x:Static h:BrushKeys.Green}}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                           Text="{Binding Message}" />

            </StackPanel>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={x:Static h:XConverter.IsFirstItemInContainerConverter}}" Value="True">
                <Setter TargetName="line" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:StepItem}">
        <Grid>
            <StackPanel x:Name="running"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                <Grid x:Name="line1" Margin="0,-30,0,0">
                    <Line Width="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Stroke="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                          StrokeThickness="2"
                          X1="0"
                          X2="{Binding RelativeSource={RelativeSource AncestorType=local:Step}, Path=LineWidth}"
                          Y1="0" Y2="0">
                        <Line.OpacityMask>
                            <LinearGradientBrush>
                                <GradientStop x:Name="stop1" Offset="0" Color="Black" />
                                <GradientStop x:Name="stop2" Offset="0.2" Color="Transparent" />
                                <GradientStop x:Name="stop3" Offset="0.4" Color="Black" />
                            </LinearGradientBrush>
                        </Line.OpacityMask>
                        <Line.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation RepeatBehavior="Forever"
                                                         Storyboard.TargetName="stop1"
                                                         Storyboard.TargetProperty="Offset"
                                                         From="0" To="1"
                                                         Duration="0:0:5">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation RepeatBehavior="Forever"
                                                         Storyboard.TargetName="stop2"
                                                         Storyboard.TargetProperty="Offset"
                                                         From="0.2" To="1.2"
                                                         Duration="0:0:5">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation RepeatBehavior="Forever"
                                                         Storyboard.TargetName="stop3"
                                                         Storyboard.TargetProperty="Offset"
                                                         From="0.4" To="1.4"
                                                         Duration="0:0:5">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Line.Triggers>
                    </Line>
                </Grid>

                <StackPanel>
                    <Grid>
                        <Ellipse Width="40"
                                 Height="40"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                 RenderTransform="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}"
                                 RenderTransformOrigin="0.5,0.5"
                                 Stroke="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                 StrokeDashArray="5,1"
                                 StrokeThickness="2">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard Storyboard="{DynamicResource {x:Static h:StoryBoardKeys.RotateForever3}}" />
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <Ellipse Width="30"
                                 Height="30"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                    </Grid>

                    <TextBlock x:Name="txt"
                               Margin="-50,10,-50,0"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                               Text="{Binding Message}" />

                </StackPanel>

                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{DynamicResource {x:Static h:StoryBoardKeys.OpacityForever}}" />
                    </EventTrigger>
                </StackPanel.Triggers>
            </StackPanel>

            <StackPanel x:Name="unkown"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                <Grid x:Name="line2" Margin="0,-30,0,0">
                    <Line Width="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Stroke="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                          StrokeThickness="2"
                          X1="0" X2="100"
                          Y1="0" Y2="0" />
                </Grid>

                <StackPanel>
                    <Grid>
                        <Ellipse Width="40"
                                 Height="40"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                 Stroke="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                                 StrokeThickness="3" />
                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                    </Grid>

                    <TextBlock Margin="-50,10,-50,0"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                               Text="{Binding Message}" />

                </StackPanel>
            </StackPanel>

            <StackPanel x:Name="error"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                <Grid x:Name="line3" Margin="0,-30,0,0">
                    <Line Width="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Stroke="{DynamicResource {x:Static h:BrushKeys.Red}}"
                          StrokeThickness="2"
                          X1="0" X2="100"
                          Y1="0" Y2="0" />

                    <TextBlock Margin="0,0,0,5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="25"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                               Text="×" />
                </Grid>

                <StackPanel>
                    <Grid>
                        <Ellipse Width="40"
                                 Height="40"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                 Stroke="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                        <Ellipse Width="30"
                                 Height="30"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.Red}}" />

                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                    </Grid>

                    <TextBlock Margin="-50,10,-50,0"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                               Text="{Binding Message}" />

                </StackPanel>

            </StackPanel>

            <StackPanel x:Name="success"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                <Grid x:Name="line4" Margin="0,-30,0,0">
                    <Line Width="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Stroke="{DynamicResource {x:Static h:BrushKeys.Green}}"
                          StrokeThickness="2"
                          X1="0" X2="100"
                          Y1="0" Y2="0" />

                    <TextBlock Margin="0,0,0,5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="20"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.Green}}"
                               Text="√" />
                </Grid>
                <StackPanel>

                    <Grid>
                        <Ellipse Width="40"
                                 Height="40"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                 Stroke="{DynamicResource {x:Static h:BrushKeys.Green}}" />
                        <Ellipse Width="30"
                                 Height="30"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{DynamicResource {x:Static h:BrushKeys.Green}}" />

                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}" Text="{Binding DisplayName}" />
                    </Grid>

                    <TextBlock Margin="-50,10,-50,0"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.Green}}"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Default}}"
                               Text="{Binding Message}" />

                </StackPanel>
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={x:Static h:XConverter.IsFirstItemInContainerConverter}}" Value="True">
                <Setter TargetName="line1" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="line2" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="line3" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="line4" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                <Setter TargetName="txt" Property="Height" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="-1">
                <Setter TargetName="error" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="0">
                <Setter TargetName="unkown" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="1">
                <Setter TargetName="running" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="2">
                <Setter TargetName="success" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.StepState.Default, TypeInTargetAssembly={x:Type local:Step}}" TargetType="{x:Type local:Step}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemWidth}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="boder">
                                    <ContentPresenter x:Name="cp" ContentTemplate="{StaticResource S.StepItem.Unkown}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding State}" Value="1">
                                        <Setter TargetName="cp" Property="ContentTemplate" Value="{StaticResource S.StepItem.Running}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="2">
                                        <Setter TargetName="cp" Property="ContentTemplate" Value="{StaticResource S.StepItem.Success}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="-1">
                                        <Setter TargetName="cp" Property="ContentTemplate" Value="{StaticResource S.StepItem.Error}" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemTemplateSelector">
            <Setter.Value>
                <local:StepItemStateTemplateSelector ErrorTempate="{StaticResource S.StepItem.Error}"
                                                     RunningTempate="{StaticResource S.StepItem.Running}"
                                                     SuccessTempate="{StaticResource S.StepItem.Success}"
                                                     UnkownTempate="{StaticResource S.StepItem.Unkown}" />
            </Setter.Value>
        </Setter>-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                IsItemsHost="True"
                                Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="h:Cattach.Behaviors">
            <Setter.Value>
                <h:Behaviors>
                    <h:LoadedAdornerBehavior AdornerType="{x:Type h:WaterMarkAdorner}" />
                </h:Behaviors>
            </Setter.Value>
        </Setter>-->
        <Setter Property="ItemsSource">
            <Setter.Value>
                <x:Array Type="{x:Type local:StepItem}">
                    <local:StepItem DisplayName="1" Message="准备" State="2" />
                    <local:StepItem DisplayName="2" Message="步骤一" State="2" />
                    <local:StepItem DisplayName="3"
                                    Message="步骤一"
                                    Percent="80"
                                    State="1" />
                    <local:StepItem DisplayName="4" Message="步骤一" />
                    <local:StepItem DisplayName="5" Message="完成" />
                </x:Array>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:Step.DefaultKey}}" TargetType="{x:Type local:Step}" />

</ResourceDictionary>

