<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cs="clr-namespace:System.Collections;assembly=mscorlib"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Control.Filter"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">



    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/ListBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.SelectionBox.Default, TypeInTargetAssembly={x:Type local:SelectionBox}}" BasedOn="{StaticResource {x:Static h:ListBoxKeys.Single}}" TargetType="{x:Type local:SelectionBox}">
        <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectionSource, Mode=TwoWay}" />
        <Setter Property="h:Cattach.SelectedItems" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectedSource, Mode=TwoWay}" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="h:Cattach.Title" Value="选择数据" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:ListBoxItemKeys.CheckBoxBox}}" />
        <Setter Property="InSource" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=InitSource}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        
                        <ContentControl x:Name="Label"
                                        Margin="1,1,0,1"
                                        Background="{TemplateBinding BorderBrush}"
                                        Content="{TemplateBinding h:Cattach.Title}"
                                        IsHitTestVisible="False"
                                        IsTabStop="False"
                                        Template="{TemplateBinding h:Cattach.TitleTemplate}" />

                        <CheckBox VerticalAlignment="Center"
                                  Content="全选"
                                  IsChecked="True"
                                  Style="{DynamicResource {x:Static h:CheckBoxKeys.Box}}"
                                  Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsUseCheckAll, Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                            <h:Interaction.Triggers>
                                <h:EventTrigger EventName="Checked">
                                    <h:InvokeCommandAction Command="{x:Static local:SelectionBox.CheckedAll}" />
                                </h:EventTrigger>
                                <h:EventTrigger EventName="Unchecked">
                                    <h:InvokeCommandAction Command="{x:Static local:SelectionBox.UnCheckedAll}" />
                                </h:EventTrigger>
                            </h:Interaction.Triggers>
                        </CheckBox>

                        <Border Grid.Column="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CornerRadius)}">
                            <h:FScrollView>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </h:FScrollView>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.SelectionBox.Label, TypeInTargetAssembly={x:Type local:SelectionBox}}" BasedOn="{StaticResource {x:Static local:SelectionBox.DefaultKey}}" TargetType="{x:Type local:SelectionBox}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="h:Cattach.TitleTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=(h:Cattach.TitleWidth)}" Margin="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=(h:Cattach.TitleMargin)}">
                        <TextBlock HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=(h:Cattach.TitleForeground)}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style BasedOn="{StaticResource {x:Static local:SelectionBox.DefaultKey}}" TargetType="{x:Type local:SelectionBox}" />
</ResourceDictionary>

