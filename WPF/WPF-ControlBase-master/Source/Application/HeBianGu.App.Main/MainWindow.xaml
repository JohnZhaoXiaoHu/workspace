<h:MainWindow x:Class="HeBianGu.Application.MainWindow.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:h="https://github.com/HeBianGu"
              xmlns:image="clr-namespace:HeBianGu.Control.ImagePlayer;assembly=HeBianGu.Control.ImagePlayer"
              xmlns:local="clr-namespace:HeBianGu.Application.MainWindow"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:system="clr-namespace:System;assembly=mscorlib"
              x:Name="window"
              Title="S.Window.Main.Default - 主要用来测试"
              Width="1250"
              Height="700"
              CaptionHeight="50"
              DataContext="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel}"
              IconSize="30"
              NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"
              Style="{DynamicResource S.Window.Main.Default}"
              mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TreeDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ImageSource x:Key="image">../Resources/组 4@2x.png</ImageSource>

            <Style BasedOn="{StaticResource {x:Static h:GroupBoxKeys.Dynamic}}" TargetType="GroupBox">
                <Setter Property="Margin" Value="5" />
            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <TabControl x:Name="tc_all"
                h:Cattach.ItemHorizontalContentAlignment="Stretch"
                h:Cattach.SearchDock="Top"
                h:Cattach.SearchWidth="Auto"
                h:Cattach.UseSearch="True"
                TabStripPlacement="Left">

        <TabItem h:Cattach.Icon="&#xe89a;" Header="显示隐藏动画">
            <GroupBox Header="显示隐藏动画">
                <DockPanel>
                    <DockPanel.Resources>
                        <PathGeometry x:Key="S.PathGeometry.Animation" Figures="M152,305.76 L269.5,51.02001 398.54915,305.02076 532.89325,57.273625 655.00019,296.02994" />
                    </DockPanel.Resources>
                    <h:SwitchToggleButton x:Name="cb11111111111"
                                          Margin="5"
                                          HorizontalAlignment="Left"
                                          BorderCornerRadius="3"
                                          Content="显示/隐藏"
                                          CornerRadius="2"
                                          DockPanel.Dock="Top"
                                          IsChecked="True" />

                    <ListBox x:Name="lb_transitions" ItemsSource="{Binding TransitionsHosts}" SelectedIndex="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid h:TransitionService.IsVisible="{Binding ElementName=cb11111111111, Path=IsChecked}" h:TransitionService.VisibleActions="{Binding ElementName=lb_transitions, Path=SelectedItem.Transitions}" Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="100"
                                   Text="Grid" />
                    </Grid>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="PathTransition">
            <GroupBox Header="PathTransition">
                <DockPanel>
                    <DockPanel.Resources>
                        <PathGeometry x:Key="S.PathGeometry.Animation" Figures="M152,305.76 L269.5,51.02001 398.54915,305.02076 532.89325,57.273625 655.00019,296.02994" />
                    </DockPanel.Resources>
                    <h:SwitchToggleButton x:Name="cb1111"
                                          Margin="5"
                                          HorizontalAlignment="Left"
                                          BorderCornerRadius="3"
                                          Content="显示/隐藏"
                                          CornerRadius="2"
                                          DockPanel.Dock="Top"
                                          IsChecked="True" />

                    <Canvas>
                        <Path Data="{StaticResource S.PathGeometry.Animation}" Stroke="Red" />

                        <Grid Width="100"
                              Height="100"
                              Margin="-50"
                              h:TransitionService.IsVisible="{Binding ElementName=cb1111, Path=IsChecked}"
                              Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                              RenderTransformOrigin="0.5 0.5">
                            <h:TransitionService.VisibleActions>
                                <h:TransitionCollection>
                                    <h:PathTransition HideDuration="1000" PathGeometry="{StaticResource S.PathGeometry.Animation}" VisibleDuration="1000" />
                                </h:TransitionCollection>
                            </h:TransitionService.VisibleActions>
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="100"
                                       Text="Grid" />
                        </Grid>
                    </Canvas>

                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="GridSplitterContainer">
            <Grid>
                <TabControl>
                    <TabItem Header="Left">
                        <h:GridSplitterContainer ID="Left">
                            <Border>
                                <Grid>
                                    <TextBlock FontSize="100" Text="Center" />
                                </Grid>
                            </Border>
                            <h:GridSplitterContainer.MenuContent>
                                <Border>
                                    <TextBlock FontSize="100" Text="Menu" />
                                </Border>
                            </h:GridSplitterContainer.MenuContent>
                        </h:GridSplitterContainer>
                    </TabItem>

                    <TabItem Header="right">
                        <h:GridSplitterContainer ID="right" Style="{DynamicResource {x:Static h:GridSplitterContainer.RightKey}}">
                            <Border>
                                <Grid>
                                    <TextBlock FontSize="100" Text="Center" />
                                </Grid>
                            </Border>
                            <h:GridSplitterContainer.MenuContent>
                                <Border>
                                    <TextBlock FontSize="100" Text="Menu" />
                                </Border>
                            </h:GridSplitterContainer.MenuContent>
                        </h:GridSplitterContainer>
                    </TabItem>

                    <TabItem Header="top">
                        <h:GridSplitterContainer ID="top" Style="{DynamicResource {x:Static h:GridSplitterContainer.TopKey}}">
                            <Border>
                                <Grid>
                                    <TextBlock FontSize="100" Text="Center" />
                                </Grid>
                            </Border>
                            <h:GridSplitterContainer.MenuContent>
                                <Border>
                                    <TextBlock FontSize="100" Text="Menu" />
                                </Border>
                            </h:GridSplitterContainer.MenuContent>
                        </h:GridSplitterContainer>
                    </TabItem>

                    <TabItem Header="bottom">
                        <h:GridSplitterContainer ID="bottom" Style="{DynamicResource {x:Static h:GridSplitterContainer.BottomKey}}">
                            <Border>
                                <Grid>
                                    <TextBlock FontSize="100" Text="Center" />
                                </Grid>
                            </Border>
                            <h:GridSplitterContainer.MenuContent>
                                <Border>
                                    <TextBlock FontSize="100" Text="Menu" />
                                </Border>
                            </h:GridSplitterContainer.MenuContent>
                        </h:GridSplitterContainer>
                    </TabItem>
                </TabControl>
            </Grid>
        </TabItem>

        <TabItem Header="GridSplitter">

            <TabItem.Resources>
                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            </TabItem.Resources>
            <TabControl>
                <TabItem Header="Colum_right">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Background="Green" />

                        <CheckBox x:Name="toggleButton"
                                  Width="30"
                                  Height="30"
                                  Margin="0,10,10,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Content="TG" />

                        <Grid Grid.Column="1" Visibility="{Binding IsChecked, ElementName=toggleButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="300" MinWidth="300" MaxWidth="600" />
                            </Grid.ColumnDefinitions>
                            <GridSplitter Width="5" ResizeBehavior="CurrentAndNext" ShowsPreview="True" />
                            <WrapPanel Grid.Column="1" Background="Aqua" />
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="Colum_left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="1" Background="Green" />

                        <CheckBox x:Name="toggleButton2"
                                  Grid.Column="1"
                                  Width="30"
                                  Height="30"
                                  Margin="0,10,10,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Content="TG" />

                        <Grid Grid.Column="0" Visibility="{Binding IsChecked, ElementName=toggleButton2, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300" MinWidth="10" MaxWidth="600" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <WrapPanel Background="Aqua" />
                            <GridSplitter Grid.Column="1"
                                          Width="5"
                                          Background="Red"
                                          ResizeBehavior="PreviousAndCurrent" />
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="Row">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Background="Yellow" Visibility="{Binding IsChecked, ElementName=toggleButton1, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="300" MinHeight="10" MaxHeight="600" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <WrapPanel Grid.Row="0" Background="Aqua" />
                            <GridSplitter Grid.Row="1"
                                          Height="5"
                                          HorizontalAlignment="Stretch"
                                          Background="Orange"
                                          ResizeBehavior="PreviousAndCurrent" />
                        </Grid>

                        <Border Grid.Row="1" Background="Green" />

                        <CheckBox x:Name="toggleButton1"
                                  Grid.Row="1"
                                  Width="30"
                                  Height="30"
                                  Margin="0,10,10,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Content="TG" />
                    </Grid>
                </TabItem>
            </TabControl>
            <!--<Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="2" Background="Yellow"/>
                <Grid Grid.Row="0" Background="Green" MinHeight="50" Visibility="{Binding ElementName=cbbbbb_gs,Path=IsChecked,Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"/>

                <GridSplitter Grid.Row="1" ResizeBehavior="CurrentAndNext" Background="Purple" Height="20" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                <CheckBox Grid.RowSpan="3" x:Name="cbbbbb_gs" IsChecked="True"/>
            </Grid>-->
        </TabItem>

        <!--<TabItem Header="SystemSetting">
            <UniformGrid>
                <h:SystemSetting />
            </UniformGrid>
        </TabItem>

        <TabItem Header="SystemSetting">
            <UniformGrid>
                <h:SystemSetting />
            </UniformGrid>
        </TabItem>-->

        <TabItem Header="ExpressionConverter">
            <UniformGrid>
                <UniformGrid Columns="1">
                    <Slider x:Name="slider1" Style="{DynamicResource {x:Static h:SliderKeys.Value}}" />
                    <TextBlock Text="{Binding ElementName=slider1, Path=Value, Converter={x:Static h:ConverterService.ExpressionOfParameterConverter}, ConverterParameter=arg*2+200}" />
                </UniformGrid>

                <UniformGrid Height="250" Columns="1">
                    <Slider x:Name="slider2" h:Cattach.Title="当前值" Style="{DynamicResource {x:Static h:SliderKeys.Label}}" />
                    <Label h:Cattach.Title="公式" Content="arg*3+300" Style="{DynamicResource {x:Static h:LabelKeys.Label}}" />
                    <Label h:Cattach.Title="转换值" Content="{Binding ElementName=slider2, Path=Value, Converter={h:ExpressionConverter arg*3+300}}" Style="{DynamicResource {x:Static h:LabelKeys.Label}}" />
                </UniformGrid>

                <UniformGrid Columns="1">
                    <Label h:Cattach.Title="集合索引值" Content="{Binding Source={StaticResource D.ArrayList.Items}, Converter={h:ExpressionConverter Expression=arg[2], ResultType={x:Type system:Object}}}" Style="{DynamicResource {x:Static h:LabelKeys.Label}}" />
                </UniformGrid>
            </UniformGrid>
        </TabItem>

        <TabItem Header="DelegateConverter">
            <local:Calc Func="arg+2" X="5">
                <local:Calc.Style>
                    <Style TargetType="{x:Type local:Calc}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type local:Calc}">
                                    <StackPanel>
                                        <TextBox h:Cattach.Title="X:" Style="{DynamicResource {x:Static h:TextBoxKeys.Label}}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=X, UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox h:Cattach.Title="Func:" Style="{DynamicResource {x:Static h:TextBoxKeys.Label}}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Func, UpdateSourceTrigger=PropertyChanged}" />
                                        <Label h:Cattach.Title="Y:" Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Y}" Style="{DynamicResource {x:Static h:LabelKeys.Label}}" />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </local:Calc.Style>
            </local:Calc>
        </TabItem>

        <TabItem Header="BuzyCommand">
            <TabControl>
                <TabItem Header="BuzyCommand">
                    <UniformGrid>
                        <Button h:Cattach.BuzyText="{Binding BuzyCommand.Message}"
                                h:Cattach.IsBuzy="{Binding BuzyCommand.IsBuzy, Mode=TwoWay}"
                                Command="{Binding BuzyCommand}"
                                Content="BuzyCommand" />
                    </UniformGrid>
                </TabItem>

                <TabItem Header="PercentCommand">
                    <UniformGrid>
                        <Button h:Cattach.BuzyText="{Binding PercentCommand.Message}"
                                h:Cattach.IsBuzy="{Binding PercentCommand.IsBuzy, Mode=TwoWay}"
                                h:Cattach.IsIndeterminate="False"
                                h:Cattach.Value="{Binding PercentCommand.Value}"
                                Command="{Binding PercentCommand}"
                                Content="PercentCommand" />
                    </UniformGrid>
                </TabItem>

                <TabItem Header="MessageCommand">
                    <UniformGrid>
                        <Button h:Cattach.BuzyText="{Binding MessageCommand.Message}"
                                h:Cattach.IsBuzy="{Binding MessageCommand.IsBuzy, Mode=TwoWay}"
                                Command="{Binding MessageCommand}"
                                Content="MessageCommand" />
                    </UniformGrid>
                </TabItem>
            </TabControl>
        </TabItem>

        <!--<TabItem Header="ProjectListBox">
            <DockPanel>
                <h:PropertyGrid Width="300" DockPanel.Dock="Right" SelectObject="{Binding ElementName=phc, Path=SelectedProject}" />

                <DockPanel>
                    <Button Command="{Binding RelayCommand}" CommandParameter="Button.Click.AddProject" Content="添加" />
                </DockPanel>

                <h:ProjectListBox x:Name="phc">
                    <ListBox.GroupStyle>
                        <GroupStyle ContainerStyle="{StaticResource S.GroupItem.Clear}">
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <DataGridRowsPresenter />
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                </h:ProjectListBox>
            </DockPanel>
        </TabItem>-->

        <TabItem Header="HighlightTextBlock">
            <Grid>
                <h:HighlightTextBlock Text="拍照翻译 语音翻译 权威词典 下载百度翻译 拍照翻译,秒现结果 支持17种语言,简单一拍, 翻译结果立刻实景展现 对话翻译,畅想沟通 体验语音同声翻译,即说即译, 让沟通更加.">
                    <h:HighlightTextBlock.HlContent>
                        <h:HighlightContent Content="翻译" />
                    </h:HighlightTextBlock.HlContent>
                </h:HighlightTextBlock>
            </Grid>
        </TabItem>

        <TabItem Header="ScrollBar">
            <DockPanel>
                <ScrollBar x:Name="h1111"
                           VerticalAlignment="Bottom"
                           DockPanel.Dock="Bottom"
                           Maximum="1000"
                           Minimum="-1000"
                           Orientation="Horizontal"
                           ViewportSize="1000"
                           Value="200" />

                <TextBlock>
                    <Run Text="Value:" />
                    <Run Text="{Binding ElementName=h1111, Path=Value}" />
                    <Run Text="ViewportSize:" />
                    <Run Text="{Binding ElementName=h1111, Path=ViewportSize}" />
                    <Run Text="Maximum:" />
                    <Run Text="{Binding ElementName=h1111, Path=Maximum}" />
                    <Run Text="Minimum:" />
                    <Run Text="{Binding ElementName=h1111, Path=Minimum}" />
                </TextBlock>
            </DockPanel>
        </TabItem>

        <!--<TabItem Header="ScrollBarLocator">
            <Grid>
                <Grid x:Name="grid_back">
                    <Grid.Background>
        -->
        <!--<LinearGradientBrush>
                            <GradientStop Color="Red" Offset="0"/>
                            <GradientStop Color="Green" Offset="1"/>
                        </LinearGradientBrush>-->
        <!--
                        <DrawingBrush Stretch="Uniform"
                                      TileMode="Tile"
                                      Viewport="0 0 100 100"
                                      ViewportUnits="Absolute">
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <GeometryDrawing Brush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}">
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0 0 100 100" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>

                                    <GeometryDrawing Brush="{DynamicResource {x:Static h:BrushKeys.BorderBrushAssist}}">
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0 0 50 50" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>

                                    <GeometryDrawing Brush="{DynamicResource {x:Static h:BrushKeys.BorderBrushAssist}}">
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="50 50 50 50" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup>

                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Grid.Background>
                </Grid>
                <ScrollBar x:Name="h"
                           VerticalAlignment="Bottom"
                           Maximum="1000"
                           Minimum="-1000"
                           Orientation="Horizontal"
                           ViewportSize="1000"
                           Value="200" />

                <ScrollBar x:Name="v"
                           HorizontalAlignment="Right"
                           Maximum="1000"
                           Minimum="-1000"
                           Orientation="Vertical"
                           ViewportSize="1000"
                           Value="120" />

                <h:ScrollBarLocator Width="200"
                                    Height="200"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    HorizontalScrollBar="{Binding ElementName=h, Mode=OneWay}"
                                    VerticalScrollBar="{Binding ElementName=v, Mode=OneWay}"
                                    Visual="{Binding ElementName=grid_back}" />
            </Grid>
        </TabItem>-->

        <!--<TabItem Header="PropertyControl">
            <DockPanel>
                <Button x:Name="btnnnn" />

        -->
        <!--<h:PropertyControl h:Cattach.TitleWidth="180" IsFilterBindable="True" SelectObject="{Binding ElementName=btnnnn}" />-->
        <!--
                <h:PropertyControl h:Cattach.TitleWidth="180" BindableOnly="True" SelectObject="{Binding ElementName=btnnnn}" />

            </DockPanel>
        </TabItem>-->

        <TabItem Header="StoryActions">
            <UniformGrid>
                <CheckBox x:Name="ccccccb" />
                <Button h:StoryService.IsStart="{Binding ElementName=ccccccb, Path=IsChecked}" Content="透明度">
                    <h:StoryService.Storys>
                        <h:StoryCollection>
                            <h:OpacityStory />
                        </h:StoryCollection>
                    </h:StoryService.Storys>
                </Button>

                <CheckBox x:Name="ccccccb1" />
                <Button h:StoryService.IsStart="{Binding ElementName=ccccccb1, Path=IsChecked}" Content="旋转">
                    <h:StoryService.Storys>
                        <h:StoryCollection>
                            <h:AngleStory />
                        </h:StoryCollection>
                    </h:StoryService.Storys>
                </Button>
            </UniformGrid>
        </TabItem>


        <TabItem Header="ArcSegment">
            <Grid>
                <Path HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      Stroke="Red"
                      StrokeThickness="10">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="50,50">

                                <LineSegment Point="0,50" />

                                <ArcSegment IsLargeArc="True"
                                            Point="50,0"
                                            RotationAngle="270"
                                            Size="50,50"
                                            SweepDirection="Counterclockwise" />

                                <LineSegment Point="50,50" />
                                <!--<ArcSegment Point="50,50" RotationAngle="120"  IsLargeArc="False" Size="50,50" SweepDirection="Counterclockwise"/>-->

                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="Gray" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" Value="Purple" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Fill" Value="Yellow"/>
                                </Trigger>-->
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Grid>
        </TabItem>
        <TabItem Header="ContextMenuService">
            <GroupBox Header="ContextMenuService">
                <StackPanel>
                    <StackPanel.Resources>
                        <ContextMenu x:Key="myContextMenu">
                            <MenuItem Header="Item" />
                            <MenuItem Header="Item" />
                            <MenuItem Header="Item" />
                            <MenuItem Header="Item" />
                            <MenuItem Header="Item" />
                            <MenuItem Header="Item" />
                        </ContextMenu>
                    </StackPanel.Resources>

                    <!--
                        Both buttons use the same ContextMenu but use the
                        properties on ContextMenuService to position them
                        differently.
                    -->
                    <GroupBox Header="Placement">
                        <Button ContextMenu="{StaticResource myContextMenu}"
                                ContextMenuService.HasDropShadow="False"
                                ContextMenuService.HorizontalOffset="50"
                                ContextMenuService.Placement="Relative"
                                ContextMenuService.VerticalOffset="-10">
                            button 1
                        </Button>
                    </GroupBox>


                    <GroupBox Header=" HasDropShadow ">
                        <Button ContextMenu="{StaticResource myContextMenu}"
                                ContextMenuService.HasDropShadow="True"
                                ContextMenuService.Placement="Right"
                                ContextMenuService.PlacementRectangle="0,0,30,30">
                            button 2
                        </Button>

                    </GroupBox>

                    <GroupBox Header="ShowOnDisabled">
                        <Button Height="30"
                                Content="Disabled Button"
                                ContextMenuService.ShowOnDisabled="True"
                                IsEnabled="False">
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Item 1" />
                                    <MenuItem Header="Item 2" />
                                    <MenuItem Header="Item 3" />
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="AccessText">
            <GroupBox Header="Alt键启用 用下划线来指定用作访问键的字符">
                <DockPanel LastChildFill="False">
                    <Button Command="{Binding RelayCommand}" DockPanel.Dock="Top">
                        <AccessText>_Edit</AccessText>
                    </Button>
                    <Button Command="{Binding RelayCommand}" DockPanel.Dock="Top">
                        <AccessText Text="_停止" />
                    </Button>
                    <Button Command="{Binding RelayCommand}" Content="用户名(_C)" DockPanel.Dock="Top" />
                    <TextBox x:Name="tbbb" DockPanel.Dock="Top" />
                    <Label Content="输入文本(_T)" DockPanel.Dock="Top" Target="{Binding ElementName=tbbb}" />
                </DockPanel>
            </GroupBox>
        </TabItem>
        <TabItem Header="AlternationConverter">
            <!--<DockPanel>
                <DockPanel.Resources>
            -->
            <!--  交替行样式 通过索引转换颜色 ContentProperty和IList  -->
            <!--
                    <AlternationConverter x:Key="conBack">
                        <SolidColorBrush />
                        <SolidColorBrush Color="Red" />
                    </AlternationConverter>
                </DockPanel.Resources>
            </DockPanel>-->

            <Grid>
                <Grid.Resources>
                    <x:Array x:Key="DataList" Type="{x:Type system:String}">
                        <system:String>First</system:String>
                        <system:String>Second</system:String>
                        <system:String>Third</system:String>
                    </x:Array>
                    <AlternationConverter x:Key="BackgroundConverter">
                        <SolidColorBrush>Red</SolidColorBrush>
                        <SolidColorBrush>Blue</SolidColorBrush>
                        <SolidColorBrush>Green</SolidColorBrush>
                    </AlternationConverter>
                    <AlternationConverter x:Key="FontStyleConverter">
                        <FontStyle>Normal</FontStyle>
                        <FontStyle>Italic</FontStyle>
                    </AlternationConverter>
                    <Style x:Key="AlternatingWithBinding" TargetType="ListBoxItem">
                        <Setter Property="Height" Value="50" />
                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource BackgroundConverter}}" />
                        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource FontStyleConverter}}" />
                    </Style>
                </Grid.Resources>
                <ListBox AlternationCount="100" ItemContainerStyle="{StaticResource AlternatingWithBinding}" ItemsSource="{StaticResource DataList}" />
            </Grid>

        </TabItem>

        <!--<TabItem Header="SearchComboBox">
            <DockPanel>
                <h:SearchComboBox MyItemsSource="{Binding Students}"/>
            </DockPanel>
        </TabItem>-->

        <TabItem Header="AnimatedTabControl">
            <DockPanel>
                <h:AnimatedTabControl>
                    <TabItem Header="Tab1">
                        <Grid Background="Red" />
                    </TabItem>
                    <TabItem Header="Tab2">
                        <Grid Background="Blue" />
                    </TabItem>
                    <TabItem Header="Tab3">
                        <Grid Background="Green" />
                    </TabItem>
                </h:AnimatedTabControl>
            </DockPanel>
        </TabItem>

        <TabItem Header="PropertyGrid - UsePropertyView">
            <DockPanel>
                <h:PropertyGrid h:Cattach.TitleMargin="5,0"
                                h:Cattach.TitleWidth="100"
                                SelectObject="{Binding Student}"
                                UsePropertyView="True">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="2" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </h:PropertyGrid>
            </DockPanel>
        </TabItem>

        <TabItem Header="MultiComboBox">
            <h:MultiComboBox ItemsSource="{Binding Students}" />
        </TabItem>

        <TabItem Header="SearchBox + SelectionBox">
            <DockPanel>
                <h:SearchBox x:Name="search1"
                             DockPanel.Dock="Top"
                             InSource="{Binding Students}"
                             IsAaZz="True"
                             IsAsync="False" />

                <h:SelectionBox x:Name="selectionbox"
                                DockPanel.Dock="Top"
                                InSource="{Binding ElementName=search1, Path=OutSource}"
                                InitSource="{Binding Students}"
                                IsAsync="False"
                                PropertyName="Class" />

                <h:SelectionBox x:Name="selectionbox1"
                                DockPanel.Dock="Top"
                                InSource="{Binding ElementName=selectionbox, Path=OutSource}"
                                InitSource="{Binding Students}"
                                IsAsync="True"
                                PropertyName="Age" />

                <ListBox ItemsSource="{Binding ElementName=selectionbox1, Path=OutSource}" />
            </DockPanel>
        </TabItem>

        <TabItem Header="SearchBox">
            <DockPanel>
                <h:SelectionBox x:Name="search"
                                DockPanel.Dock="Top"
                                InitSource="{Binding Students}"
                                IsUseCheckAll="True"
                                PropertyName="Class" />

                <ListBox ItemsSource="{Binding ElementName=search, Path=OutSource}" />
            </DockPanel>
        </TabItem>


        <TabItem Header="SearchBox">
            <DockPanel>
                <h:SearchBox x:Name="search3"
                             DockPanel.Dock="Top"
                             InSource="{Binding Students}"
                             IsAaZz="True" />

                <ListBox ItemsSource="{Binding ElementName=search3, Path=OutSource}" />
            </DockPanel>
        </TabItem>



        <TabItem Header="PropertyGrid">
            <h:PropertyGrid SelectObject="{Binding Property}" />
        </TabItem>


        <TabItem Header="输入小数点">
            <StackPanel>
                <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Converter={x:Static h:XConverter.DoubleTextConverter}}" />
                <TextBox Text="{Binding Value1, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />
                <TextBox Style="{x:Null}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </TabItem>

        <TabItem Header="CanvasMouseDragElementBehavior">
            <Grid Background="Green">
                <Canvas>
                    <Grid Canvas.Left="500"
                          Canvas.Top="100"
                          Width="100"
                          Height="50"
                          Background="Red">
                        <h:Interaction.Behaviors>
                            <h:CanvasMouseDragElementBehavior />
                        </h:Interaction.Behaviors>
                    </Grid>
                </Canvas>
            </Grid>
        </TabItem>

        <TabItem Header="AnimationCanvas">
            <h:AnimationCanvas>
                <Button Canvas.Left="100" Canvas.Top="300" Content="AnimationCanvas" />
            </h:AnimationCanvas>
        </TabItem>

        <TabItem Header="CallMethodCommand">
            <Grid>
                <Button Command="{Binding CallMethodCommand}" CommandParameter="Method" Content="CallMethodCommand" />
            </Grid>
        </TabItem>


        <TabItem Header="带有选中效果的图表">
            <Grid>
                <h:Chart Padding="100,50" xAxis="0,1,2,3,4,5,6,7,8,9,10,11" yAxis="0,1,2,3,4,5,6,7,8,9,10">
                    <h:Series>
                        <ListBox>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <Point X="100" Y="200" />
                            <Point X="300" Y="100" />
                            <Point X="0" Y="0" />

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run Text="X:" />
                                        <Run Text="{Binding X}" />
                                        <Run Text="X:" />
                                        <Run Text="{Binding Y}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Default}}" TargetType="ListBoxItem">
                                    <Setter Property="Canvas.Left" Value="{Binding X}" />
                                    <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                    <Setter Property="Padding" Value="0" />
                                    <!--<Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>-->
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </h:Series>
                </h:Chart>
            </Grid>
        </TabItem>

        <TabItem Header="TransformAttach - 改变控件尺寸和位置">
            <Canvas Background="Red">
                <Button Canvas.Left="100"
                        Canvas.Top="500"
                        Width="100"
                        Height="50"
                        h:TransformAttach.IsVisible="True"
                        Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                        Content="按钮">
                    <h:TransformAttach.ThumbStyle>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="Height" Value="10" />
                            <Setter Property="Width" Value="10" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Grid>
                                            <Ellipse Width="{TemplateBinding Width}"
                                                     Height="{TemplateBinding Height}"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Fill="Green" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </h:TransformAttach.ThumbStyle>
                </Button>
            </Canvas>
        </TabItem>

        <TabItem Header="TransformAdorner - 改变控件尺寸和位置">
            <Canvas Background="Red">
                <Grid Canvas.Left="100"
                      Canvas.Top="500"
                      Width="100"
                      Height="50"
                      Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                    <h:TransformAttach.ThumbStyle>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="Height" Value="10" />
                            <Setter Property="Width" Value="10" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Grid>
                                            <Ellipse Width="{TemplateBinding Width}"
                                                     Height="{TemplateBinding Height}"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Fill="Green" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </h:TransformAttach.ThumbStyle>
                    <h:Interaction.Behaviors>
                        <h:LoadedAdornerBehavior AdornerType="{x:Type h:TransformAdorner}" />
                    </h:Interaction.Behaviors>
                </Grid>
            </Canvas>
        </TabItem>

        <TabItem Header="向导提示">
            <UniformGrid>
                <CheckBox HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          h:Cattach.GuideTitle="这是一个向导说明示例说明1"
                          h:GuideAdorner.GuideParent="{Binding ElementName=tc_all}"
                          h:GuideAdorner.IsShow="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                          Content="第一步" />
                <h:SwitchToggleButton h:Cattach.GuideTitle="这是一个向导说明示例说明3"
                                      h:GuideAdorner.GuideParent="{Binding ElementName=tc_all}"
                                      h:GuideAdorner.IsShow="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                      Content="第三步" />
                <h:BulletCheckBox h:Cattach.GuideTitle="这是一个第四部"
                                  h:GuideAdorner.GuideParent="{Binding ElementName=tc_all}"
                                  h:GuideAdorner.IsShow="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                  Content="第四步" />
            </UniformGrid>
        </TabItem>

        <TabItem Header="Chart - 散点图">
            <Grid>
                <h:Chart Padding="100,50" xAxis="-200,-150,-100,-50,50,100,150,200" yAxis="-200,-150,-100,-50,0,50,100,150,200">
                    <h:ViewLayerGroup>
                        <h:yAxis HorizontalAlignment="Center" />
                        <h:xAxis VerticalAlignment="Center" />
                        <h:Grid Style="{DynamicResource {x:Static h:Grid.CrossKey}}" />
                    </h:ViewLayerGroup>
                    <h:Series>
                        <h:AreaScatter Data="[-161.2, -151.6], [167.5, -59.0],[-157.0, 63.0], [155.8, 53.6],                 [20.0, 59.0], [59.1, 47.6], [166.0, 69.8], [-76.2, 66.8], [160.2, 175.2]" />
                    </h:Series>
                </h:Chart>
            </Grid>
        </TabItem>

        <TabItem Header="行为 - 拖拽ListBox">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ListBox ItemContainerStyle="{DynamicResource {x:Static h:DragAdorner.ListBoxItemAllowDropBothKey}}" ItemsSource="{Binding AutoCompleteSource}" />

                <ListBox Grid.Column="1"
                         Background="LightGray"
                         ItemsSource="{Binding AutoCompleteSelecteds}"
                         Style="{DynamicResource {x:Static h:ListBoxKeys.AllowDrag}}" />

            </Grid>
        </TabItem>

        <TabItem Header="行为 - 拖拽添加到Canvas容器内">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel>
                    <Rectangle Width="80" Height="80">
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                        <Rectangle.Fill>
                            <LinearGradientBrush>
                                <GradientStop Offset="0" Color="Red" />
                                <GradientStop Offset="1" Color="Green" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>

                    <Ellipse Width="80" Height="80" Margin="0,10">
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                        <Ellipse.Fill>
                            <LinearGradientBrush>
                                <GradientStop Offset="0" Color="Red" />
                                <GradientStop Offset="1" Color="Green" />
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>

                    <Polyline Margin="0,10" Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" Points="0,0 100,50 0,100 0,0">
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                    </Polyline>

                    <Button Margin="0,10" Content="按钮" IsEnabled="True">
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                    </Button>

                    <ComboBox Width="100"
                              Margin="0,10"
                              ItemsSource="{StaticResource D.ArrayList.Items}"
                              SelectedIndex="0">
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                    </ComboBox>

                    <Border Margin="0,10" Background="Transparent">
                        <TextBox Width="100" IsHitTestVisible="False" Text="TextBox" />

                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                    </Border>

                    <Border Margin="0,10" Background="Transparent">
                        <DatePicker Width="100" Focusable="False" IsHitTestVisible="False" />
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                </StackPanel>

                <Canvas Grid.Column="1" AllowDrop="True" Background="LightGray">
                    <h:Interaction.Behaviors>
                        <h:DropAdornerCanvasBehavior />
                    </h:Interaction.Behaviors>
                </Canvas>

            </Grid>
        </TabItem>

        <TabItem Header="行为 - DragAdornerBehavior DropAdornerMode">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <AdornerDecorator Width="50">
                    <Rectangle>
                        <h:Interaction.Behaviors>
                            <h:DragAdornerBehavior DropAdornerMode="OnlyX" />
                        </h:Interaction.Behaviors>
                        <Rectangle.Fill>
                            <LinearGradientBrush>
                                <GradientStop Offset="0" Color="Red" />
                                <GradientStop Offset="1" Color="Green" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </AdornerDecorator>

            </Grid>
        </TabItem>

        <TabItem Header="PropertyGrid - 自定义模板">
            <Grid>
                <Grid.Resources>
                    <DataTemplate x:Key="S.ObjectPropertItem.Age">
                        <Grid Height="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" Visibility="{Binding Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>

                            <ComboBox h:Cattach.Title="{Binding Name}"
                                      h:Cattach.TitleWidth="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=(h:Cattach.TitleWidth)}"
                                      SelectedItem="{Binding Value}"
                                      Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}">
                                <system:Int32>1</system:Int32>
                                <system:Int32>2</system:Int32>
                                <system:Int32>3</system:Int32>
                            </ComboBox>


                            <TextBlock Grid.Column="3"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="14"
                                       Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                       Text="&#xe626;"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Message}"
                                       Visibility="{Binding Message, Converter={x:Static h:XConverter.VisibilityWithOutStringConverter}, ConverterParameter={x:Null}}" />
                        </Grid>
                    </DataTemplate>
                </Grid.Resources>

                <ScrollViewer>
                    <h:PropertyGrid VerticalAlignment="Stretch" h:Cattach.TitleWidth="100" SelectObject="{Binding Student}">
                        <!--<h:PropertyGrid.ItemTemplateSelector>
                            <local:StudentPropertyTemplateSelector RunningTempate="{StaticResource S.ObjectPropertItem.Age}" />
                        </h:PropertyGrid.ItemTemplateSelector>-->
                    </h:PropertyGrid>
                </ScrollViewer>
            </Grid>
        </TabItem>

        <TabItem Header="PropertyGrid - 复杂类型显示">
            <Grid>
                <ScrollViewer>
                    <h:PropertyGrid VerticalAlignment="Stretch" h:Cattach.TitleWidth="100" SelectObject="{Binding Config}" />
                </ScrollViewer>
            </Grid>
        </TabItem>

        <TabItem Header="行为 - 集合显示行号">
            <Grid>
                <ListBox h:Cattach.UseClose="True" ItemsSource="{Binding Students}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock>
                                    <h:Interaction.Behaviors>
                                        <h:ItemsControlItemIndexBehavior />
                                    </h:Interaction.Behaviors>
                                </TextBlock>

                                <TextBlock Margin="50,0" Text="{Binding Name}" />

                                <TextBlock Margin="50,0" Text="{Binding Address}" />
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </TabItem>

        <TabItem Header="横表">
            <Grid>
                <DataGrid AutoGenerateColumns="True"
                          ColumnHeaderHeight="150"
                          ItemsSource="{Binding Students}"
                          RowHeight="150"
                          Style="{StaticResource {x:Static h:DataGridKeys.VerticalDefault}}">
                    <!--<DataGrid.Columns>
                        <DataGridTextColumn Header="地址" Binding="{Binding Address}" Width="*"/>
                        <DataGridTextColumn Header="地址"  Binding="{Binding Age}" Width="*"/>
                        <DataGridTextColumn Header="地址"  Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="地址"  Binding="{Binding Time}" Width="*"/>
                    </DataGrid.Columns>-->
                </DataGrid>
            </Grid>
        </TabItem>

        <TabItem Header="数据源合并 - CompositeCollection">
            <Grid>
                <ListBox>
                    <ListBox.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer Collection="{StaticResource D.ArrayList.Items}" />
                            <TextBlock HorizontalAlignment="Right" Text="">
                                <Run Text="合计：" />
                                <Run Text="{Binding Source={StaticResource D.ArrayList.Items}, Path=Count, Mode=OneWay}" />
                            </TextBlock>
                            <CollectionContainer Collection="{StaticResource D.ArrayList.LargeSource}" />
                            <TextBlock HorizontalAlignment="Right" Text="">
                                <Run Text="合计：" />
                                <Run Text="{Binding Source={StaticResource D.ArrayList.LargeSource}, Path=Count, Mode=OneWay}" />
                            </TextBlock>
                        </CompositeCollection>
                    </ListBox.ItemsSource>
                </ListBox>
            </Grid>
        </TabItem>
        <TabItem Header="ArcSegment">
            <Grid>
                <Path HorizontalAlignment="Left" VerticalAlignment="Top" Stroke="Red">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="50,50">
                                <LineSegment Point="0,50" />
                                <ArcSegment IsLargeArc="True"
                                            Point="50,0"
                                            RotationAngle="270"
                                            Size="50,50"
                                            SweepDirection="Counterclockwise" />
                                <LineSegment Point="50,50" />
                                <!--<ArcSegment Point="50,50" RotationAngle="120"  IsLargeArc="False" Size="50,50" SweepDirection="Counterclockwise"/>-->
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Grid>
        </TabItem>
        <TabItem Header="ScrollView - 滚动劫持">
            <ScrollViewer>
                <Grid Background="Gray">
                    <UniformGrid Height="1000">
                        <h:FScrollView Height="300">
                            <Grid Height="1000" Background="Red" />
                        </h:FScrollView>
                        <h:FScrollView Height="300">
                            <Grid Height="1000" Background="Yellow" />
                        </h:FScrollView>
                        <h:FScrollView Height="300">
                            <Grid Height="1000" Background="Orange" />
                        </h:FScrollView>
                        <h:FScrollView Height="300">
                            <Grid Height="1000" Background="Purple" />
                        </h:FScrollView>
                    </UniformGrid>
                </Grid>
            </ScrollViewer>
        </TabItem>

        <TabItem Header="表单 - h:Cattach.Title">
            <DockPanel LastChildFill="False">
                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <TextBox h:Cattach.Title="标题标题" Style="{StaticResource {x:Static h:TextBoxKeys.LabelClear}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <ComboBox h:Cattach.Title="标题"
                              h:Cattach.Watermark="sss"
                              ItemsSource="{StaticResource D.ArrayList.Items}"
                              Style="{StaticResource {x:Static h:ComboBoxKeys.LabelClear}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <DatePicker h:Cattach.Title="标题" Style="{StaticResource {x:Static h:DatePickerKeys.LabelClear}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <CheckBox h:Cattach.Title="标题" Style="{StaticResource {x:Static h:CheckBoxKeys.Label}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <Slider h:Cattach.Title="标题" Style="{StaticResource {x:Static h:SliderKeys.Label}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <h:PasswordBox h:Cattach.Title="标题" PassWord="123456" Style="{StaticResource {x:Static h:PasswordBox.LabelClearKey}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <Label h:Cattach.Title="标题" Content="Label" Style="{StaticResource {x:Static h:LabelKeys.Label}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <Button h:Cattach.Title="标题" Content="Button" Style="{StaticResource {x:Static h:ButtonKeys.Label}}" />
                </h:Row>

                <h:Row Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <ProgressBar h:Cattach.Title="标题" Style="{StaticResource {x:Static h:ProgressBarKeys.LabelHandy}}" Value="50" />
                </h:Row>

                <h:Row Height="Auto" Style="{DynamicResource {x:Static h:Row.Column1Key}}">
                    <ListBox h:Cattach.Title="标题" ItemsSource="{StaticResource D.ArrayList.Source}" Style="{StaticResource {x:Static h:ListBoxKeys.Label}}" />
                </h:Row>
            </DockPanel>
        </TabItem>

        <TabItem Header="扇形 - Sector">
            <GroupBox Header="Sector">
                <DockPanel>
                    <Slider h:Cattach.Title="Start"
                            DockPanel.Dock="Top"
                            Maximum="360"
                            Minimum="0"
                            Style="{DynamicResource {x:Static h:SliderKeys.Label}}"
                            Value="{Binding ElementName=st, Path=Start, Mode=TwoWay}" />
                    <Slider Margin="0,20"
                            h:Cattach.Title="End"
                            DockPanel.Dock="Top"
                            Maximum="360"
                            Minimum="0"
                            Style="{DynamicResource {x:Static h:SliderKeys.Label}}"
                            Value="{Binding ElementName=st, Path=End, Mode=TwoWay}" />
                    <Slider h:Cattach.Title="OffSet"
                            DockPanel.Dock="Top"
                            Maximum="360"
                            Minimum="0"
                            Style="{DynamicResource {x:Static h:SliderKeys.Label}}"
                            Value="{Binding ElementName=st, Path=OffSet, Mode=TwoWay}" />
                    <Slider Margin="0,20"
                            h:Cattach.Title="Len"
                            DockPanel.Dock="Top"
                            Maximum="360"
                            Minimum="0"
                            Style="{DynamicResource {x:Static h:SliderKeys.Label}}"
                            Value="{Binding ElementName=st, Path=Len, Mode=TwoWay}" />

                    <h:Sector x:Name="st"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              End="90" Start="2"
                              StrokeThickness="5">
                        <h:Sector.Fill>
                            <LinearGradientBrush>
                                <GradientStop Offset="-0.5" Color="Transparent" />
                                <GradientStop Offset="1" Color="Red" />
                            </LinearGradientBrush>
                        </h:Sector.Fill>

                        <h:Sector.Style>
                            <Style TargetType="h:Sector">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" Value="Yellow" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Fill" Value="Green" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </h:Sector.Style>
                    </h:Sector>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="Menu - 绑定数据源">
            <GroupBox Header="Menu Bind">
                <DockPanel>
                    <Menu x:Name="TreeRoot"
                          Grid.Column="0"
                          HorizontalAlignment="Stretch"
                          BorderThickness="0"
                          ItemsSource="{Binding Source={StaticResource xdp}}">
                        <Menu.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding XPath=Folder}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center"
                                               FontSize="15"
                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                               Text="{Binding XPath=@Icon}" />
                                    <TextBlock x:Name="a" VerticalAlignment="Center" Text="{Binding XPath=@Name}" />
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </Menu.ItemTemplate>
                    </Menu>
                </DockPanel>
            </GroupBox>
        </TabItem>
        <TabItem Header="FilterColumn - 表格列头筛选">
            <GroupBox Header="FilterColumn">
                <DockPanel>
                    <DataGrid AutoGenerateColumns="True">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <h:FilterColumn x:Name="fc"
                                                            Margin="2,0"
                                                            DataSource="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel.Students}"
                                                            DockPanel.Dock="Right"
                                                            OutSource="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=ItemsSource, Mode=TwoWay}"
                                                            PropertyName="Class" />
                                            <TextBlock Text="班级" />
                                        </DockPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <TextBlock Text="{Binding Class}" />
                                        </DockPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </GroupBox>
        </TabItem>
        <TabItem Header="h:DockPanel - 自定义停靠容器">
            <GroupBox Header="h:DockPanel">
                <Grid>
                    <h:CrossPanel IsFull="True" SmallSize="70" StartIndex="4">
                        <Grid Background="Purple" />
                        <Grid Background="Green" />
                        <Grid Background="Orange" />
                        <Grid Background="Gray" />
                        <Grid Background="Red" />
                        <Grid Background="Blue" />
                        <Grid Background="Purple" />
                        <Grid Background="Green" />
                        <Grid Background="Orange" />
                        <Grid Background="Gray" />
                        <Grid Background="Red" />
                        <Grid Background="Blue" />
                        <Grid Background="Purple" />
                        <Grid Background="Green" />
                        <Grid Background="Orange" />
                        <Grid Background="Gray" />
                        <Grid Background="Red" />
                        <Grid Background="Blue" />
                        <!--<Grid Background="Orange"/>-->
                    </h:CrossPanel>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="h:DockPanel - 自定义停靠容器">
            <GroupBox Header="TopAndBottom">
                <ItemsControl>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <h:DockPanel Dock="Left"
                                         IsFull="True"
                                         SmallSize="70"
                                         StartIndex="0">
                                <h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.5" />
                                </h:Interaction.Behaviors>
                            </h:DockPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <DockPanel>
                                <h:Row DockPanel.Dock="Top" Style="{DynamicResource {x:Static h:Row.Column12Key}}">
                                    <Button Grid.Column="0"
                                            h:Cattach.Icon="&#xe8b7;"
                                            Command="{x:Static h:Commander.Prev}"
                                            CommandTarget="{Binding ElementName=items, Converter={x:Static h:XConverter.ItemPanelConverter}}"
                                            Style="{StaticResource {x:Static h:ButtonKeys.Transparent}}" />

                                    <Button Grid.Column="1"
                                            h:Cattach.Icon="&#xe8b6;"
                                            Command="{x:Static h:Commander.Next}"
                                            CommandTarget="{Binding ElementName=items, Converter={x:Static h:XConverter.ItemPanelConverter}}"
                                            Style="{StaticResource {x:Static h:ButtonKeys.Transparent}}" />
                                </h:Row>

                                <ItemsPresenter x:Name="items" />
                            </DockPanel>
                        </ControlTemplate>
                    </ItemsControl.Template>

                    <Grid Background="Purple" />
                    <Grid Background="Green" />
                    <Grid Background="Orange" />
                    <Grid Background="Gray" />
                    <Grid Background="Red" />
                    <Grid Background="Blue" />
                    <Grid Background="Purple" />
                    <Grid Background="Green" />
                    <Grid Background="Orange" />
                    <Grid Background="Gray" />
                    <Grid Background="Red" />
                    <Grid Background="Blue" />
                    <Grid Background="Purple" />
                    <Grid Background="Green" />
                    <Grid Background="Orange" />
                    <Grid Background="Gray" />
                    <Grid Background="Red" />
                    <Grid Background="Blue" />
                    <Grid Background="Orange" />
                </ItemsControl>
            </GroupBox>

            <!--<GroupBox Header="h:DockPanel">
                <Grid>

                    <h:DockPanel Dock="Left" SmallSize="70" StartIndex="0">
                        <Grid Background="Purple"/>
                        <Grid Background="Green"/>
                        <Grid Background="Orange"/>
                        <Grid Background="Gray"/>
                        <Grid Background="Red"/>
                        <Grid Background="Blue"/>
                        <Grid Background="Purple"/>
                        <Grid Background="Green"/>
                        <Grid Background="Orange"/>
                        <Grid Background="Gray"/>
                        <Grid Background="Red"/>
                        <Grid Background="Blue"/>
                        <Grid Background="Purple"/>
                        <Grid Background="Green"/>
                        <Grid Background="Orange"/>
                        <Grid Background="Gray"/>
                        <Grid Background="Red"/>
                        <Grid Background="Blue"/>
                        <Grid Background="Orange"/>
                    </h:DockPanel>
                </Grid>
            </GroupBox>-->
        </TabItem>

        <TabItem Header="ElementExpander - 右下角弧形布局">
            <GroupBox Header="ElementExpander">
                <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="Purple">
                    <!--<h:ArcPanel StartAngle="90" EndAngle="180" Len="130" Background="Red" Margin="0,0,-65,-65" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <Button Content="1"/>
                        <Button Content="2"/>
                        <Button Content="3"/>
                        <Button Content="4"/>
                        <Button Content="5"/>
                        <Button Content="6"/>
                    </h:ArcPanel>-->
                    <h:ElementExpander Style="{StaticResource {x:Static h:ElementExpander.MouseEnterKey}}">
                        <h:ToggleExpander.ItemsPanel>
                            <ItemsPanelTemplate>
                                <h:ArcPanel Margin="0,0,-65,-65"
                                            EndAngle="180"
                                            IsAnimation="False"
                                            Len="120"
                                            StartAngle="90" />
                            </ItemsPanelTemplate>
                        </h:ToggleExpander.ItemsPanel>

                        <h:ElementExpander.Content>
                            <TextBlock HorizontalAlignment="Right"
                                       VerticalAlignment="Bottom"
                                       Foreground="White"
                                       Text="鼠标放进来" />
                        </h:ElementExpander.Content>

                        <Button Content="1" Visibility="Collapsed" />
                        <Button Content="2" Visibility="Collapsed" />
                        <Button Content="3" Visibility="Collapsed" />
                        <Button Content="4" Visibility="Collapsed" />
                    </h:ElementExpander>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="ElementExpander">
            <GroupBox Header="ElementExpander">
                <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="Purple">
                    <!--<h:ArcPanel StartAngle="90" EndAngle="180" Len="130" Background="Red" Margin="0,0,-65,-65" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <Button Content="1"/>
                        <Button Content="2"/>
                        <Button Content="3"/>
                        <Button Content="4"/>
                        <Button Content="5"/>
                        <Button Content="6"/>
                    </h:ArcPanel>-->

                    <h:ElementExpander Style="{StaticResource {x:Static h:ElementExpander.MouseEnterKey}}">
                        <h:ToggleExpander.ItemsPanel>
                            <ItemsPanelTemplate>
                                <h:ArcPanel Margin="0,0,-65,-65"
                                            EndAngle="180"
                                            IsAnimation="False"
                                            Len="120"
                                            StartAngle="90" />
                            </ItemsPanelTemplate>
                        </h:ToggleExpander.ItemsPanel>

                        <h:ElementExpander.Content>
                            <TextBlock HorizontalAlignment="Right"
                                       VerticalAlignment="Bottom"
                                       Foreground="Red"
                                       Text="鼠标放进来" />
                        </h:ElementExpander.Content>

                        <Button Content="1" Visibility="Collapsed" />
                        <Button Content="2" Visibility="Collapsed" />
                        <Button Content="3" Visibility="Collapsed" />
                        <Button Content="4" Visibility="Collapsed" />
                    </h:ElementExpander>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="MarkTip测试">
            <GroupBox Height="470" Header="曲线图">
                <h:Chart Padding="100,50" xAxis="1,2,3,4,5,6,7,8,9,10,11,12" yAxis="0,1,2,3,4,5,6,7,8,9,10">
                    <h:Series yDatas="5,4,3,4,5,8,9,7,1,2,4,8,5">
                        <h:line />
                        <h:MarkTip MarkTipType="Step" />
                    </h:Series>
                </h:Chart>
            </GroupBox>
        </TabItem>

        <TabItem Header="ScrollViewer - 鹰眼图">
            <GroupBox Header="ScrollViewerTransfor">
                <Grid>
                    <h:ScrollViewerTransfor x:Name="svt" IsFullParent="True">
                        <h:Interaction.Behaviors>
                            <h:MouseGestureScrollViewerBehavior ChangeButton="Right" />
                        </h:Interaction.Behaviors>
                        <Grid Width="1500" Height="1500">
                            <Grid.Background>
                                <LinearGradientBrush>
                                    <GradientStop Offset="0" Color="Red" />
                                    <GradientStop Offset="0.3" Color="Green" />
                                    <GradientStop Offset="0.7" Color="Orange" />
                                    <GradientStop Offset="1" Color="Purple" />
                                </LinearGradientBrush>
                            </Grid.Background>
                            <TextBlock FontSize="300" Text="Linear" />
                        </Grid>
                    </h:ScrollViewerTransfor>
                    <Grid Width="200"
                          Height="200"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Bottom">
                        <h:ScrollViewerLocator ScrollViewer="{Binding ElementName=svt}" />
                    </Grid>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="ScrollViewer - 鹰眼图">
            <GroupBox Header="ScrollViewerLocator">
                <Grid>
                    <ScrollViewer x:Name="sssvv1" HorizontalScrollBarVisibility="Auto">
                        <h:Interaction.Behaviors>
                            <h:MouseGestureScrollViewerBehavior />
                        </h:Interaction.Behaviors>
                        <Grid Width="2000" Height="4000">
                            <Grid.Background>
                                <LinearGradientBrush>
                                    <GradientStop Offset="0" Color="Red" />
                                    <GradientStop Offset="0.3" Color="Green" />
                                    <GradientStop Offset="0.7" Color="Orange" />
                                    <GradientStop Offset="1" Color="Purple" />
                                </LinearGradientBrush>
                            </Grid.Background>

                            <TextBlock FontSize="600" Text="LinearGradientBrush" />
                        </Grid>
                    </ScrollViewer>

                    <Grid Width="200"
                          Height="200"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Bottom">
                        <h:ScrollViewerLocator ScrollViewer="{Binding ElementName=sssvv1}" />
                    </Grid>

                    <Grid Width="200"
                          Height="200"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Bottom">
                        <Grid.Background>
                            <VisualBrush Stretch="None" Viewbox="0 0 0.4 0.16" Visual="{Binding ElementName=sssvv1, Path=Content}" />
                        </Grid.Background>
                    </Grid>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="ElementExpander - Center">
            <GroupBox Header="S.ElementExpander.Center">
                <UniformGrid>
                    <h:ElementExpander Background="Red" Style="{StaticResource {x:Static h:ElementExpander.MouseEnterKey}}">
                        <h:ElementExpander.Content>
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="Red"
                                       Text="鼠标放进来" />
                        </h:ElementExpander.Content>

                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                    </h:ElementExpander>

                    <h:ElementExpander HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource {x:Static h:ElementExpander.MouseEnterKey}}">
                        <h:ToggleExpander.ItemsPanel>
                            <ItemsPanelTemplate>
                                <h:ArcPanel Margin="-30"
                                            EndAngle="100"
                                            IsAnimation="False"
                                            Len="50"
                                            StartAngle="-10" />
                            </ItemsPanelTemplate>
                        </h:ToggleExpander.ItemsPanel>

                        <h:ElementExpander.Content>
                            <TextBlock HorizontalAlignment="Right"
                                       VerticalAlignment="Bottom"
                                       Foreground="Red"
                                       Text="鼠标放进来" />
                        </h:ElementExpander.Content>

                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button h:Cattach.CornerRadius="50" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                    </h:ElementExpander>
                </UniformGrid>
            </GroupBox>
        </TabItem>

        <TabItem Header="基础控件">
            <GroupBox Header="基础控件">
                <ScrollViewer>
                    <StackPanel>
                        <GroupBox Header="Button">
                            <Button Content="按钮" />
                        </GroupBox>

                        <GroupBox Header="TextBox">
                            <TextBlock Text="按钮" />
                        </GroupBox>

                        <GroupBox Header="Label">
                            <Label Content="按钮" />
                        </GroupBox>

                        <GroupBox Header="TextBox">
                            <StackPanel>
                                <TextBox h:Cattach.Watermark="水印" Text="文本控件" />
                                <TextBox Margin="0,5"
                                         h:Cattach.Title="标题"
                                         h:Cattach.Watermark="水印"
                                         Style="{StaticResource {x:Static h:TextBoxKeys.Label}}"
                                         Text="文本控件" />
                                <TextBox h:Cattach.Title="标题"
                                         h:Cattach.Watermark="水印"
                                         Style="{StaticResource {x:Static h:TextBoxKeys.Clear}}"
                                         Text="文本控件" />
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="CheckBox">
                            <CheckBox Content="漩涡" />
                        </GroupBox>


                        <GroupBox Header="RadioButton">
                            <StackPanel>
                                <RadioButton Content="第一个" />
                                <RadioButton Content="第二个" />
                                <RadioButton Content="第三个" />
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="ToggleButton">
                            <ToggleButton Height="50" Content="ToggleButton" />
                        </GroupBox>

                        <GroupBox Header="ComboBox">
                            <ComboBox ItemsSource="{StaticResource D.ArrayList.Source}" SelectedIndex="0" />
                        </GroupBox>

                        <GroupBox Header="DatePicker">
                            <DatePicker />
                        </GroupBox>

                        <GroupBox Header="Slider">
                            <Slider Value="50" />
                        </GroupBox>

                        <GroupBox Header="ProgressBar">
                            <StackPanel>
                                <ProgressBar Value="50" />

                                <ProgressBar Style="{DynamicResource {x:Static h:ProgressBarKeys.Buzy}}" />
                            </StackPanel>

                            <!--<ProgressBar  Background="Red" Foreground="Red"
                          Opacity="0.5"   Width="100"
                          Visibility="{TemplateBinding h:Cattach.IsBuzy,Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                          BorderBrush="Transparent"
                          IsIndeterminate="True"
                          BorderThickness="0">-->
                        </GroupBox>

                        <GroupBox Header="ToolTip">
                            <TextBlock Text="ToolTip" ToolTip="提示消息" />
                        </GroupBox>

                        <GroupBox Header="ContextMenu">
                            <TextBlock Text="ContextMenu">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="添加文件" Icon="&#xe62c;" />
                                        <MenuItem Header="添加文件夹" Icon="&#xe66b;">
                                            <MenuItem Header="新建场景" Icon="&#xe661;" />
                                            <MenuItem Header="新建模板" Icon="&#xe661;" />
                                            <MenuItem Header="打开场景" Icon="&#xe661;" />
                                            <MenuItem Header="保存场景" Icon="&#xe661;" />
                                        </MenuItem>
                                        <MenuItem Header="粘贴" Icon="&#xe661;" />
                                        <MenuItem Header="删除" Icon="&#xe63b;" />
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </GroupBox>

                        <GroupBox Header="Menu">
                            <Menu>
                                <MenuItem Header="文件(F)">
                                    <MenuItem Header="新建场景" />
                                    <MenuItem Header="新建模板" />
                                    <MenuItem Header="打开场景" />
                                    <MenuItem Header="保存场景" />
                                    <MenuItem Header="另存为" />
                                    <MenuItem Header="操作">
                                        <MenuItem Header="上移" />
                                        <MenuItem Header="下移" />
                                        <MenuItem Header="复制" />
                                        <MenuItem Header="粘贴" />
                                        <MenuItem Header="删除" />
                                    </MenuItem>
                                    <MenuItem Header="退出" />
                                </MenuItem>

                                <MenuItem Header="设置(S)" />

                                <MenuItem Header="帮助(H)">
                                    <MenuItem Header="软件升级" />
                                    <MenuItem Header="关于" />
                                </MenuItem>
                            </Menu>
                        </GroupBox>

                        <GroupBox Header="Expander">
                            <StackPanel>
                                <Expander Header="Expander1">
                                    <Grid Height="100" />
                                </Expander>
                                <Expander Header="Expander2">
                                    <Grid Height="100" />
                                </Expander>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="ListBox">
                            <ListBox ItemsSource="{StaticResource D.ArrayList.Source}" />
                        </GroupBox>

                        <GroupBox Header="DataGrid">
                            <DataGrid AutoGenerateColumns="True" ItemsSource="{Binding Students}" />
                        </GroupBox>

                        <GroupBox Header="TreeView">
                            <TreeView>
                                <TreeViewItem Header="我的电脑">
                                    <TreeViewItem Header="记事本" />
                                    <TreeViewItem Header="记事本" />
                                    <TreeViewItem Header="记事本">
                                        <TreeViewItem Header="记事本" />
                                        <TreeViewItem Header="记事本" />
                                        <TreeViewItem Header="记事本" />
                                        <TreeViewItem Header="记事本" />
                                    </TreeViewItem>
                                    <TreeViewItem Header="记事本" />
                                    <TreeViewItem Header="记事本" />
                                </TreeViewItem>
                            </TreeView>
                        </GroupBox>

                        <GroupBox Header="TabControl">
                            <TabControl>
                                <TabItem Header="TabItem1">
                                    <Grid Height="100" Background="Red" />
                                </TabItem>
                                <TabItem Header="TabItem2">
                                    <Grid Height="100" Background="Green" />
                                </TabItem>
                                <TabItem Header="TabItem3">
                                    <Grid Height="100" Background="Purple" />
                                </TabItem>
                                <TabItem Header="TabItem4">
                                    <Grid Height="100" Background="Orange" />
                                </TabItem>
                            </TabControl>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - 文本输入根据数据源自动完成">
            <GroupBox Header="AutoCompleteBehavior">

                <UniformGrid Columns="2">
                    <StackPanel>
                        <GroupBox Header="不启用历史记录，启用数据源">
                            <TextBox h:AutoComplete.AutoCompleteItemsSource="{Binding AutoCompleteSource}" />
                        </GroupBox>

                        <GroupBox Header="不启用历史记录，不启用数据源">
                            <TextBox />
                        </GroupBox>

                        <GroupBox Header="启用历史记录，不启用数据源">
                            <TextBox h:Cattach.IsUseHistory="True" Style="{DynamicResource {x:Static h:TextBoxKeys.History}}" />
                        </GroupBox>

                        <GroupBox Header="启用历史记录，启用数据源">
                            <TextBox h:AutoComplete.AutoCompleteItemsSource="{Binding AutoCompleteSource}" h:Cattach.IsUseHistory="True" Style="{DynamicResource {x:Static h:TextBoxKeys.History}}" />
                        </GroupBox>

                    </StackPanel>

                    <GroupBox Header="数据源">
                        <ListBox IsEnabled="True" ItemsSource="{Binding AutoCompleteSource}" />
                    </GroupBox>
                </UniformGrid>

            </GroupBox>
        </TabItem>

        <TabItem Header="TextBoxKeys - History - 带有保存历史输入数据的文本框">
            <GroupBox Header="h:TextBoxKeys.History">
                <StackPanel>
                    <TextBox Margin="0,0,20,0"
                             h:Cattach.IsUseHistory="True"
                             h:Cattach.Title="手机号:"
                             h:Cattach.Watermark="请输入数据"
                             Style="{StaticResource {x:Static h:TextBoxKeys.History}}" />
                    <TextBox Margin="0,0,20,0"
                             h:Cattach.Title="手机号:"
                             h:Cattach.Watermark="请输入数据"
                             Style="{StaticResource {x:Static h:TextBoxKeys.History}}" />
                </StackPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="ValidatesOnDataErrors - 数据验证">
            <GroupBox Header="ValidatesOnDataErrors">
                <StackPanel>
                    <TextBox Margin="0,0,20,0"
                             h:Cattach.Title="手机号:"
                             h:Cattach.Watermark="请输入数据"
                             Style="{StaticResource {x:Static h:TextBoxKeys.LabelClear}}"
                             Text="{Binding TextBoxViewModel.Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                    <TextBox Margin="0,0,20,0"
                             h:Cattach.Title="手机号:"
                             h:Cattach.Watermark="请输入数据"
                             Style="{StaticResource {x:Static h:TextBoxKeys.LabelClear}}"
                             Text="{Binding TextBoxViewModel.Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="Shape - 形状">
            <ScrollViewer>
                <StackPanel>
                    <GroupBox Header="Ellipse">
                        <Grid>
                            <Ellipse Width="100" Height="50" Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Line">
                        <Grid>
                            <Line Stroke="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                  StrokeThickness="2"
                                  X1="0" X2="1500"
                                  Y1="10" Y2="10" />
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Path">
                        <Grid>
                            <Path Data="F1M16,16L0,16 0,0 16,0z" Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Polygon">
                        <UniformGrid Columns="3">
                            <Polygon Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" Points="0,0 50,50 0,100 0,0" />

                            <Polygon Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" Points="50,0 100,50 50,100 0,50" />

                            <Polygon Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" Points="100,10 40,180 190,60 10,60 160,180" />
                        </UniformGrid>
                    </GroupBox>

                    <GroupBox Header="Polyline">
                        <Grid>
                            <Polyline Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" Points="0,0 5,5 0,10 0,0" />
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Rectangle">
                        <Grid>
                            <Rectangle Width="200" Height="80" Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <TabItem Header="AnimationBox - 动画容器">
            <GroupBox Header="AnimationBox">
                <h:AnimationBox Style="{StaticResource {x:Static h:AnimationBox.RandomOSTKey}}">
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                    <TextBlock FontSize="100"
                               Foreground="Orange"
                               RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                               Text="&#xe90c;" />
                </h:AnimationBox>
            </GroupBox>
        </TabItem>

        <TabItem Header="行为 - 当拖动滚动条时显示当前滚动信息">
            <GroupBox x:Name="gggg" Header="ScrollingPreviewBehavior" MouseDown="gggg_MouseDown">
                <Button Style="{StaticResource {x:Static h:ButtonKeys.Circle}}" />
            </GroupBox>
        </TabItem>

        <TabItem Header="可以再视图滚动时将指定单位个固定再原位的面板">
            <GroupBox Header="SelectiveScrollingGrid">
                <SelectiveScrollingGrid />
            </GroupBox>
        </TabItem>


        <TabItem Header="按钮样式">
            <GroupBox Header="按钮样式">
                <ScrollViewer>
                    <h:CirclePanel Len="300">
                        <Button Content="按钮" />
                        <Button h:Cattach.Icon="&#xe69e;" Content="默认按钮" />
                        <StackPanel>
                            <CheckBox x:Name="cb" Content="是否运行" />
                            <Button h:Cattach.BuzyText="正在运行" h:Cattach.IsBuzy="{Binding ElementName=cb, Path=IsChecked}" Content="默认按钮" />
                        </StackPanel>
                        <StackPanel>
                            <CheckBox x:Name="cbb" Content="是否运行" />
                            <Slider x:Name="sl"
                                    Margin="0,10"
                                    DockPanel.Dock="Top"
                                    IsEnabled="{Binding ElementName=cbb, Path=IsChecked}" />
                            <Button h:Cattach.BuzyText="正在运行"
                                    h:Cattach.IsBuzy="{Binding ElementName=cbb, Path=IsChecked}"
                                    h:Cattach.IsIndeterminate="False"
                                    h:Cattach.Value="{Binding ElementName=sl, Path=Value}"
                                    Content="默认按钮" />
                        </StackPanel>
                        <Button h:Cattach.SelectBackground="Green" Content="默认按钮">
                            <h:Interaction.Behaviors>
                                <h:ClickSelectedStateBehavior />
                            </h:Interaction.Behaviors>
                        </Button>
                        <Button Content="透明按钮" Style="{StaticResource {x:Static h:ButtonKeys.Transparent}}" />
                        <Button h:Cattach.Icon="&#xe69e;" Style="{StaticResource {x:Static h:ButtonKeys.Transparent}}" />
                        <Button h:Cattach.Text="跳转到指定页面" Style="{StaticResource {x:Static h:ButtonKeys.Link}}" />
                        <Button h:Cattach.Icon="&#xe69e;" Style="{StaticResource {x:Static h:ButtonKeys.Circle}}" />
                        <Button h:Cattach.Icon="&#xe69e;" Style="{StaticResource {x:Static h:ButtonKeys.CircleTransparent}}" />
                        <Button h:Cattach.Icon="&#xe69e;" Style="{StaticResource {x:Static h:ButtonKeys.CircleTransparent}}" />
                        <Button h:Cattach.Icon="&#xe69e;" Style="{StaticResource {x:Static h:ButtonKeys.BorderBrushTransparent}}" />
                        <Button h:Cattach.Icon="&#xe69e;" Style="{StaticResource {x:Static h:ButtonKeys.MouseOver}}" />
                        <Button Style="{StaticResource {x:Static h:ButtonKeys.Close}}" />
                        <Button Style="{StaticResource {x:Static h:ButtonKeys.CloseMouseOver}}" />
                        <Button Style="{StaticResource {x:Static h:ButtonKeys.CloseTransparent}}" />
                        <Button Style="{StaticResource {x:Static h:ButtonKeys.Left}}" />
                        <Button Style="{StaticResource {x:Static h:ButtonKeys.Right}}" />
                    </h:CirclePanel>
                </ScrollViewer>
            </GroupBox>
        </TabItem>
        <TabItem Header="行为 - 当拖动滚动条时显示当前滚动信息">
            <GroupBox Header="ScrollingPreviewBehavior">
                <UniformGrid Columns="2">
                    <GroupBox Header="显示滚动位置信息">
                        <ScrollViewer>
                            <h:Interaction.Behaviors>
                                <h:ScrollingPreviewBehavior>
                                    <h:ScrollingPreviewBehavior.VerticalScrollingPreviewTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <h:TupleGroup LeftItem1="当前值:" LeftItem2="{Binding Value, StringFormat={}{0:G2}}" />
                                                <h:TupleGroup LeftItem1="偏移量:" LeftItem2="{Binding Offset, StringFormat={}{0:G2}}" />
                                                <h:TupleGroup LeftItem1="可视范围:" LeftItem2="{Binding Viewport}" />
                                                <h:TupleGroup LeftItem1="滚动范围:" LeftItem2="{Binding Extent}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </h:ScrollingPreviewBehavior.VerticalScrollingPreviewTemplate>
                                </h:ScrollingPreviewBehavior>
                            </h:Interaction.Behaviors>
                            <Grid Height="5000">
                                <Grid.Background>
                                    <LinearGradientBrush>
                                        <GradientStop Offset="0" Color="Green" />
                                        <GradientStop Offset="0.25" Color="Red" />
                                        <GradientStop Offset="0.5" Color="Purple" />
                                        <GradientStop Offset="0.75" Color="Blue" />
                                        <GradientStop Offset="1" Color="Orange" />
                                    </LinearGradientBrush>
                                </Grid.Background>
                            </Grid>
                        </ScrollViewer>
                    </GroupBox>

                    <GroupBox Header="显示可视范围内第一项和最后一项">
                        <ListBox ItemsSource="{StaticResource D.ArrayList.LargeSource}">
                            <h:Interaction.Behaviors>
                                <h:ScrollingPreviewBehavior>
                                    <h:ScrollingPreviewBehavior.VerticalScrollingPreviewTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <ContentControl Content="{Binding FirstItem}" />
                                                <ContentControl Content="{Binding LastItem}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </h:ScrollingPreviewBehavior.VerticalScrollingPreviewTemplate>
                                </h:ScrollingPreviewBehavior>
                            </h:Interaction.Behaviors>
                        </ListBox>
                    </GroupBox>
                </UniformGrid>
            </GroupBox>
        </TabItem>

        <TabItem Header="行为 - DataGrid绑定行号">
            <GroupBox Header="DataGridRowIndexBehavior">
                <DataGrid AutoGenerateColumns="True" ItemsSource="{Binding Students}">
                    <h:Interaction.Behaviors>
                        <h:DataGridDragRowBehavior />
                    </h:Interaction.Behaviors>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <ItemContainerTemplate>
                                    <TextBlock Text="行号" />
                                </ItemContainerTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <ItemContainerTemplate>
                                    <TextBlock>
                                        <h:Interaction.Behaviors>
                                            <h:DataGridRowIndexBehavior DataGridRow="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                                        </h:Interaction.Behaviors>
                                    </TextBlock>
                                </ItemContainerTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
        </TabItem>

        <TabItem Header="行为 - DataGrid数据行支持拖动">
            <GroupBox Header="DataGridDragRowBehavior">
                <DataGrid AutoGenerateColumns="True" ItemsSource="{Binding Students}">
                    <h:Interaction.Behaviors>
                        <h:DataGridDragRowBehavior />
                    </h:Interaction.Behaviors>
                </DataGrid>
            </GroupBox>
        </TabItem>

        <TabItem Header="行为 - 滚动条位置支持绑定">
            <GroupBox Header="ViewportSynchronizerBehavior">
                <DockPanel>

                    <Slider x:Name="sll"
                            Margin="0,15"
                            DockPanel.Dock="Top"
                            Maximum="4000"
                            Minimum="0" />

                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <h:Interaction.Behaviors>
                            <h:ViewportSynchronizerBehavior HorizontalOffset="{Binding ElementName=sll, Path=Value}" />
                        </h:Interaction.Behaviors>

                        <Grid Width="5000">
                            <Grid.Background>
                                <LinearGradientBrush>
                                    <GradientStop Offset="0" Color="Green" />
                                    <GradientStop Offset="0.25" Color="Red" />
                                    <GradientStop Offset="0.5" Color="Purple" />
                                    <GradientStop Offset="0.75" Color="Blue" />
                                    <GradientStop Offset="1" Color="Orange" />
                                </LinearGradientBrush>
                            </Grid.Background>
                        </Grid>
                    </ScrollViewer>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="行为 - 点击按钮选中ListBoxItem">
            <UniformGrid Columns="2">
                <GroupBox Header="当点击删除时当前项没有选中">
                    <ListBox ItemsSource="{StaticResource D.ArrayList.Source}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding}" />

                                    <Button HorizontalAlignment="Right"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.RelayCommand}"
                                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}"
                                            Style="{StaticResource {x:Static h:ButtonKeys.Close}}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>

                <GroupBox Header="当点击删除时当前项选中">
                    <ListBox ItemsSource="{StaticResource D.ArrayList.Source}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding}" />

                                    <Button HorizontalAlignment="Right"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.RelayCommand}"
                                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=Foreground}"
                                            Style="{StaticResource {x:Static h:ButtonKeys.Close}}">
                                        <h:Interaction.Behaviors>
                                            <h:SelectListBoxItemElementBehavior />
                                        </h:Interaction.Behaviors>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
            </UniformGrid>
        </TabItem>

        <TabItem Header="行为 - 点击容器内容至于最前端">
            <GroupBox Header="SelectZIndexElementBehavior">
                <h:CirclePanel Len="120">
                    <Border Width="200"
                            Height="200"
                            Background="Red"
                            CornerRadius="100">
                        <h:Interaction.Behaviors>
                            <h:SelectZIndexElementBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                    <Border Width="200"
                            Height="200"
                            Background="Purple"
                            CornerRadius="100">
                        <h:Interaction.Behaviors>
                            <h:SelectZIndexElementBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                    <Border Width="200"
                            Height="200"
                            Background="Green"
                            CornerRadius="100">
                        <h:Interaction.Behaviors>
                            <h:SelectZIndexElementBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                    <Border Width="200"
                            Height="200"
                            Background="Orange"
                            CornerRadius="100">
                        <h:Interaction.Behaviors>
                            <h:SelectZIndexElementBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                    <Border Width="200"
                            Height="200"
                            Background="Blue"
                            CornerRadius="100">
                        <h:Interaction.Behaviors>
                            <h:SelectZIndexElementBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                    <Border Width="200"
                            Height="200"
                            Background="Gray"
                            CornerRadius="100">
                        <h:Interaction.Behaviors>
                            <h:SelectZIndexElementBehavior />
                        </h:Interaction.Behaviors>
                    </Border>
                </h:CirclePanel>


            </GroupBox>
        </TabItem>

        <TabItem Header="行为 - 同步两个滚动条">
            <GroupBox Header="SynchronizedScrollingBehavior">
                <UniformGrid Columns="2">
                    <ListBox>
                        <h:Interaction.Behaviors>
                            <h:SynchronizedScrollingBehavior Target="{Binding ElementName=ggg}" />
                        </h:Interaction.Behaviors>

                        <Button Content="2" />
                        <Button Content="3" />
                        <Button Content="4" />
                        <Button Content="5" />
                        <Button Content="6" />
                        <Button Content="7" />
                        <Button Content="8" />
                        <Button Content="9" />
                        <Button Content="10" />
                        <Button Content="11" />
                        <Button Content="12" />
                        <Button Content="13" />
                        <Button Content="14" />
                        <Button Content="15" />
                        <Button Content="16" />
                        <Button Content="17" />

                    </ListBox>

                    <ListBox x:Name="ggg">
                        <Button Content="2" />
                        <Button Content="3" />
                        <Button Content="4" />
                        <Button Content="5" />
                        <Button Content="6" />
                        <Button Content="7" />
                        <Button Content="8" />
                        <Button Content="9" />
                        <Button Content="10" />
                        <Button Content="11" />
                        <Button Content="12" />
                        <Button Content="13" />
                        <Button Content="14" />
                        <Button Content="15" />
                        <Button Content="16" />
                        <Button Content="17" />

                    </ListBox>
                </UniformGrid>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - Selecter绑定多选">
            <GroupBox Header="SelectedItemsCollectionSynchronizerBehavior">
                <UniformGrid Columns="2">
                    <GroupBox Header="数据源">
                        <ListBox ItemsSource="{Binding AutoCompleteSource}" SelectionMode="Multiple">
                            <h:Interaction.Behaviors>
                                <h:SelectedItemsCollectionSynchronizerBehavior BindsTwoWay="True" Collection="{Binding AutoCompleteSelecteds}" />
                            </h:Interaction.Behaviors>
                        </ListBox>
                    </GroupBox>

                    <GroupBox Header="选中项">
                        <ListBox h:Cattach.UseClose="True" ItemsSource="{Binding AutoCompleteSelecteds}" />
                    </GroupBox>
                </UniformGrid>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="触发器 - 滚到到指定元素触发">
            <GroupBox Header="ScrollingTrigger - 当滚动条滚到到按钮18时触发消息">
                <ScrollViewer PanningDeceleration="10">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource {x:Static h:ButtonKeys.Default}}" TargetType="Button">
                                <Setter Property="Width" Value="300" />
                                <Setter Property="Height" Value="80" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </StackPanel.Resources>
                        <Button Content="1" />
                        <Button Content="2" />
                        <Button Content="3" />
                        <Button Content="4" />
                        <Button Content="5" />
                        <Button Content="6" />
                        <Button Content="7" />
                        <Button Content="8" />
                        <Button Content="9" />
                        <Button Content="10" />
                        <Button Content="11" />
                        <Button Content="12" />
                        <Button Content="13" />
                        <Button Content="14" />
                        <Button Content="15" />
                        <Button Content="16" />
                        <Button Content="17" />
                        <Button x:Name="btn_18" Content="18" />
                        <Button Content="19" />
                        <Button Content="20" />
                        <Button Content="1" />
                        <Button Content="2" />
                        <Button Content="3" />
                        <Button Content="4" />
                        <Button Content="5" />
                        <Button Content="6" />
                        <Button Content="7" />
                        <Button Content="8" />
                        <Button Content="9" />
                        <Button Content="10" />
                        <Button Content="11" />
                        <Button Content="12" />
                        <Button Content="13" />
                        <Button Content="14" />
                        <Button Content="15" />
                        <Button Content="16" />
                        <Button Content="17" />
                    </StackPanel>

                    <h:Interaction.Triggers>
                        <h:ScrollingTrigger TargetElement="{Binding ElementName=btn_18}">
                            <h:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="ScrollViewer.ScrollingTrigger.ToButton" />
                        </h:ScrollingTrigger>
                    </h:Interaction.Triggers>
                </ScrollViewer>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="触发器 - 滚到到指定元素">
            <GroupBox Header="ScrollToTargetAction">
                <DockPanel>
                    <Button HorizontalAlignment="Left" Content="滚动到18" DockPanel.Dock="Top">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:ScrollToTargetAction ScrollViewer="{Binding ElementName=svvv}" TargetElement="{Binding ElementName=btn_1888}" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </Button>

                    <ScrollViewer x:Name="svvv" PanningDeceleration="10">
                        <StackPanel>
                            <Button Content="1" />
                            <Button Content="2" />
                            <Button Content="3" />
                            <Button Content="4" />
                            <Button Content="5" />
                            <Button Content="6" />
                            <Button Content="7" />
                            <Button Content="8" />
                            <Button Content="9" />
                            <Button Content="10" />
                            <Button Content="11" />
                            <Button Content="12" />
                            <Button Content="13" />
                            <Button Content="14" />
                            <Button Content="15" />
                            <Button Content="16" />
                            <Button Content="17" />
                            <Button x:Name="btn_1888" Content="18" />
                            <Button Content="19" />
                            <Button Content="20" />
                            <Button Content="1" />
                            <Button Content="2" />
                            <Button Content="3" />
                            <Button Content="4" />
                            <Button Content="5" />
                            <Button Content="6" />
                            <Button Content="7" />
                            <Button Content="8" />
                            <Button Content="9" />
                            <Button Content="10" />
                            <Button Content="11" />
                            <Button Content="12" />
                            <Button Content="13" />
                            <Button Content="14" />
                            <Button Content="15" />
                            <Button Content="16" />
                            <Button Content="17" />
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89d;" Header="QinBehavior">
            <GroupBox Header="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Header}">
                <TextBlock Background="Red" FontSize="88" Text="无法访问此网站 www.google.com 的响应时间过长">
                    <h:Interaction.Behaviors>
                        <h:QinBehavior />
                    </h:Interaction.Behaviors>
                </TextBlock>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="触发器 - 添加指定元素到列表">
            <GroupBox Header="OpenTargetInTabControlAction">
                <DockPanel>
                    <Button HorizontalAlignment="Left" Content="添加" DockPanel.Dock="Top">
                        <h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:OpenTargetInTabControlAction Target="{Binding ElementName=tb}" TargetType="{x:Type local:Student}" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>
                    </Button>
                    <TabControl x:Name="tb" h:Cattach.UseClose="True" TabStripPlacement="Bottom">
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <ScrollViewer>
                                    <h:PropertyGrid SelectObject="{Binding}" />
                                </ScrollViewer>
                            </DataTemplate>
                        </TabControl.ContentTemplate>

                        <TabControl.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Static h:TabItemKeys.Line}}" TargetType="TabItem">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.ItemContainerStyle>
                    </TabControl>
                </DockPanel>

            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - 鼠标中间按下拖动滚动条">
            <GroupBox Header="MouseGestureScrollViewerBehavior">
                <ScrollViewer HorizontalScrollBarVisibility="Auto">
                    <h:Interaction.Behaviors>
                        <h:MouseGestureScrollViewerBehavior EnableInertia="False" />
                    </h:Interaction.Behaviors>

                    <Grid Width="2000" Height="2000">
                        <Grid.Background>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,8L16,13 0,13 0,8 2.632,8 4.303,3 6.716,3 8,6.826 8,3.023 10.838,3.023C11.25,3.023 11.625,3.077 11.951,3.184 12.298,3.295 12.601,3.458 12.848,3.667 13.12,3.899 13.321,4.17 13.452,4.477 13.576,4.764 13.641,5.076 13.641,5.4 13.641,5.676 13.596,5.944 13.508,6.197 13.454,6.346 13.391,6.483 13.316,6.612 13.508,6.82 13.661,7.077 13.766,7.365 13.838,7.563 13.875,7.778 13.895,8z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M4,12L5,12 5,11 4,11z M14,9L14,11 12,11 12,12 15,12 15,9z M11.893,8.234C11.893,7.95 11.792,7.728 11.591,7.564 11.39,7.402 11.092,7.32 10.696,7.32L10,7.32 10,9.18 10.781,9.18C10.968,9.18 11.131,9.156 11.271,9.107 11.409,9.057 11.525,8.992 11.617,8.907 11.71,8.822 11.778,8.722 11.824,8.606 11.871,8.492 11.893,8.367 11.893,8.234 M10,4.844L10,6.5 10.587,6.5C10.913,6.5 11.168,6.42 11.347,6.262 11.527,6.104 11.617,5.879 11.617,5.587 11.617,5.351 11.53,5.168 11.357,5.038 11.185,4.91 10.931,4.844 10.595,4.844z M12.916,8.259C12.916,8.537 12.863,8.784 12.758,8.999 12.652,9.215 12.508,9.395 12.325,9.545 12.144,9.693 11.929,9.807 11.685,9.885 11.439,9.961 11.18,10 10.903,10L10,10 9,10 9,4.023 10,4.023 10.838,4.023C11.146,4.023 11.415,4.061 11.642,4.134 11.868,4.208 12.057,4.308 12.204,4.432 12.351,4.557 12.461,4.703 12.532,4.87 12.605,5.036 12.641,5.213 12.641,5.4 12.641,5.566 12.614,5.722 12.564,5.868 12.511,6.014 12.44,6.146 12.348,6.264 12.256,6.382 12.146,6.485 12.017,6.575 11.889,6.664 11.748,6.733 11.593,6.784L11.593,6.8C11.796,6.827 11.979,6.881 12.144,6.96 12.307,7.04 12.446,7.142 12.561,7.267 12.677,7.391 12.765,7.537 12.825,7.705 12.886,7.871 12.916,8.055 12.916,8.259 M6.394,8L5.511,5.124 4.628,8z M6.7,9L4.321,9 4.021,10 3.019,10 5.023,4 5.997,4 8.01,10 7,10z M8,12L9,12 9,11 8,11z M10,12L11,12 11,11 10,11z M6,12L7,12 7,11 6,11z M2,11L3,11 3,12 1,12 1,9 2,9z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Grid.Background>
                    </Grid>
                </ScrollViewer>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - 限制文本输入格式">
            <GroupBox Header="MaskedTextBoxBehavior">

                <StackPanel>
                    <GroupBox Header="限制只能输入汉字">
                        <TextBox>
                            <h:Interaction.Behaviors>
                                <h:MaskedTextBoxBehavior Mask="^[\u4e00-\u9fa5]{0,}$" />
                            </h:Interaction.Behaviors>
                        </TextBox>
                    </GroupBox>

                    <GroupBox Header="只能输入数字">
                        <TextBox>
                            <h:Interaction.Behaviors>
                                <h:MaskedTextBoxBehavior Mask="^[0-9]*$" />
                            </h:Interaction.Behaviors>
                        </TextBox>
                    </GroupBox>

                    <GroupBox Header="只能输入身份证">
                        <TextBox>
                            <h:Interaction.Behaviors>
                                <h:MaskedTextBoxBehavior Mask="^\d{15}|\d{18}$" />
                            </h:Interaction.Behaviors>
                        </TextBox>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
        </TabItem>


        <TabItem h:Cattach.Icon="&#xe89a;" Header="触发器 - 带有关闭子项的ListBox">
            <GroupBox Header="CloseItemsAction - ListBox">
                <UniformGrid Columns="1">
                    <ListBox h:Cattach.UseClose="True" ItemTemplate="{DynamicResource {x:Static h:DataTemplateKeys.ItemClose}}" ItemsSource="{Binding AutoCompleteSource}" />
                </UniformGrid>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="触发器 - 带有关闭子项的TabControl">
            <GroupBox Header="CloseItemsAction - TabControl">
                <TabControl h:Cattach.SearchDock="Bottom"
                            h:Cattach.UseClose="True"
                            ItemContainerStyle="{StaticResource {x:Static h:TabItemKeys.Line}}"
                            ItemsSource="{Binding AutoCompleteSource}"
                            TabStripPlacement="Right">
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}" />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </GroupBox>
        </TabItem>

        <!--<TabItem h:Cattach.Icon="&#xe89a;" Header="FormatConvertedBitmap">
            <GroupBox Header="FormatConvertedBitmap">
                <Grid>
                    <Image Source="{Binding ImageSource}" />
                </Grid>
            </GroupBox>
        </TabItem>-->

        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - 触摸板旋转平移缩放操作">
            <GroupBox Header="TranslateZoomRotateBehavior">
                <Grid>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="点我可以拖动窗口">
                        <h:Interaction.Behaviors>
                            <h:TranslateZoomRotateBehavior ConstrainToParentBounds="False" SupportedGestures="All" />
                        </h:Interaction.Behaviors>
                    </TextBlock>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - 拖拽">
            <GroupBox Header="DragPositionBehavior">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="点我可以拖拽位置">
                    <h:Interaction.Behaviors>
                        <h:DragPositionBehavior IsEnabled="False" />
                    </h:Interaction.Behaviors>
                </TextBlock>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="GiveFeedback - 更改拖拽图标">
            <GroupBox Header="GiveFeedback">
                <ListBox AllowDrop="True">
                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Default}}" TargetType="ListBoxItem">
                            <Setter Property="AllowDrop" Value="True" />
                            <EventSetter Event="MouseMove" Handler="ListBoxItem_MouseMove" />
                            <EventSetter Event="GiveFeedback" Handler="ListBoxItem_GiveFeedback" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <system:String>111111111</system:String>
                    <system:String>22222222222</system:String>
                    <system:String>33333333333</system:String>
                    <system:String>44444444444444</system:String>
                    <system:String>555555555555</system:String>
                </ListBox>
            </GroupBox>
        </TabItem>


        <TabItem h:Cattach.Icon="&#xe89a;" Header="行为 - 拖拽主窗口">
            <GroupBox Header="DragMoveWindowBehavior">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="点我可以拖动窗口">
                    <h:Interaction.Behaviors>
                        <h:DragMoveWindowBehavior />
                    </h:Interaction.Behaviors>
                </TextBlock>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="测试 - ExplorerTree">
            <GroupBox Header="ExplorerTree">
                <h:ExplorerTree>
                    <h:ExplorerTree.Customs>
                        <h:RootModelCollection>
                            <h:RootModel DisplayName="快速访问" Icon="&#xe90c;" IsExpanded="True">
                                <h:DirectoryModel>Desktop</h:DirectoryModel>
                                <h:DirectoryModel>Recent</h:DirectoryModel>
                                <h:DirectoryModel>MyDocuments</h:DirectoryModel>
                                <h:DirectoryModel>Favorites</h:DirectoryModel>
                                <h:DirectoryModel>MyMusic</h:DirectoryModel>
                                <h:DirectoryModel>MyVideos</h:DirectoryModel>
                            </h:RootModel>

                            <h:RootModel DisplayName="自定义位置" Icon="&#xe68a;">
                                <h:DirectoryModel>C:\ProgramData</h:DirectoryModel>
                                <h:DirectoryModel>C:\Program Files</h:DirectoryModel>
                                <h:DirectoryModel>C:\Windows\Cursors</h:DirectoryModel>
                            </h:RootModel>
                        </h:RootModelCollection>
                    </h:ExplorerTree.Customs>
                </h:ExplorerTree>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="测试 - ImagePlayer">
            <GroupBox Header="ImagePlayer">
                <image:ImagePlayer>
                    <image:ImagePlayer.DataSource>
                        <collections:ArrayList>
                            <!--<ImageSource>C:\Users\Administrator\Desktop\新建文件夹\vs图标.PNG</ImageSource>-->
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,8L16,13 0,13 0,8 2.632,8 4.303,3 6.716,3 8,6.826 8,3.023 10.838,3.023C11.25,3.023 11.625,3.077 11.951,3.184 12.298,3.295 12.601,3.458 12.848,3.667 13.12,3.899 13.321,4.17 13.452,4.477 13.576,4.764 13.641,5.076 13.641,5.4 13.641,5.676 13.596,5.944 13.508,6.197 13.454,6.346 13.391,6.483 13.316,6.612 13.508,6.82 13.661,7.077 13.766,7.365 13.838,7.563 13.875,7.778 13.895,8z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M4,12L5,12 5,11 4,11z M14,9L14,11 12,11 12,12 15,12 15,9z M11.893,8.234C11.893,7.95 11.792,7.728 11.591,7.564 11.39,7.402 11.092,7.32 10.696,7.32L10,7.32 10,9.18 10.781,9.18C10.968,9.18 11.131,9.156 11.271,9.107 11.409,9.057 11.525,8.992 11.617,8.907 11.71,8.822 11.778,8.722 11.824,8.606 11.871,8.492 11.893,8.367 11.893,8.234 M10,4.844L10,6.5 10.587,6.5C10.913,6.5 11.168,6.42 11.347,6.262 11.527,6.104 11.617,5.879 11.617,5.587 11.617,5.351 11.53,5.168 11.357,5.038 11.185,4.91 10.931,4.844 10.595,4.844z M12.916,8.259C12.916,8.537 12.863,8.784 12.758,8.999 12.652,9.215 12.508,9.395 12.325,9.545 12.144,9.693 11.929,9.807 11.685,9.885 11.439,9.961 11.18,10 10.903,10L10,10 9,10 9,4.023 10,4.023 10.838,4.023C11.146,4.023 11.415,4.061 11.642,4.134 11.868,4.208 12.057,4.308 12.204,4.432 12.351,4.557 12.461,4.703 12.532,4.87 12.605,5.036 12.641,5.213 12.641,5.4 12.641,5.566 12.614,5.722 12.564,5.868 12.511,6.014 12.44,6.146 12.348,6.264 12.256,6.382 12.146,6.485 12.017,6.575 11.889,6.664 11.748,6.733 11.593,6.784L11.593,6.8C11.796,6.827 11.979,6.881 12.144,6.96 12.307,7.04 12.446,7.142 12.561,7.267 12.677,7.391 12.765,7.537 12.825,7.705 12.886,7.871 12.916,8.055 12.916,8.259 M6.394,8L5.511,5.124 4.628,8z M6.7,9L4.321,9 4.021,10 3.019,10 5.023,4 5.997,4 8.01,10 7,10z M8,12L9,12 9,11 8,11z M10,12L11,12 11,11 10,11z M6,12L7,12 7,11 6,11z M2,11L3,11 3,12 1,12 1,9 2,9z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M11.7207,13.4268L12.3687,13.8288 10.9877,15.9998 10.1727,15.9998 6.6837,13.8128C3.8187,13.2418,1.6077,11.3578,1.1127,8.9998L1.1157,8.9998C1.0467,8.6728 0.999700000000001,8.3398 0.999700000000001,7.9998 0.999700000000001,6.4838 1.7227,5.0198 2.9997,3.9178L2.9997,3.4648 8.1977,-0.000199999999999534 8.8027,-0.000199999999999534 13.9997,3.4648 13.9997,3.9178C15.2777,5.0198 15.9997,6.4838 15.9997,7.9998 15.9997,10.3998 14.2777,12.4668 11.7207,13.4268" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M8,7.2676L5,5.2676 5,8.4646 7.577,10.1826 8,9.5186z M11.648,4.3006L8.5,2.2016 5.352,4.3006 8.5,6.3986z M10.787,9.2736L9,8.1416 9,7.2676 12,5.2676 12,8.4646z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M8.5,6.3989L5.352,4.2999 8.5,2.2019 11.648,4.2999z M15,7.9999C15,6.5829,14.231,5.3069,13,4.3969L13,3.9999 8.5,0.999899999999999 4,3.9999 4,4.3969C2.769,5.3069 2,6.5829 2,7.9999 2,9.7689 3.198,11.3199 5,12.2089L5,11.0829C3.779,10.3489 3,9.2389 3,7.9999 3,7.1469 3.372,6.3569 4,5.7069L4,8.9999 7.04,11.0269 7.577,10.1829 5,8.4649 5,5.2679 8,7.2679 8,9.5189 8.912,8.0859 9,8.1419 9,7.2679 12,5.2679 12,8.4649 10.787,9.2729 11.665,9.8289C12.487,9.1029,13,8.1039,13,6.9999L13,6.4319 13,5.7069C13.628,6.3569 14,7.1469 14,7.9999 14,10.1279 11.702,11.8679 8.818,11.9879L10.063,10.0339 9.219,9.4819 7.071,12.8489 10.446,14.9889 10.983,14.1449 9.099,12.9769C12.408,12.7439,15,10.6059,15,7.9999" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,16L16,16 16,0 0,0z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M7,13L3,13 3,9 5,7 5,9.586 9.586,5 7,5 9,3 13,3 13,7 11,9 11,6.414 6.414,11 9,11z M14,14L2,14 2,2 14,2z M1,15L15,15 15,1 1,1z" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M13,7L11,9 11,6.414 6.414,11 9,11 7,13 3,13 3,9 5,7 5,9.586 9.586,5 7,5 9,3 13,3z M2,14L14,14 14,2 2,2z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,16L16,16 16,0 0,0z M6.416,3L13,3 13,7.685 10.209,4.901 9.265,5.849z M3,3L5.588,3 3,5.588z M11.383,9.331L13,7.714 13,10.945z M3,8.413L4.819,10.223 5,10.041 5,12 7.195,12 8.196,13 3,13z M13,10.982L13,13 10.981,13z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M14,14L13,14 13,15 15,15 15,13 14,13z M10,2L12,2 12,1 10,1z M10,15L12,15 12,14 10,14z M14,9L15,9 15,7 14,7z M13,1L13,2 14,2 14,3 15,3 15,1z M14,12L15,12 15,10 14,10z M7,15L9,15 9,14 7,14z M14,6L15,6 15,4 14,4z M6,1L4,1 4,2 6,2z M2,7L1,7 1,9 2,9z M2,4L1,4 1,6 2,6z M4,15L6,15 6,14 4,14z M9,1L7,1 7,2 9,2z M2,2L3,2 3,1 1,1 1,3 2,3z M2,10L1,10 1,12 2,12z M2,13L1,13 1,15 3,15 3,14 2,14z M11.604,10.964L9.589,12.977 8.201,11.592 8.796,11 6,11 6,7.995 6,7.698 6,7.637 4.818,8.812 3,7.001 6.001,4 7.813,5.813 6.628,7 6.689,7 6.986,7 9.529,7 10.211,6.316 11.6,7.7 9.585,9.715 8.197,8.33 8.529,8 7,8 7,10 9.795,10 10.215,9.578z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </collections:ArrayList>
                    </image:ImagePlayer.DataSource>
                </image:ImagePlayer>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="DrawingBrush">
            <GroupBox Header="DrawingBrush">
                <GroupBox>
                    <GroupBox.Background>
                        <DrawingBrush Stretch="Uniform">
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <DrawingGroup.Children>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,8L16,13 0,13 0,8 2.632,8 4.303,3 6.716,3 8,6.826 8,3.023 10.838,3.023C11.25,3.023 11.625,3.077 11.951,3.184 12.298,3.295 12.601,3.458 12.848,3.667 13.12,3.899 13.321,4.17 13.452,4.477 13.576,4.764 13.641,5.076 13.641,5.4 13.641,5.676 13.596,5.944 13.508,6.197 13.454,6.346 13.391,6.483 13.316,6.612 13.508,6.82 13.661,7.077 13.766,7.365 13.838,7.563 13.875,7.778 13.895,8z" />
                                        <GeometryDrawing Brush="#FF424242" Geometry="F1M4,12L5,12 5,11 4,11z M14,9L14,11 12,11 12,12 15,12 15,9z M11.893,8.234C11.893,7.95 11.792,7.728 11.591,7.564 11.39,7.402 11.092,7.32 10.696,7.32L10,7.32 10,9.18 10.781,9.18C10.968,9.18 11.131,9.156 11.271,9.107 11.409,9.057 11.525,8.992 11.617,8.907 11.71,8.822 11.778,8.722 11.824,8.606 11.871,8.492 11.893,8.367 11.893,8.234 M10,4.844L10,6.5 10.587,6.5C10.913,6.5 11.168,6.42 11.347,6.262 11.527,6.104 11.617,5.879 11.617,5.587 11.617,5.351 11.53,5.168 11.357,5.038 11.185,4.91 10.931,4.844 10.595,4.844z M12.916,8.259C12.916,8.537 12.863,8.784 12.758,8.999 12.652,9.215 12.508,9.395 12.325,9.545 12.144,9.693 11.929,9.807 11.685,9.885 11.439,9.961 11.18,10 10.903,10L10,10 9,10 9,4.023 10,4.023 10.838,4.023C11.146,4.023 11.415,4.061 11.642,4.134 11.868,4.208 12.057,4.308 12.204,4.432 12.351,4.557 12.461,4.703 12.532,4.87 12.605,5.036 12.641,5.213 12.641,5.4 12.641,5.566 12.614,5.722 12.564,5.868 12.511,6.014 12.44,6.146 12.348,6.264 12.256,6.382 12.146,6.485 12.017,6.575 11.889,6.664 11.748,6.733 11.593,6.784L11.593,6.8C11.796,6.827 11.979,6.881 12.144,6.96 12.307,7.04 12.446,7.142 12.561,7.267 12.677,7.391 12.765,7.537 12.825,7.705 12.886,7.871 12.916,8.055 12.916,8.259 M6.394,8L5.511,5.124 4.628,8z M6.7,9L4.321,9 4.021,10 3.019,10 5.023,4 5.997,4 8.01,10 7,10z M8,12L9,12 9,11 8,11z M10,12L11,12 11,11 10,11z M6,12L7,12 7,11 6,11z M2,11L3,11 3,12 1,12 1,9 2,9z" />
                                    </DrawingGroup.Children>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </GroupBox.Background>
                </GroupBox>
            </GroupBox>
        </TabItem>


        <TabItem h:Cattach.Icon="&#xe89a;" Header="任务栏消息">
            <GroupBox Header="TaskBarMessage">
                <Button Command="{Binding RelayCommand}" CommandParameter="TaskBar" />
            </GroupBox>
        </TabItem>

        <TabItem Header="PropertyPath主从模式">
            <GroupBox Header="主从模式与分层">

                <!--<Grid Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                -->
                <!--<Grid.Background>
                -->
                <!--<LinearGradientBrush>
                            <GradientStop Offset="-1" Color="Transparent"/>
                            <GradientStop Offset="1" Color="{DynamicResource AccentColor}"/>
                        </LinearGradientBrush>-->

                <!--<RadialGradientBrush>
                    <GradientStop Offset="-1" Color="Transparent"/>
                    <GradientStop Offset="1" Color="{DynamicResource AccentColor}"/>
                </RadialGradientBrush>-->
                <!--</Grid.Background>-->
                <!--
                    <Grid.OpacityMask>
                        <ImageBrush Stretch="None" ImageSource="E:\Github\Document\Pictures\首页1_slices\背景_小屏幕选择.png"/>
                    </Grid.OpacityMask>

                -->
                <!--<Image.Effect>
                        <h:PointLightEffect/>
                    </Image.Effect>-->
                <!--
                </Grid>-->

                <!--<TextBlock Text="sgsgsdgd" TextAlignment="Center"/>-->
            </GroupBox>
        </TabItem>

        <TabItem Header="球 - 3D">
            <ScrollViewer>
                <StackPanel>
                    <GroupBox Height="500" Header="球">
                        <Grid Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                            <Viewport3D Name="myViewport3D" ClipToBounds="True" Focusable="True">
                                <Viewport3D.Camera>
                                    <PerspectiveCamera FarPlaneDistance="20"
                                                       FieldOfView="60"
                                                       LookDirection="0,0,-1"
                                                       NearPlaneDistance="0.25"
                                                       Position="0,0,3.0"
                                                       UpDirection="0,1,0" />
                                </Viewport3D.Camera>

                                <ModelVisual3D>
                                    <local:Sphere PhiDiv="20" Radius="0.5" ThetaDiv="20" />
                                    <ModelVisual3D.Content>
                                        <!--<AmbientLight Color="Yellow"/>-->
                                        <DirectionalLight Direction="-1,-1,-1" Color="White" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                            </Viewport3D>
                        </Grid>
                    </GroupBox>

                    <GroupBox Height="500" Header="球">
                        <Grid Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                            <Viewport3D ClipToBounds="True" Focusable="True">
                                <Viewport3D.Camera>
                                    <PerspectiveCamera FarPlaneDistance="20"
                                                       FieldOfView="60"
                                                       LookDirection="0,0,-1"
                                                       NearPlaneDistance="0.25"
                                                       Position="0,0,3.0"
                                                       UpDirection="0,1,0" />
                                </Viewport3D.Camera>

                                <ModelVisual3D>
                                    <local:Sphere PhiDiv="50" Radius="0.5" ThetaDiv="50">
                                        <local:Sphere.MaterialBrush>
                                            <ImageBrush ImageSource="shijieditu-01550572_3.jpg" />
                                        </local:Sphere.MaterialBrush>
                                    </local:Sphere>

                                    <ModelVisual3D.Content>
                                        <!--<AmbientLight Color="Yellow"/>-->
                                        <DirectionalLight Direction="-1,-1,-1" Color="White" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>


                                <!--<ModelVisual3D>
                    <ModelVisual3D.Transform>
                        <Transform3DGroup>
                            <Transform3DGroup.Children>
                                <Transform3DCollection >
                                    <ScaleTransform3D ScaleX="1" ScaleY="1"  ScaleZ="1" />
                                    <RotateTransform3D>
                                        <RotateTransform3D.Rotation>
                                            <AxisAngleRotation3D Axis="0 1 0" Angle="0" />
                                        </RotateTransform3D.Rotation>
                                    </RotateTransform3D>
                                    <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                                </Transform3DCollection>
                            </Transform3DGroup.Children>
                        </Transform3DGroup>
                    </ModelVisual3D.Transform>

                    <ModelVisual3D.Content>
                        <Model3DGroup >
                            <Model3DGroup.Transform>
                                <Transform3DGroup>
                                    <Transform3DGroup.Children>
                                        <Transform3DCollection >
                                            <ScaleTransform3D ScaleX="1" ScaleY="1"  ScaleZ="1" />
                                            <RotateTransform3D>
                                                <RotateTransform3D.Rotation>
                                                    <AxisAngleRotation3D Axis="0 1 0" Angle="0" />
                                                </RotateTransform3D.Rotation>
                                            </RotateTransform3D>
                                            <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                                        </Transform3DCollection>
                                    </Transform3DGroup.Children>
                                </Transform3DGroup>
                            </Model3DGroup.Transform>
                                    <Model3DGroup.Children>
                                -->
                                <!--  Group Child 0  -->
                                <!--
                                <Model3DGroup >
                                    <Model3DGroup.Transform>
                                        <Transform3DGroup>
                                            <Transform3DGroup.Children>
                                                <Transform3DCollection >
                                                    <ScaleTransform3D x:Name="myScale" ScaleX="1" ScaleY="1"  ScaleZ="1" />
                                                    <RotateTransform3D >
                                                        <RotateTransform3D.Rotation >
                                                            <AxisAngleRotation3D x:Name="myRotate" Axis="1 0 0" Angle="0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <RotateTransform3D >
                                                        <RotateTransform3D.Rotation >
                                                            <AxisAngleRotation3D x:Name="myRotate2" Axis="0 1 0" Angle="0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                                                </Transform3DCollection>
                                            </Transform3DGroup.Children>
                                        </Transform3DGroup>
                                    </Model3DGroup.Transform>

                                    <Model3DGroup.Children>

                                -->
                                <!--  Child 0  -->
                                <!--
                                                <GeometryModel3D>
                                                    <GeometryModel3D.Material>
                                                        <MaterialGroup>
                                                            <MaterialGroup.Children>
                                                                <EmissiveMaterial>
                                                                    <EmissiveMaterial.Brush>
                                                                        <ImageBrush ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/logo.png">
                                                                            <ImageBrush.Transform>
                                                                                <TransformGroup>
                                                                                    <TransformGroup.Children>
                                                                                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="0" />
                                                                                    </TransformGroup.Children>
                                                                                </TransformGroup>
                                                                            </ImageBrush.Transform>
                                                                        </ImageBrush>
                                                                    </EmissiveMaterial.Brush>
                                                                </EmissiveMaterial>
                                                            </MaterialGroup.Children>
                                                        </MaterialGroup>
                                                    </GeometryModel3D.Material>

                                                    <GeometryModel3D.BackMaterial>
                                                        <MaterialGroup>
                                                            <MaterialGroup.Children>
                                                                <EmissiveMaterial>
                                                                    <EmissiveMaterial.Brush>
                                                                        <ImageBrush ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/logo.png">
                                                                            <ImageBrush.Transform>
                                                                                <TransformGroup>
                                                                                    <TransformGroup.Children>
                                                                                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="0" />
                                                                                    </TransformGroup.Children>
                                                                                </TransformGroup>
                                                                            </ImageBrush.Transform>
                                                                        </ImageBrush>
                                                                    </EmissiveMaterial.Brush>
                                                                </EmissiveMaterial>
                                                            </MaterialGroup.Children>
                                                        </MaterialGroup>
                                                    </GeometryModel3D.BackMaterial>

                                                    <GeometryModel3D.Geometry>
                                                        <MeshGeometry3D
      TriangleIndices="0,1,2 3,4,5 6,7,8 9,10,11 12,13,14 15,16,17 18,19,20 21,22,23 24,25,26 27,28,29 30,31,32 33,34,35 "
      Normals="0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,-1,0 0,-1,0 0,-1,0 0,-1,0 0,-1,0 0,-1,0 1,0,0 1,0,0 1,0,0 1,0,0 1,0,0 1,0,0 0,1,0 0,1,0 0,1,0 0,1,0 0,1,0 0,1,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 "
      TextureCoordinates="1,0 1,1 0,1 0,1 0,0 1,0 0,0 1,0 1,1 1,1 0,1 0,0 0,0 1,0 1,1 1,1 0,1 0,0 1,0 1,1 0,1 0,1 0,0 1,0 1,1 0,1 0,0 0,0 1,0 1,1 0,1 0,0 1,0 1,0 1,1 0,1 "
      Positions="-0.5,-0.5,-0.5 -0.5,0.5,-0.5 0.5,0.5,-0.5 0.5,0.5,-0.5 0.5,-0.5,-0.5 -0.5,-0.5,-0.5 -0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5 -0.5,-0.5,0.5 -0.5,-0.5,-0.5 0.5,-0.5,-0.5 0.5,-0.5,0.5 0.5,-0.5,0.5 -0.5,-0.5,0.5 -0.5,-0.5,-0.5 0.5,-0.5,-0.5 0.5,0.5,-0.5 0.5,0.5,0.5 0.5,0.5,0.5 0.5,-0.5,0.5 0.5,-0.5,-0.5 0.5,0.5,-0.5 -0.5,0.5,-0.5 -0.5,0.5,0.5 -0.5,0.5,0.5 0.5,0.5,0.5 0.5,0.5,-0.5 -0.5,0.5,-0.5 -0.5,-0.5,-0.5 -0.5,-0.5,0.5 -0.5,-0.5,0.5 -0.5,0.5,0.5 -0.5,0.5,-0.5 "/>
                                                    </GeometryModel3D.Geometry>
                                                </GeometryModel3D>
                                            </Model3DGroup.Children>
                                </Model3DGroup>
                                <Model3DGroup>
                                    <Model3DGroup.Children>
                                        <AmbientLight Color="Yellow"/>
                                        <DirectionalLight Color="Green" Direction="-1,-1,-1" />
                                    </Model3DGroup.Children>
                                </Model3DGroup>
                            </Model3DGroup.Children>
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>-->
                            </Viewport3D>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <!--<TabItem h:Cattach.Icon="&#xe89a;" Header="PropertyPath主从模式">
            <GroupBox Header="主从模式与分层">
                <Grid>
                    <UniformGrid Columns="3" DataContext="{Binding Source={StaticResource S.LeagueList.Default}}">
                        <GroupBox Header="My Soccer Leagues">
                            <ListBox DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="true" ItemsSource="{Binding}" />
                        </GroupBox>

                        <GroupBox Header="{Binding Path=Name}">
                            <ListBox DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="true" ItemsSource="{Binding Path=Divisions}" />
                        </GroupBox>

                        <GroupBox Header="{Binding Path=Divisions/Name}">
        -->
        <!--<ListBox DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="true" ItemsSource="{Binding Path=Divisions/Teams}" />-->
        <!--
                            <ListBox DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="true" ItemsSource="{Binding Path=Divisions/Teams}" />

                        </GroupBox>
                    </UniformGrid>
                </Grid>
            </GroupBox>
        </TabItem>-->

        <TabItem h:Cattach.Icon="&#xe89a;" Header="文本 - LineStackingStrategy">
            <GroupBox Header="LineStackingStrategy">
                <Grid>
                    <StackPanel>
                        <TextBlock Width="500"
                                   Background="Yellow"
                                   LineHeight="10"
                                   LineStackingStrategy="MaxHeight"
                                   TextWrapping="Wrap">
                            Use the<Span FontSize="30">LineStackingStrategy</Span>
                            property to determine how a line box is
                            created for each line. A value of<Span FontSize="20">MaxHeight</Span>
                            specifies that the stack
                            height is the smallest value that contains all the inline elements on that line when those
                            elements are properly aligned. A value of<Span FontSize="20">BlockLineHeight</Span>
                            specifies
                            that the stack height is determined by the block element LineHeight property value.</TextBlock>


                        <TextBlock Width="500"
                                   Margin="0,10"
                                   Background="Yellow"
                                   LineHeight="10"
                                   LineStackingStrategy="MaxHeight"
                                   TextAlignment="Justify"
                                   TextDecorations="UnderLine"
                                   TextWrapping="Wrap">
                            Use the<Span FontSize="30">LineStackingStrategy</Span>
                            property to determine how a line box is
                            created for each line. A value of<Span FontSize="20">MaxHeight</Span>
                            specifies that the stack
                            height is the smallest value that contains all the inline elements on that line when those
                            elements are properly aligned. A value of<Span FontSize="20">BlockLineHeight</Span>
                            specifies
                            that the stack height is determined by the block element LineHeight property value.</TextBlock>

                        <!--  Here is the same TextBlock but the LineStackingStrategy is set to "BlockLineHeight".  -->
                        <TextBlock Width="500"
                                   Margin="0,40,0,0"
                                   Background="Blue"
                                   LineHeight="10"
                                   LineStackingStrategy="BlockLineHeight"
                                   TextWrapping="Wrap">
                            Use the<Span FontSize="30">LineStackingStrategy</Span>
                            property to determine how a line box is
                            created for each line. A value of<Span FontSize="20">MaxHeight</Span>
                            specifies that the stack
                            height is the smallest value that contains all the inline elements on that line when those
                            elements are properly aligned. A value of<Span FontSize="20">BlockLineHeight</Span>
                            specifies
                            that the stack height is determined by the block element LineHeight property value.</TextBlock>

                    </StackPanel>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header=" Binding Mode=PreviousData">
            <GroupBox Header="PreviousData">
                <Grid>
                    <ListBox>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <UniformGrid Columns="2">
                                    <TextBlock Text="{Binding}" />
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=PreviousData}}" />
                                </UniformGrid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <system:String>111111111</system:String>
                        <system:String>222222222</system:String>
                        <system:String>44444444</system:String>
                        <system:String>55555555</system:String>
                        <system:String>666666666666</system:String>
                        <system:String>7777777777</system:String>
                        <system:String>88888888888</system:String>
                        <system:String>99999999999</system:String>
                    </ListBox>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem Header="CacheMode - BitmapCache UI缓存">
            <GroupBox Header="显示居中">
                <Grid>
                    <TextBlock HorizontalAlignment="Left"
                               FlowDirection="RightToLeft"
                               FontSize="45"
                               FontStretch="Expanded"
                               Style="{x:Null}"
                               Text="显示居中">
                        <Hyperlink />
                        <TextBlock.CacheMode>
                            <BitmapCache />
                        </TextBlock.CacheMode>
                    </TextBlock>
                </Grid>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="VisibleActions - RadialOpacityMaskTransition">
            <GroupBox Header="RadialOpacityMaskTransition">
                <DockPanel>
                    <h:SwitchToggleButton x:Name="cb111111"
                                          Margin="5"
                                          HorizontalAlignment="Left"
                                          BorderCornerRadius="3"
                                          Content="显示/隐藏"
                                          CornerRadius="2"
                                          DockPanel.Dock="Top"
                                          IsChecked="True" />
                    <Grid h:TransitionService.IsVisible="{Binding ElementName=cb111111, Path=IsChecked}" Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                        <h:TransitionService.VisibleActions>
                            <h:TransitionCollection>
                                <!--<h:AngleAction StartAngle="{h:IntRandowm From=0,To=720}" EndAngle="{h:IntRandowm From=0,To=720}" RenderTransformOrigin="0.5,0.5"/>-->
                                <h:RadialOpacityMaskTransition />
                            </h:TransitionCollection>
                        </h:TransitionService.VisibleActions>
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="100"
                                   Text="Grid" />
                    </Grid>
                </DockPanel>
            </GroupBox>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="OpacityMask">
            <Grid x:Name="griddd" Background="Red" RenderTransformOrigin="0.5,0.5">
                <Grid.OpacityMask>
                    <RadialGradientBrush>
                        <RadialGradientBrush.Transform>
                            <ScaleTransform x:Name="stt" CenterX="671" CenterY="240" ScaleX="{Binding ElementName=sd, Path=Value}" ScaleY="{Binding ElementName=sd, Path=Value}" />
                        </RadialGradientBrush.Transform>
                        <GradientStop Offset="0" Color="Transparent" />
                        <GradientStop Offset="0.2" Color="Transparent" />
                        <GradientStop Offset="1" Color="Black" />
                    </RadialGradientBrush>
                </Grid.OpacityMask>
                <TextBlock HorizontalAlignment="Left" Foreground="Black" Text="{Binding ElementName=griddd, Path=ActualHeight}" />
                <Slider x:Name="sd" Maximum="20" Value="0" />
            </Grid>

        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="Drawer">
            <Grid>
                <Grid>
                    <h:Drawer Style="{DynamicResource {x:Static h:Drawer.GeomotryKey}}">
                        <ListBox Width="500" Height="300" Background="Purple">
                            <TextBox h:Cattach.IsUseHistory="False" />
                            <TextBox />
                        </ListBox>
                    </h:Drawer>
                </Grid>

                <Grid>
                    <h:Drawer HorizontalContentAlignment="Left" Style="{DynamicResource {x:Static h:Drawer.GeomotryKey}}">
                        <ListBox Width="500" Height="300" Background="Red">
                            <TextBox h:Cattach.IsUseHistory="False" />
                            <TextBox />
                        </ListBox>
                    </h:Drawer>
                </Grid>
            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="Drawer">
            <Grid Background="Yellow">
                <h:Drawer Background="Red" Style="{DynamicResource {x:Static h:Drawer.RightKey}}">
                    <ListBox Grid.Row="1" Width="200" HorizontalAlignment="Stretch">
                        <TextBox h:Cattach.IsUseHistory="False" />
                        <TextBox />
                    </ListBox>
                </h:Drawer>

                <h:Drawer Background="Red" Style="{DynamicResource {x:Static h:Drawer.LeftKey}}">
                    <h:TransitionService.VisibleActions>
                        <h:ScaleTransition />
                    </h:TransitionService.VisibleActions>

                    <ListBox Grid.Row="1" Width="200" HorizontalAlignment="Stretch">
                        <TextBox h:Cattach.IsUseHistory="False" />
                        <TextBox />
                    </ListBox>
                </h:Drawer>

                <h:Drawer Background="Red" Style="{DynamicResource {x:Static h:Drawer.BottomKey}}">
                    <h:TransitionService.VisibleActions>
                        <h:TransitionCollection>
                            <h:HorizontalTransition />
                        </h:TransitionCollection>
                    </h:TransitionService.VisibleActions>

                    <ListBox Grid.Row="1" Height="200" HorizontalAlignment="Stretch">
                        <TextBox h:Cattach.IsUseHistory="False" />
                        <TextBox />
                    </ListBox>
                </h:Drawer>

                <h:Drawer Background="Red" Style="{DynamicResource {x:Static h:Drawer.TopKey}}">
                    <h:TransitionService.VisibleActions>
                        <h:TransitionCollection>
                            <h:TranslateTransition StartPoint="0,-100" EndPoint="0,-100" />
                        </h:TransitionCollection>
                    </h:TransitionService.VisibleActions>

                    <ListBox Grid.Row="1" Height="200" HorizontalAlignment="Stretch">
                        <TextBox h:Cattach.IsUseHistory="False" />
                        <TextBox />
                    </ListBox>
                </h:Drawer>
            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="h:Cattach.IsVisible">
            <Grid Background="Yellow">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ListBox Grid.Row="1" HorizontalAlignment="Stretch">
                    <TextBox h:Cattach.IsUseHistory="False" />
                    <TextBox />
                </ListBox>
                <CheckBox x:Name="cbbbbb" DockPanel.Dock="Top" />

                <Grid Grid.Row="1" h:TransitionService.IsVisible="{Binding ElementName=cbbbbb, Path=IsChecked}" Background="Red">
                    <h:TransitionService.VisibleActions>
                        <h:TransitionCollection>
                            <h:HorizontalTransition />
                        </h:TransitionCollection>
                    </h:TransitionService.VisibleActions>
                </Grid>
            </Grid>
        </TabItem>

        <TabItem Header="GroupDataGrid - DataGrid分组">
            <Grid>
                <h:PagedDataGrid AutoGenerateColumns="True" DataSource="{Binding Students}">
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander Header="{Binding Path=Name}" IsExpanded="False" Style="{StaticResource {x:Static h:ExpanderKeys.Default}}">
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <DataGridRowsPresenter />
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                    <!--<DataGrid.Columns>

                    </DataGrid.Columns>-->
                </h:PagedDataGrid>
            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="EnumSource - 枚举绑定数据源">
            <StackPanel>
                <ComboBox ItemsSource="{Binding Source={h:EnumSource EnumType={x:Type local:MyEnum}}}" SelectedItem="{Binding CustomNameViewModel.SelectedMyEnum}" />
                <ComboBox ItemsSource="{Binding Source={h:EnumGroupSource EnumType={x:Type local:MyEnum}, GroupName=11}}" SelectedItem="{Binding CustomNameViewModel.SelectedMyEnum}" />
            </StackPanel>

        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="FilterBox">
            <StackPanel>
                <h:FilterBox x:Name="fb" DataSource="{Binding Students}" />
                <h:PagedDataGrid AutoGenerateColumns="True" DataSource="{Binding ElementName=fb, Path=OutSource}" PageCount="10" />
            </StackPanel>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="DrawingBrush">
            <Grid>
                <Grid.Background>
                    <DrawingBrush Stretch="Uniform"
                                  TileMode="Tile"
                                  Viewport="0 0 100 100"
                                  ViewportUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Brush="White">
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0 0 100 100" />
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>

                                <GeometryDrawing Brush="Red">
                                    <GeometryDrawing.Geometry>
                                        <!--<RectangleGeometry Rect="0 0 50 50"></RectangleGeometry>-->
                                        <EllipseGeometry Center="25,25" RadiusX="25" RadiusY="25" />
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>

                                <GeometryDrawing Brush="Red">
                                    <GeometryDrawing.Geometry>
                                        <!--<RectangleGeometry Rect="50 50 50 50"></RectangleGeometry>-->
                                        <!--<EllipseGeometry RadiusX="112" RadiusY="112"/>-->
                                        <EllipseGeometry Center="75,75" RadiusX="25" RadiusY="25" />
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingGroup>

                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Grid.Background>
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded" >
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                <DoubleAnimation From="0" To="1" Duration="00:00:03" Storyboard.TargetProperty="Offset"
                                            Storyboard.TargetName="ss"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>-->
            </Grid>
        </TabItem>




        <TabItem h:Cattach.Icon="&#xe89a;" Header="Clip - 按PathGeometry裁剪">
            <Grid Background="Green">
                <Grid.Clip>
                    <PathGeometry>
                        <PathGeometry.Transform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.2" ScaleY="0.2" />
                                <TranslateTransform X="650" Y="350" />
                            </TransformGroup>
                        </PathGeometry.Transform>
                        <PathFigure StartPoint="-600,-400">
                            <LineSegment Point="0,-300" />
                            <LineSegment Point="300,300" />
                            <LineSegment Point="-100,400" />
                        </PathFigure>
                    </PathGeometry>
                </Grid.Clip>
            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="Clip - 裁剪动画效果">
            <Grid Background="Green">
                <Grid.Clip>
                    <EllipseGeometry x:Name="eg" RadiusX="100" RadiusY="100" />
                </Grid.Clip>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                <DoubleAnimation Storyboard.TargetName="eg"
                                                 Storyboard.TargetProperty="RadiusY"
                                                 From="0" To="1000"
                                                 Duration="00:00:03" />

                                <DoubleAnimation Storyboard.TargetName="eg"
                                                 Storyboard.TargetProperty="RadiusX"
                                                 From="0" To="1000"
                                                 Duration="00:00:03" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="OpacityMask - DrawingBrush">
            <Grid Background="Green">
                <Grid.OpacityMask>
                    <DrawingBrush Stretch="None"
                                  TileMode="Tile"
                                  Viewport="1 1 1 1"
                                  ViewportUnits="RelativeToBoundingBox">
                        <DrawingBrush.Drawing>
                            <GeometryDrawing>
                                <GeometryDrawing.Brush>
                                    <RadialGradientBrush>
                                        <GradientStop x:Name="ss" Offset="0" Color="Transparent" />
                                        <GradientStop Offset="0.3" Color="Transparent" />
                                        <GradientStop Offset="1.1" Color="Black" />
                                        <GradientStop Offset="1" Color="Black" />
                                    </RadialGradientBrush>
                                </GeometryDrawing.Brush>

                                <GeometryDrawing.Geometry>
                                    <!--<RectangleGeometry Rect="0.01 0.01 0.9 0.9"></RectangleGeometry>-->
                                    <PathGeometry>
                                        <PathGeometry.Transform>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </PathGeometry.Transform>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="160,40" />
                                            <LineSegment Point="200,100" />
                                            <LineSegment Point="80,100" />
                                        </PathFigure>
                                    </PathGeometry>
                                    <!--<EllipseGeometry RadiusX="112" RadiusY="112"/>-->
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Grid.OpacityMask>
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded" >
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                <DoubleAnimation From="0" To="1" Duration="00:00:03" Storyboard.TargetProperty="Offset"
                                            Storyboard.TargetName="ss"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>-->
            </Grid>
        </TabItem>

        <TabItem Header="OpacityMask - DrawingBrush">
            <Grid x:Name="grid"
                  Background="Green"
                  Loaded="Grid_Loaded"
                  OpacityMask="{StaticResource S.DrawingBrush.Linear}" />
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="InvokeTimeSplitAnimationAction - 渐进动画">
            <StackPanel x:Name="sssssp">
                <Button Content="1" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeTimeSplitAnimationAction IsUseAll="True" SplitMilliSecond="-800" Target="{Binding ElementName=sssssp}">
                                <h:InvokeTimeSplitAnimationAction.Timelines>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                     From="0" To="1"
                                                     Duration="00:00:01" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="0" To="1"
                                                     Duration="00:00:01" />
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="1" To="0"
                                                     Duration="00:00:01" />
                                </h:InvokeTimeSplitAnimationAction.Timelines>
                            </h:InvokeTimeSplitAnimationAction>
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </Button>

                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />
                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}" />

            </StackPanel>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="InvokeFountainAnimationAction - 喷泉动画">
            <StackPanel x:Name="ssssp">
                <Button Content="1" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}" />
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </Button>

                <Button Content="2" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}" />
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </Button>

                <Button Content="3" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}" />
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </Button>

                <Button Content="4" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" Target="{Binding ElementName=ssssp}" />
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </Button>


                <Button Content="5" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">
                    <h:Interaction.Triggers>
                        <h:EventTrigger EventName="Click">
                            <h:InvokeFountainAnimationAction IsUseAll="True" />
                        </h:EventTrigger>
                    </h:Interaction.Triggers>
                </Button>
            </StackPanel>
        </TabItem>

        <TabItem Header="消息 - FloatWindow">
            <StackPanel>
                <Button Width="100"
                        Height="40"
                        Click="Button_Click"
                        Content="erete" />
            </StackPanel>
        </TabItem>

        <TabItem Header="PagePanel">
            <Grid>
                <UniformGrid Columns="3">
                    <Grid HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Purple"
                          Opacity="0.5" />
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Red">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="2" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Green">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="3" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Blue">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="4" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Gray">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="5" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Orange">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="6" />
                    </Grid>
                </UniformGrid>

                <h:PagePanel x:Name="pp">
                    <!--<h:PagePanel.AnimationAction>
                        <h:OpacityAction/>
                    </h:PagePanel.AnimationAction>-->

                    <Grid HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Purple"
                          Opacity="0.2">
                        <Grid.Clip>
                            <CombinedGeometry GeometryCombineMode="Exclude">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="0 0 1000 800" />
                                </CombinedGeometry.Geometry1>

                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry Rect="500 100 30 30" />
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Grid.Clip>
                    </Grid>


                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Red">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="2" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Green">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="3" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Blue">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="4" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Gray">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="5" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Orange">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="500"
                                   Text="6" />
                    </Grid>
                </h:PagePanel>

                <Button CommandTarget="{Binding ElementName=pp}" Style="{StaticResource {x:Static h:ButtonKeys.Left}}" />
                <Button CommandTarget="{Binding ElementName=pp}" Style="{StaticResource {x:Static h:ButtonKeys.Right}}" />
            </Grid>
        </TabItem>

        <TabItem Header="FlashPanel">
            <Grid>
                <h:FlashPanel SplitMilliSecond="-700">
                    <h:FlashPanel.Timelines>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         From="0" To="1"
                                         Duration="00:00:01" />
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                         From="0" To="1"
                                         Duration="00:00:01" />
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="1" To="0"
                                         Duration="00:00:01" />
                    </h:FlashPanel.Timelines>

                    <Ellipse Width="200"
                             Height="200"
                             Fill="Red"
                             RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                             RenderTransformOrigin="0.5,0.5" />
                    <Ellipse Width="200"
                             Height="200"
                             Fill="Red"
                             RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                             RenderTransformOrigin="0.5,0.5" />
                    <Ellipse Width="200"
                             Height="200"
                             Fill="Red"
                             RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                             RenderTransformOrigin="0.5,0.5" />
                    <Ellipse Width="200"
                             Height="200"
                             Fill="Red"
                             RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                             RenderTransformOrigin="0.5,0.5" />
                    <Ellipse Width="200"
                             Height="200"
                             Fill="Red"
                             RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}"
                             RenderTransformOrigin="0.5,0.5" />

                </h:FlashPanel>


            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="Path MatrixTransform">
            <Grid>
                <Path Stroke="Red">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100">
                                <!--<ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />-->

                                <BezierSegment Point1="0,0" Point2="300,600" Point3="500,0" />

                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <!--<Ellipse Fill="Green" Width="300" Height="50" RenderTransform="{StaticResource {x:Static h:SystemKeys.TransformGroup}}">-->

                <Ellipse Width="50" Height="20" Fill="Green">
                    <Ellipse.RenderTransform>
                        <MatrixTransform x:Name="mt" />
                    </Ellipse.RenderTransform>
                    <Ellipse.OpacityMask>
                        <RadialGradientBrush Center="0.6,0.5" GradientOrigin="0.95,0.5">
                            <GradientStop Offset="0" Color="Black" />
                            <GradientStop Offset="1" Color="Transparent" />
                        </RadialGradientBrush>
                    </Ellipse.OpacityMask>
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="00:00:00" RepeatBehavior="Forever" Duration="00:00:12">
                                    <!--<DoubleAnimationUsingPath  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <DoubleAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,100" >
                                                    <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </DoubleAnimationUsingPath.PathGeometry>
                                    </DoubleAnimationUsingPath>

                                    <DoubleAnimationUsingPath Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                        <DoubleAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,100" >
                                                    <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </DoubleAnimationUsingPath.PathGeometry>
                                    </DoubleAnimationUsingPath>-->
                                    <!--<MatrixAnimationUsingPath Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(MatrixTransform.Matrix)" DoesRotateWithTangent="True">-->

                                    <MatrixAnimationUsingPath DoesRotateWithTangent="True" Storyboard.TargetName="mt" Storyboard.TargetProperty="Matrix">
                                        <MatrixAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,100">
                                                    <!--<ArcSegment Point="100,150" Size="1300,1200" SweepDirection="Clockwise" />-->
                                                    <BezierSegment Point1="0,0" Point2="300,600" Point3="500,0" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </MatrixAnimationUsingPath.PathGeometry>
                                    </MatrixAnimationUsingPath>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
            </Grid>
        </TabItem>

        <TabItem h:Cattach.Icon="&#xe89a;" Header="Storyboard - Wave">
            <Grid>
                <Path HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Fill="Red"
                      Stretch="Fill">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100">
                                <LineSegment Point="100,50" />
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="00:00:00" RepeatBehavior="Forever" Duration="00:00:02">
                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

                <Path HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Fill="Red"
                      Stretch="Fill">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100">
                                <LineSegment Point="100,50" />
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="00:00:00.25" RepeatBehavior="Forever" Duration="00:00:02">
                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

                <Path HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Fill="Red"
                      Stretch="Fill">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100">
                                <LineSegment Point="100,50" />
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="00:00:00.5" RepeatBehavior="Forever" Duration="00:00:02">
                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

                <Path HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Fill="Red"
                      Stretch="Fill">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,100">
                                <LineSegment Point="100,50" />
                                <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                <LineSegment Point="0,100" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>

                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="00:00:00.75" RepeatBehavior="Forever" Duration="00:00:02">
                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="50" To="500" />
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>

            </Grid>
        </TabItem>

        <TabItem Header="EffectBox">
            <h:EffectBox Foreground="Red" Style="{DynamicResource S.EffectBox.CircleWave}" />
        </TabItem>

        <TabItem Header="TupleGroup">
            <StackPanel>
                <h:TupleGroup>
                    <h:TupleGroup.LeftItem1>
                        <Label Content="LeftItem1" />
                    </h:TupleGroup.LeftItem1>

                    <h:TupleGroup.LeftItem2>
                        <TextBlock Text="LeftItem2" />
                    </h:TupleGroup.LeftItem2>

                    <h:TupleGroup.RightItem1>
                        <TextBlock Text="RightItem1" />
                    </h:TupleGroup.RightItem1>

                    <h:TupleGroup.RightItem2>
                        <TextBlock Text="RightItem2" />
                    </h:TupleGroup.RightItem2>

                    <TextBlock Background="Red" Text="Center" />
                </h:TupleGroup>
            </StackPanel>

        </TabItem>


        <TabItem Header="RenderTransform">
            <StackPanel>
                <Slider x:Name="sk_x"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1000"
                        Minimum="0" />
                <Slider x:Name="sk_y"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1000"
                        Minimum="0" />

                <Slider x:Name="st_x"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1"
                        Minimum="-1"
                        SmallChange="0.1"
                        Value="1" />
                <Slider x:Name="st_y"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1"
                        Minimum="-1"
                        SmallChange="0.1"
                        Value="1" />

                <Slider x:Name="rt_a"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1000"
                        Minimum="0"
                        SmallChange="10" />

                <Slider x:Name="tt_x"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1000"
                        Minimum="0"
                        SmallChange="10" />
                <Slider x:Name="tt_y"
                        Margin="10"
                        DockPanel.Dock="Bottom"
                        Maximum="1000"
                        Minimum="0"
                        SmallChange="10" />

                <Grid Width="300"
                      Height="300"
                      Background="Red"
                      RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="{Binding ElementName=rt_a, Path=Value}" />
                            <ScaleTransform ScaleX="{Binding ElementName=st_x, Path=Value}" ScaleY="{Binding ElementName=st_y, Path=Value}" />

                            <SkewTransform AngleX="{Binding ElementName=sk_x, Path=Value}" AngleY="{Binding ElementName=sk_y, Path=Value}" />

                            <TranslateTransform X="{Binding ElementName=tt_x, Path=Value}" Y="{Binding ElementName=tt_y, Path=Value}" />
                        </TransformGroup>
                    </Grid.RenderTransform>

                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="180"
                               Text="R" />
                </Grid>
            </StackPanel>

        </TabItem>

        <TabItem Header="FluidMoveBehavior">
            <DockPanel>
                <Button Command="{Binding RelayCommand}"
                        CommandParameter="Add"
                        Content="添加.."
                        DockPanel.Dock="Top" />
                <Button Command="{Binding RelayCommand}"
                        CommandParameter="Add"
                        Content="移除.."
                        DockPanel.Dock="Top" />

                <ListBox ItemsSource="{Binding Collection}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--<h:CirclePanel Len="200">
                            -->
                            <!--<h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children"/>
                                </h:Interaction.Behaviors>-->
                            <!--
                            </h:CirclePanel>-->
                            <StackPanel>
                                <h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children" />
                                </h:Interaction.Behaviors>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Button Width="250"
                                        Height="Auto"
                                        VerticalAlignment="Stretch"
                                        Content="{Binding Value}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </TabItem>

        <TabItem Header="FluidMoveBehavior">
            <DockPanel>
                <Button Command="{Binding RelayCommand}"
                        CommandParameter="Add"
                        Content="添加.."
                        DockPanel.Dock="Top" />
                <Button Command="{Binding RelayCommand}"
                        CommandParameter="Add"
                        Content="移除.."
                        DockPanel.Dock="Top" />

                <ListBox ItemsSource="{Binding Collection}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <h:CirclePanel Len="200">
                                <h:Interaction.Behaviors>
                                    <h:FluidMoveBehavior AppliesTo="Children" />
                                </h:Interaction.Behaviors>
                            </h:CirclePanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Button Width="250"
                                        Height="Auto"
                                        VerticalAlignment="Stretch"
                                        Content="{Binding Value}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </TabItem>

        <TabItem Header="CoverPanel">
            <Grid>
                <h:CoverPanel PressValue="0.6" ScaleMin="0.3">
                    <Button Width="300" Height="400" Background="Purple" />
                    <Button Width="300" Height="400" Background="Gray" />
                    <Button Width="300" Height="400" Background="Red" />
                    <Button Width="300" Height="400" Background="Orange" />
                    <Button Width="300" Height="400" Background="Green" />
                    <Button Width="300" Height="400" Background="Beige" />
                    <Button Width="300" Height="400" Background="Blue" />
                    <Button Width="300" Height="400" Background="Beige" />
                    <Button Width="300" Height="400" Background="Green" />
                    <Button Width="300" Height="400" Background="Orange" />
                    <Button Width="300" Height="400" Background="Red" />
                    <Button Width="300" Height="400" Background="Gray" />
                    <Button Width="300" Height="400" Background="Purple" />
                </h:CoverPanel>
            </Grid>
        </TabItem>

        <TabItem Header="GitTop">
            <Grid Background="Red">
                <h:GitTopContainer>
                    <h:GitTopItem Background="Purple">
                        <h:GitTopItem.HeaderContent>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="测试" />
                        </h:GitTopItem.HeaderContent>

                        <TextBox Margin="10,2" h:Cattach.Icon="&#xe787;" h:Cattach.Watermark="请输入筛选条件" />

                    </h:GitTopItem>

                    <h:GitTopItem Background="{DynamicResource {x:Static h:BrushKeys.Accent}}">
                        <h:GitTopItem.HeaderContent>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="测试" />
                        </h:GitTopItem.HeaderContent>

                        <TextBox Margin="10,2" h:Cattach.Icon="&#xe787;" h:Cattach.Watermark="请输入筛选条件" />

                    </h:GitTopItem>
                </h:GitTopContainer>
            </Grid>
        </TabItem>

        <TabItem Header="PathGeometry">
            <Grid>
                <Canvas Background="LightGray">
                    <Path Fill="Red">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="0,100">
                                    <LineSegment Point="100,50" />
                                    <ArcSegment Point="100,150" Size="300,200" SweepDirection="Clockwise" />
                                    <LineSegment Point="0,100" />
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </Grid>
        </TabItem>

        <TabItem Header="LeftMenuTest">
            <UniformGrid Columns="2">
                <h:LeftMenu>
                    <h:LinkAction DisplayName="Home" Logo="&#xe7b3;" />
                    <h:LinkAction DisplayName="Counter" Logo="&#xe7b8;" />
                    <h:LinkAction DisplayName="Fetch Data" Logo="&#xe7be;" />
                </h:LeftMenu>

                <h:LeftMenu Style="{DynamicResource {x:Static h:LeftMenu.LinkActionGroupKey}}">
                    <h:LinkActionGroup DisplayName="扩展控件" IsExpanded="True" Logo="&#xe7b3;">
                        <h:LinkActionGroup.Links>
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="数据列表"
                                          Logo="&#xe69f;" />
                            <h:LinkAction Action="Shuttle"
                                          Controller="Custom"
                                          DisplayName="穿梭控件"
                                          Logo="&#xe69f;" />
                            <h:LinkAction Action="PropertyGrid"
                                          Controller="Custom"
                                          DisplayName="属性表单"
                                          Logo="&#xe69e;" />
                            <h:LinkAction Action="Ping"
                                          Controller="Custom"
                                          DisplayName="网络诊断"
                                          Logo="&#xe69e;" />
                            <h:LinkAction Action="Step"
                                          Controller="Custom"
                                          DisplayName="步骤进度"
                                          Logo="&#xe69e;" />
                            <h:LinkAction Action="LeftMenu"
                                          Controller="Custom"
                                          DisplayName="导航菜单"
                                          Logo="&#xe69e;" />
                        </h:LinkActionGroup.Links>
                    </h:LinkActionGroup>

                    <h:LinkActionGroup DisplayName="数据分析" Logo="&#xe7b8;">
                        <h:LinkActionGroup.Links>
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="实时数据"
                                          Logo="&#xe69f;" />
                            <h:LinkAction Action="History"
                                          Controller="Loyout"
                                          DisplayName="历史数据"
                                          Logo="&#xe6a3;" />
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="年度报表"
                                          Logo="&#xe6a3;" />
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="监控管理"
                                          Logo="&#xe6a3;" />
                        </h:LinkActionGroup.Links>
                    </h:LinkActionGroup>

                    <h:LinkActionGroup DisplayName="综合管理" Logo="&#xe7be;">
                        <h:LinkActionGroup.Links>
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="用户管理"
                                          Logo="&#xe69f;" />
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="档案管理"
                                          Logo="&#xe69e;" />
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="日志管理"
                                          Logo="&#xe69f;" />
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="权限管理"
                                          Logo="&#xe69f;" />
                            <h:LinkAction Action="RealData"
                                          Controller="Loyout"
                                          DisplayName="角色管理"
                                          Logo="&#xe69f;" />
                        </h:LinkActionGroup.Links>
                    </h:LinkActionGroup>
                </h:LeftMenu>
            </UniformGrid>
        </TabItem>

        <TabItem Header="Step">
            <StackPanel>
                <h:Step ItemsSource="{x:Null}">
                    <h:StepItem DisplayName="1"
                                Message="步骤一"
                                Percent="50"
                                State="2" />
                    <h:StepItem DisplayName="2"
                                Message="步骤二"
                                Percent="10"
                                State="-1" />
                    <h:StepItem DisplayName="3"
                                Message="步骤三"
                                Percent="80"
                                State="0" />
                    <h:StepItem DisplayName="4"
                                Message="步骤四"
                                Percent="30"
                                State="0" />
                </h:Step>

                <h:Step ItemsSource="{x:Null}">
                    <h:StepItem DisplayName="1"
                                Message="步骤一"
                                Percent="50"
                                State="2" />
                    <h:StepItem DisplayName="2"
                                Message="步骤二"
                                Percent="10"
                                State="1" />
                    <h:StepItem DisplayName="3"
                                Message="步骤三"
                                Percent="80"
                                State="0" />
                    <h:StepItem DisplayName="4"
                                Message="步骤四"
                                Percent="30"
                                State="0" />
                </h:Step>

                <h:Step ItemsSource="{x:Null}">
                    <h:StepItem DisplayName="1"
                                Message="步骤一"
                                Percent="50"
                                State="2" />
                    <h:StepItem DisplayName="2"
                                Message="步骤二"
                                Percent="10"
                                State="2" />
                    <h:StepItem DisplayName="3"
                                Message="步骤三"
                                Percent="80"
                                State="2" />
                    <h:StepItem DisplayName="4"
                                Message="步骤四"
                                Percent="30"
                                State="2" />
                </h:Step>
            </StackPanel>
        </TabItem>

        <TabItem Header="Ping">
            <StackPanel>
                <h:Ping IP="192.168.18.1" Start="True" />
                <h:Ping IP="www.baidu.com" Start="True" />

                <h:Ping IP="192.168.18.1" Start="False" />
                <h:Ping IP="www.baidu.com" Start="False" />

                <h:Ping IP="192.168.18.1" Start="True" Style="{DynamicResource {x:Static h:Ping.SingleKey}}" />
                <h:Ping IP="www.baidu.com" Start="True" Style="{DynamicResource {x:Static h:Ping.SingleKey}}" />

                <h:Ping IP="192.168.18.1" Start="False" Style="{DynamicResource {x:Static h:Ping.SingleKey}}" />
                <h:Ping IP="www.baidu.com" Start="False" Style="{DynamicResource {x:Static h:Ping.SingleKey}}" />
            </StackPanel>
        </TabItem>
    </TabControl>

</h:MainWindow>
