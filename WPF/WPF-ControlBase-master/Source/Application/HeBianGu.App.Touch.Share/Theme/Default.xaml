<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.App.Touch"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/HeBianGu.General.WpfControlLib;component/Custom/Control/Button.xaml" />

    </ResourceDictionary.MergedDictionaries>-->
    <Style x:Key="C.TextBlock.Icon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Resources/#health" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="20" />
    </Style>


    <system:Double x:Key="C.FontSize.Title">42</system:Double>
    <system:Double x:Key="C.FontSize.Big">60</system:Double>
    <system:Double x:Key="C.FontSize.Accent">36</system:Double>
    <system:Double x:Key="C.FontSize.Default">30</system:Double>
    <system:Double x:Key="C.FontSize.Small">26</system:Double>

    <Style x:Key="C.TextBlock.Base" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
    </Style>

    <Style x:Key="C.TextBlock.Title" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Title}" />
    </Style>

    <Style x:Key="C.TextBlock.Default" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}" />
    </Style>

    <Style x:Key="C.TextBlock.Accent" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Accent}" />
    </Style>

    <Style x:Key="C.TextBlock.Small" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Small}" />
    </Style>

    <Style x:Key="C.TextBlock.Big" BasedOn="{StaticResource C.TextBlock.Base}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Big}" />
    </Style>

    <Style x:Key="C.Button.Tranparent" BasedOn="{StaticResource {x:Static h:ButtonKeys.Transparent}}" TargetType="Button">
        <!--<Setter Property="Command" Value="{Binding RelayCommand}"/>-->
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="30,0,0,0" />
        <Setter Property="FontSize" Value="36" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
    </Style>

    <Style x:Key="C.Button.Default" BasedOn="{StaticResource {x:Static h:ButtonKeys.Dynamic}}" TargetType="Button">
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Height" Value="65" />
        <Setter Property="Width" Value="200" />
        <Setter Property="h:Cattach.CornerRadius" Value="33" />
    </Style>

    <Style x:Key="C.Button.Cancel" BasedOn="{StaticResource {x:Static h:ButtonKeys.Dynamic}}" TargetType="Button">
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Height" Value="65" />
        <Setter Property="Width" Value="200" />
        <Setter Property="h:Cattach.CornerRadius" Value="33" />
        <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />-->
        <!--<Setter Property="BorderThickness" Value="2" />-->
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
        <Setter Property="h:Cattach.PressBackground" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.PressBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />-->
    </Style>

    <DataTemplate DataType="{x:Type local:DataValueEntity}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid x:Name="txt" Height="70" Margin="15">
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="{Binding Foreground}"
                               Style="{StaticResource C.TextBlock.Big}"
                               Text="{Binding Value}" />
                </Grid>
                <h:ModernProgressRing x:Name="progress"
                                      Width="70"
                                      Height="70"
                                      Margin="15"
                                      IsActive="{Binding IsBuzy}"
                                      Style="{DynamicResource S.ModernProgressRing.Circle}"
                                      Visibility="Collapsed" />

                <TextBlock Margin="0,20,0,10"
                           HorizontalAlignment="Center"
                           Style="{StaticResource C.TextBlock.Default}"
                           Text="{Binding Name}" />
                <TextBlock HorizontalAlignment="Center" Style="{StaticResource C.TextBlock.Default}" Text="{Binding Range}" />
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsBuzy}" Value="True">
                <Setter TargetName="txt" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="progress" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <Thickness x:Key="C.Margin.Default">10,6</Thickness>

    <SolidColorBrush x:Key="C.Brush.Red" Color="#FE2828" />
    <SolidColorBrush x:Key="C.Brush.Orange" Color="#FDA714" />
    <SolidColorBrush x:Key="C.Brush.Green" Color="#27DB22" />
    <SolidColorBrush x:Key="C.Brush.Blue" Color="#39C9FE" />

    <SolidColorBrush x:Key="C.Brush.Background.LightBlue" Color="#E2F4FF" />

    <!--<system:Double x:Key="C.WindowItemHeight.Default">45</system:Double>-->

    <Style x:Key="C.Border.Default" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity2}}" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>

    <local:LastLinkActionsToCollapsedConverter x:Key="C.Convert.LastLinkActionsToCollapsedConverter" />

    <Style BasedOn="{StaticResource {x:Static h:TextBoxKeys.LabelClearSingle}}" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="Auto" />
        <!--<Setter Property="Height" Value="{StaticResource C.WindowItemHeight.Default}" />-->
        <Setter Property="Margin" Value="45,0" />
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}" />
        <Setter Property="h:Cattach.Icon" Value="" />
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:ComboBoxKeys.LabelSingle}}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto" />
        <!--<Setter Property="Height" Value="{StaticResource C.WindowItemHeight.Default}" />-->
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}" />
        <Setter Property="Margin" Value="45,0" />
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:CheckBoxKeys.Default}}" TargetType="CheckBox">
        <Setter Property="FontSize" Value="{StaticResource C.FontSize.Default}" />
        <Setter Property="h:Cattach.IconSize" Value="{StaticResource C.FontSize.Default}" />
    </Style>
</ResourceDictionary>