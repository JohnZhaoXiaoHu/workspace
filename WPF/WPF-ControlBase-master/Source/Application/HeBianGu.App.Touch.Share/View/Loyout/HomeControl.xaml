<UserControl x:Class="HeBianGu.App.Touch.View.Loyout.HomeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:h="https://github.com/HeBianGu"
             xmlns:local="clr-namespace:HeBianGu.App.Touch.View.Loyout"
             xmlns:local1="clr-namespace:HeBianGu.App.Touch"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="450"
             d:DesignWidth="800"
             Background="{DynamicResource {x:Static h:BrushKeys.AccentOpacity2}}"
             mc:Ignorable="d">


    <Grid Margin="40,35">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="8*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>


        <TextBlock HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="{StaticResource C.FontSize.Small}"
                   Text="{Binding SelectLink.Message, Mode=TwoWay}" />

        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal">
            <local1:ButtonCountDown Command="{Binding RelayCommand}"
                                     CommandParameter="Button.Click.ReMeasure"
                                     Content="重测"
                                     IsActive="{Binding RunReMeasureEngine, Mode=TwoWay}"
                                     Style="{StaticResource C.Button.Tranparent}" />
            <local1:ButtonCountDown Width="150"
                                     Command="{Binding RelayCommand}"
                                     CommandParameter="Button.Click.Next"
                                     Content="下一项"
                                     IsActive="{Binding RunNextEngine, Mode=TwoWay}"
                                     Style="{StaticResource C.Button.Tranparent}"
                                     Visibility="{Binding SelectLink.VisbleNext}" />

            <local1:ButtonCountDown Command="{Binding RelayCommand}"
                                     CommandParameter="Button.Click.Sumit"
                                     Content="提交"
                                     IsActive="{Binding RunSumitEngine, Mode=TwoWay}"
                                     Style="{StaticResource C.Button.Tranparent}" />
        </StackPanel>

        <TextBlock Width="Auto"
                   VerticalAlignment="Top"
                   FontWeight="Bold"
                   Foreground="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                   Style="{StaticResource C.TextBlock.Title}"
                   Text="{Binding SelectLink.DisplayName, StringFormat={}{0:C}测量}" />

        <h:LinkActionFrame Grid.Row="1" LinkAction="{Binding SelectLink}" />

        <ListBox Grid.Row="2"
                 BorderBrush="Transparent"
                 ItemsSource="{Binding LinkActions}"
                 SelectedItem="{Binding SelectLink}">
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type local1:LinkActionEntity}">
                    <Grid Margin="0,0,84,0">
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <TextBlock x:Name="txt_icon"
                                       Margin="0,0,10,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="{StaticResource C.FontSize.Accent}"
                                       Style="{StaticResource C.TextBlock.Icon}"
                                       Text="{Binding Logo}" />
                            <TextBlock x:Name="txt_text" Style="{StaticResource C.TextBlock.Accent}" Text="{Binding DisplayName}" />
                        </StackPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Success}" Value="true">
                            <Setter TargetName="txt_icon" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="txt_text" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>


            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Default}}" TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="boder">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </ListBox.ItemContainerStyle>

            <!--<h:Interaction.Triggers>
                <h:EventTrigger EventName="SelectionChanged">
                    <h:InvokeCommandAction Command="{Binding RelayCommand}" PassEventArgsToCommand="True" />
                </h:EventTrigger>
            </h:Interaction.Triggers>-->

        </ListBox>

        <h:Interaction.Triggers>
            <h:EventTrigger EventName="Loaded">
                <h:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="Loaded" />
            </h:EventTrigger>
        </h:Interaction.Triggers>
    </Grid>
</UserControl>
