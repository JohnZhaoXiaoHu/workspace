<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">
    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="S.SearchComboBox.Single" TargetType="{x:Type local:SearchComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark4}}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static h:SystemKeys.FontFamily}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="Width" Value="300" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="h:Cattach.IconMargin" Value="0,0,7,0" />
        --><!--<Setter Property="h:Cattach.Path" Value="{StaticResource S.Geometry.Rectangle.Rounded.TopRight}"/>--><!--
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SearchComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="25" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Bg"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        
                        <ContentControl x:Name="Label"
                                        Margin="1,1,0,1"
                                        Background="{TemplateBinding BorderBrush}"
                                        Content="{TemplateBinding h:Cattach.Title}"
                                        IsHitTestVisible="False"
                                        IsTabStop="False"
                                        Template="{TemplateBinding h:Cattach.TitleTemplate}" />

                        
                        <ToggleButton x:Name="PART_DropDownToggle"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      h:Cattach.IconMargin="{TemplateBinding h:Cattach.IconMargin}"
                                      h:Cattach.IconSize="15"
                                      Background="{TemplateBinding h:Cattach.FocusBackground}"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static h:XConverter.TrueToFalseConverter}, Mode=OneWay}"
                                      IsTabStop="False"
                                      Style="{DynamicResource {x:Static h:ToggleButtonKeys.ComboBox}}" />

                        
                        <Border Grid.Column="1">
                            <TextBlock x:Name="Message"
                                       Margin="5,2,5,2"
                                       Padding="0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       IsHitTestVisible="False"
                                       Opacity="{DynamicResource {x:Static h:OpacityKeys.Watermark}}"
                                       Text="{TemplateBinding h:Cattach.Watermark}"
                                       TextAlignment="Center"
                                       Visibility="Collapsed" />
                        </Border>

                        <Grid x:Name="ContentSite" Grid.Column="1" Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_SelectedItem"
                                              Margin="2,0,2,0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            
                            <TextBox x:Name="PART_EditableTextBox"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     Background="{TemplateBinding Background}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Foreground="{TemplateBinding Foreground}"
                                     IsHitTestVisible="True"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                     Style="{DynamicResource {x:Static local:TextBoxKeys.Editable}}"
                                     Text="{TemplateBinding Text}"
                                     Visibility="Collapsed" />
                        </Grid>

                        <Popup x:Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide"
                               VerticalOffset="2">
                            <Grid x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}">

                                <Grid x:Name="grid_auto"
                                      Height="Auto"
                                      Margin="0,5,0,0"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Top">
                                    --><!--<Path Data="{TemplateBinding h:Cattach.Path}" Stroke="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                          Fill="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" StrokeThickness="1" Height="{Binding ElementName=grid_auto,Path=ActualHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill"/>--><!--

                                    <Border Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                            BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                            BorderThickness="1"
                                            CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
                                    <Polygon Margin="0,-5,8,0"
                                             HorizontalAlignment="Right"
                                             Fill="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                             FillRule="Nonzero"
                                             Points="0,5 5,0 10,5 0,5"
                                             Stroke="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                                    <Grid Margin="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <TextBox x:Name="tbSearch"
                                                 Width="Auto"
                                                 Margin="7,5,7.5,2"
                                                 h:Cattach.Watermark="请输入搜索条件"
                                                 FontFamily="{DynamicResource IconFont}"
                                                 Foreground="{TemplateBinding Foreground}"
                                                 Style="{DynamicResource {x:Static h:TextBoxKeys.Clear}}"
                                                 Tag="Search"
                                                 Visibility="{Binding SearchBoxVisibility, RelativeSource={RelativeSource AncestorType=ComboBox}}" />

                                        <ScrollViewer Grid.Row="1"
                                                      MaxHeight="250"
                                                      Margin="1,5,1,15"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      Style="{DynamicResource MiniScrollViewer}"
                                                      VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter />
                                        </ScrollViewer>

                                        <Button x:Name="btnClear"
                                                Grid.Row="1"
                                                Margin="0,0,3,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Content="×"
                                                FontSize="16"
                                                Foreground="{TemplateBinding Foreground}"
                                                Tag="Clear"
                                                Visibility="Collapsed" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>
                        
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_DropDownToggle" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="Message" Property="Foreground" Value="{Binding Path=(h:Cattach.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />

                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(h:Cattach.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="Message" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SearchComboBoxItem}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SearchComboBoxItem}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0,0.5">

                        <Border x:Name="bdrMain"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                            <Grid>
                                <ContentPresenter x:Name="txtContent"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentSource="Content"
                                                  Opacity="0.8" />

                                <Button x:Name="btnDelete"
                                        Width="35"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Command="{Binding DeleteCommand, RelativeSource={RelativeSource AncestorType=ComboBoxItem}}"
                                        CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                        Content="×"
                                        Cursor="Arrow"
                                        FontSize="20"
                                        Foreground="{TemplateBinding Foreground}"
                                        Opacity="0.7"
                                        Style="{DynamicResource {x:Static h:ButtonKeys.Transparent}}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanDelete" Value="False">
                            <Setter TargetName="btnDelete" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bdrMain" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdrMain" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.SearchComboBox.Single.Label" BasedOn="{StaticResource S.SearchComboBox.Single}" TargetType="{x:Type local:SearchComboBox}">
        <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static local:ShareKeys.TitleTemplate}}" />
    </Style>

    <Style BasedOn="{StaticResource S.SearchComboBox.Single}" TargetType="{x:Type local:SearchComboBox}" />-->
</ResourceDictionary>
