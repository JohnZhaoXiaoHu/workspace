<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="S.TreeView.Dynimac" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="TreeView">
        <Setter Property="h:Cattach.ItemHorizontalContentAlignment" Value="Stretch" />
        <Setter Property="h:Cattach.ItemHorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Handy.Dynamic, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource S.TreeView.Dynimac}" TargetType="TreeView">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TreeViewItemKeys.Handy}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <local:FScrollView x:Name="_tv_scrollviewer_"
                                           Padding="{TemplateBinding Padding}"
                                           Background="{TemplateBinding Background}"
                                           CanContentScroll="false"
                                           Focusable="false"
                                           HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </local:FScrollView>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Handy, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.HandyDynamic}}" TargetType="{x:Type TreeView}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Handy.Single, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.Handy}}" TargetType="{x:Type TreeView}">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Handy.Accent, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.Handy}}" TargetType="{x:Type TreeView}">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Material.Dynamic, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource S.TreeView.Dynimac}" TargetType="{x:Type TreeView}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TreeViewItemKeys.Material}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <local:Row Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchHeight)}"
                                       Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchMargin)}"
                                       HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchHorizontalAlignment)}"
                                       VerticalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchVerticalAlignment)}"
                                       DockPanel.Dock="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchDock)}">
                                <TextBox x:Name="tb_search"
                                         Grid.ColumnSpan="12"
                                         Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchWidth)}"
                                         h:Cattach.IsUseHistory="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchUseHistory)}"
                                         Style="{DynamicResource {x:Static local:TextBoxKeys.Search}}"
                                         Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseSearch), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                    <h:Interaction.Behaviors>
                                        <h:SearchItemsControlTextBoxBehvior ItemsControl="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </h:Interaction.Behaviors>
                                </TextBox>
                            </local:Row>
                            <local:FScrollView x:Name="_tv_scrollviewer_"
                                               Padding="{TemplateBinding Padding}"
                                               Background="{TemplateBinding Background}"
                                               CanContentScroll="false"
                                               Focusable="false"
                                               HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter />
                            </local:FScrollView>
                        </DockPanel>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Material, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.MaterialDynamic}}" TargetType="{x:Type TreeView}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Material.Single, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.Material}}" TargetType="{x:Type TreeView}">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Material.Accent, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.Material}}" TargetType="{x:Type TreeView}">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.Material.Menu, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static h:TreeViewKeys.MaterialDynamic}}" TargetType="{x:Type TreeView}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static h:TreeViewItemKeys.MaterialMenu}}" />
        <Setter Property="h:Cattach.Dock" Value="Right" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{x:Null}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentSelectForeground}}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentSelectBackground}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeView.ComboBox, TypeInTargetAssembly={x:Type local:TreeViewKeys}}" BasedOn="{StaticResource {x:Static local:TreeViewKeys.MaterialDynamic}}" TargetType="{x:Type TreeView}">
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="h:Cattach.IconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Small}}" />
        <Setter Property="h:Cattach.ItemHeight" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="h:Cattach.ItemsContianerWidth" Value="Auto" />
        <Setter Property="h:Cattach.Icon" Value="&#xe6ed;" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Bg"
                                        Grid.Column="{TemplateBinding h:Cattach.BackgroundColumn}"
                                        Grid.ColumnSpan="8"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Border x:Name="boder_mouseover"
                                        Grid.Column="{TemplateBinding h:Cattach.BackgroundColumn}"
                                        Grid.ColumnSpan="8"
                                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                        Opacity="0"
                                        Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseBackground), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                                <Border x:Name="boder"
                                        Grid.Column="{TemplateBinding h:Cattach.BackgroundColumn}"
                                        Grid.ColumnSpan="8"
                                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectBackground)}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                        Opacity="0"
                                        Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseBackground), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}" />

                                <ContentControl x:Name="Label"
                                                Margin="1,1,0,1"
                                                Background="{TemplateBinding BorderBrush}"
                                                Content="{TemplateBinding h:Cattach.Title}"
                                                Foreground="{TemplateBinding Foreground}"
                                                IsHitTestVisible="False"
                                                IsTabStop="False"
                                                Template="{TemplateBinding h:Cattach.TitleTemplate}" />

                                <TextBlock x:Name="ficon"
                                           Grid.Column="1"
                                           Margin="{TemplateBinding h:Cattach.IconMargin}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="{TemplateBinding h:Cattach.IconSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                           Text="{TemplateBinding h:Cattach.Icon}" />

                                <Border Grid.Column="3"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Panel.ZIndex="2">
                                    <ContentControl x:Name="PART_AttachContent"
                                                    VerticalAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                                                    Template="{TemplateBinding h:Cattach.AttachContent}" />
                                </Border>

                                <ToggleButton Grid.Column="1"
                                              Grid.ColumnSpan="55"
                                              HorizontalAlignment="Stretch"
                                              Background="Transparent"
                                              IsChecked="{Binding ElementName=PART_DropDownToggle, Path=IsChecked}"
                                              Style="{x:Null}">
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Grid Background="Transparent" />
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <Border Grid.Column="4" Width="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" HorizontalAlignment="Center">
                                    <ToggleButton x:Name="PART_DropDownToggle"
                                                  HorizontalAlignment="Center"
                                                  h:Cattach.IconSize="15"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsTabStop="False"
                                                  Style="{DynamicResource {x:Static h:ToggleButtonKeys.ComboBox}}" />
                                </Border>

                                <Border Grid.Column="2">
                                    <TextBlock x:Name="Message"
                                               Margin="{TemplateBinding Padding}"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"
                                               IsHitTestVisible="False"
                                               Opacity="{DynamicResource {x:Static h:OpacityKeys.Watermark}}"
                                               Text="{TemplateBinding h:Cattach.Watermark}"
                                               TextAlignment="Center"
                                               Visibility="Collapsed" />
                                </Border>

                                <Border Grid.Column="2">
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <ContentPresenter HorizontalAlignment="Stretch"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Content="{TemplateBinding SelectedItem}"
                                                          ContentTemplate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplate}"
                                                          IsHitTestVisible="False"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                            </Grid>

                            <Popup x:Name="PART_Popup"
                                   Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.ItemsContianerWidth)}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{Binding ElementName=PART_DropDownToggle, Path=IsChecked}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=Bg}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False"
                                   VerticalOffset="0">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                    <DockPanel>
                                        <local:Row Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchHeight)}"
                                                   Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchMargin)}"
                                                   HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchHorizontalAlignment)}"
                                                   VerticalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchVerticalAlignment)}"
                                                   DockPanel.Dock="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchDock)}">
                                            <TextBox x:Name="tb_search"
                                                     Grid.ColumnSpan="12"
                                                     Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchWidth)}"
                                                     h:Cattach.IsUseHistory="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SearchUseHistory)}"
                                                     Style="{DynamicResource {x:Static local:TextBoxKeys.Search}}"
                                                     Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseSearch), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                                                <h:Interaction.Behaviors>
                                                    <h:SearchItemsControlTextBoxBehvior ItemsControl="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                </h:Interaction.Behaviors>
                                            </TextBox>
                                        </local:Row>
                                        <local:FScrollView x:Name="_tv_scrollviewer_"
                                                           Padding="{TemplateBinding Padding}"
                                                           Background="{TemplateBinding Background}"
                                                           CanContentScroll="false"
                                                           Focusable="false"
                                                           HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                           VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                            <ItemsPresenter />
                                        </local:FScrollView>
                                    </DockPanel>

                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="h:Cattach.ItemsContianerWidth" Value="Auto">
                            <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ActualWidth, ElementName=Bg}" />
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>