<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=S.DataTemplate.DataGridColumn.CheckAll.Header, TypeInTargetAssembly={x:Type local:DataGridTemplateColumnKeys}}">
        <CheckBox Command="{x:Static h:Commander.CheckAll}"
                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                  Content="{Binding}"
                  Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}" />
    </DataTemplate>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=S.DataTemplate.DataGridColumn.CheckAll.Cell, TypeInTargetAssembly={x:Type local:DataGridTemplateColumnKeys}}">
        <DockPanel>
            <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock VerticalAlignment="Center">
                <h:Interaction.Behaviors>
                    <h:DataGridRowIndexBehavior DataGridRow="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                </h:Interaction.Behaviors>
            </TextBlock>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=S.DataTemplate.DataGridColumn.Operation, TypeInTargetAssembly={x:Type local:DataGridTemplateColumnKeys}}">
        <DockPanel>
            <Button Width="Auto"
                    Height="Auto"
                    Padding="2"
                    Command="{Binding Source={x:Static h:Commander.View}}"
                    CommandParameter="{Binding}"
                    Content="查看" />
            <Button Width="Auto"
                    Height="Auto"
                    Margin="2,0"
                    Padding="2"
                    h:Cattach.Icon=""
                    Command="{Binding Source={x:Static h:Commander.Edit}}"
                    CommandParameter="{Binding}"
                    Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}" />
            <Button Width="Auto"
                    Height="Auto"
                    Padding="2"
                    h:Cattach.Icon=""
                    Command="{Binding Source={x:Static h:Commander.Delete}}"
                    CommandParameter="{Binding}"
                    Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}" />
        </DockPanel>
    </DataTemplate>

    <Style x:Key="S.DataGrid.HeaderGripper.Default" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Margin="0,0,0,2" Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle Width="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.DataGrid.DataGridColumnHeader.Default" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=ColumnHeaderHeight}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.CaptionForeground)}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.ItemPadding)}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="BorderThickness" Value="1,0,1,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="BackgroundBorder"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CornerRadius)}" />

                        <ContentPresenter x:Name="HeaderContent"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <TextBlock x:Name="SortArrow"
                                   Grid.Column="1"
                                   Margin="0,1,0,-3"
                                   VerticalAlignment="Center"
                                   FontSize="10"
                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                   Text="&#xe8af;"
                                   Visibility="Hidden" />

                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               HorizontalContentAlignment="Left"
                               Style="{StaticResource S.DataGrid.HeaderGripper.Default}" />

                        <Thumb x:Name="PART_RightHeaderGripper"
                               Grid.Column="1"
                               HorizontalAlignment="Right"
                               HorizontalContentAlignment="Right"
                               Background="Transparent"
                               Style="{StaticResource S.DataGrid.HeaderGripper.Default}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="Text" Value="&#xe8ae;" />
                        </Trigger>

                        <Trigger Property="DisplayIndex" Value="2">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGridRow.Default, TypeInTargetAssembly={x:Type local:DataGridRowKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Item}}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=RowHeight}" />
        <Setter Property="h:Cattach.IsSelected" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="h:Cattach.IsSelected" Value="False" />
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=AlternatingRowBackground}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGridRow.Clear, TypeInTargetAssembly={x:Type local:DataGridRowKeys}}" BasedOn="{StaticResource {x:Static local:DataGridRowKeys.Default}}" TargetType="{x:Type DataGridRow}" />

    <Style x:Key="S.DataGrid.RowHeaderGripper.Default" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.DataGrid.DataGridRowHeader.Default" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               VerticalContentAlignment="Top"
                               Background="Transparent"
                               Style="{StaticResource S.DataGrid.RowHeaderGripper.Default}" />

                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               VerticalContentAlignment="Bottom"
                               Style="{StaticResource S.DataGrid.RowHeaderGripper.Default}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.DataGrid.DataGridCell.Default" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.ItemHorizontalContentAlignment)}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.ItemVerticalContentAlignment)}" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.ItemPadding)}" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGrid.Dynamic, TypeInTargetAssembly={x:Type local:DataGridKeys}}" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="{x:Type DataGrid}">
        <Setter Property="MinRowHeight" Value="25" />
        <Setter Property="RowHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="ColumnHeaderHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource S.DataGrid.DataGridColumnHeader.Default}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource S.DataGrid.DataGridRowHeader.Default}" />
        <Setter Property="CellStyle" Value="{StaticResource S.DataGrid.DataGridCell.Default}" />
        <Setter Property="RowStyle" Value="{StaticResource {x:Static local:DataGridRowKeys.Default}}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ColumnWidth" Value="*" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundRowIndex}}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="h:Cattach.ItemPadding" Value="10,0,0,0" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                    <Setter Property="Width" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <local:FScrollView x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="col_rowheader" Width="0" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Border Grid.Column="0"
                                                Grid.ColumnSpan="9"
                                                Background="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.CaptionBackground)}"
                                                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=(h:Cattach.CaptionCornerRadius)}" />

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Grid.ColumnSpan="2"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        </Grid>

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="0"
                                                   Grid.RowSpan="3"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />


                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Grid.Row="2"
                                                   Grid.Column="0"
                                                   Grid.ColumnSpan="2"
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Orientation="Horizontal"
                                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </local:FScrollView>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGrid.Default, TypeInTargetAssembly={x:Type local:DataGridKeys}}" BasedOn="{StaticResource {x:Static local:DataGridKeys.Dynamic}}" TargetType="{x:Type DataGrid}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGrid.Single, TypeInTargetAssembly={x:Type local:DataGridKeys}}" BasedOn="{StaticResource {x:Static h:DataGridKeys.Default}}" TargetType="DataGrid">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGrid.Accent, TypeInTargetAssembly={x:Type local:DataGridKeys}}" BasedOn="{StaticResource {x:Static h:DataGridKeys.Default}}" TargetType="DataGrid">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGrid.Clear, TypeInTargetAssembly={x:Type local:DataGridKeys}}" BasedOn="{StaticResource {x:Static h:DataGridKeys.Single}}" TargetType="DataGrid">
        <Setter Property="h:Cattach.StyleType" Value="Clear" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DataGrid.Vertical.Default, TypeInTargetAssembly={x:Type local:DataGridKeys}}" BasedOn="{StaticResource {x:Static h:DataGridKeys.Default}}" TargetType="DataGrid">
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="GridLinesVisibility" Value="Vertical" />
        <Setter Property="h:Cattach.ItemPadding" Value="0,0,0,0" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static local:DataGridRowKeys.Default}}" TargetType="DataGridRow" />
            </Setter.Value>
        </Setter>

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource S.DataGrid.DataGridColumnHeader.Default}" TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=ColumnHeaderHeight}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90" />
                                        </TransformGroup>
                                    </Grid.RenderTransform>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="BackgroundBorder"
                                            Grid.ColumnSpan="2"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />

                                    <ContentPresenter x:Name="HeaderContent"
                                                      Grid.ColumnSpan="2"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <TextBlock x:Name="SortArrow"
                                               Grid.Column="1"
                                               Margin="0,0,10,0"
                                               VerticalAlignment="Center"
                                               FontSize="10"
                                               Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                               Text="&#xe8af;"
                                               Visibility="Hidden" />

                                    <Thumb x:Name="PART_LeftHeaderGripper"
                                           HorizontalAlignment="Left"
                                           HorizontalContentAlignment="Left"
                                           Style="{StaticResource S.DataGrid.HeaderGripper.Default}" />

                                    <Thumb x:Name="PART_RightHeaderGripper"
                                           Grid.Column="1"
                                           HorizontalAlignment="Right"
                                           HorizontalContentAlignment="Right"
                                           Background="Transparent"
                                           Style="{StaticResource S.DataGrid.HeaderGripper.Default}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="CanUserSort" Value="True">
                                        <Setter Property="Cursor" Value="Hand" />
                                    </Trigger>



                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    </Trigger>


                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="SortArrow" Property="Text" Value="&#xe8ae;" />
                                    </Trigger>


                                    <Trigger Property="DisplayIndex" Value="2">
                                        <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="CellStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource S.DataGrid.DataGridCell.Default}" TargetType="DataGridCell">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      RenderTransformOrigin="0.5,0.5"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="90" />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>


                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="-90" />
            </Setter.Value>
        </Setter>
        <Setter Property="CanUserAddRows" Value="False" />
    </Style>
</ResourceDictionary>