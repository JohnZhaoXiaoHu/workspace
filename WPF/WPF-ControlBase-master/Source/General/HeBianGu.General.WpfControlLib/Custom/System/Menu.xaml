<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="CheckedGeometry">M 0,2 3,5 8,0</Geometry>
    <Geometry x:Key="RightGeometry">M4.1666641,0 C5.2083321,0 6.25,0.41666794 7.0833321,1.25 L57.083331,46.666664 C57.916664,47.499998 58.33333,48.749998 58.333329,49.999998 58.33333,51.249997 57.916664,52.499997 57.083331,53.333331 L7.0833321,98.749996 C5.4166641,100.41666 2.9166641,100.41666 1.2499962,98.749996 -0.41666794,97.083328 -0.41666794,94.583328 1.2499962,92.916664 L48.333331,49.999998 1.2499962,7.0833321 C-0.41666794,5.4166641 -0.41666794,2.9166641 1.2499962,1.25 2.0833282,0.41666794 3.1249962,0 4.1666641,0 z</Geometry>
    <Style x:Key="{ComponentResourceKey ResourceId=S.MenuItem.Handy, TypeInTargetAssembly={x:Type local:MenuItemKeys}}" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="MenuItem">
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:ThicknessKeys.Padding_10_6}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid MinWidth="240">
                        <Border x:Name="Bd"
                                Grid.ColumnSpan="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="True" />

                        <Border x:Name="boder_mouseover"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Opacity="0" />

                        <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>


                            <ContentPresenter x:Name="Icon"
                                              Width="16"
                                              Height="16"
                                              Margin="0,0,10,0"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <Border x:Name="GlyphPanel"
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Background="{DynamicResource PrimaryBrush}"
                                    ClipToBounds="False"
                                    CornerRadius="2"
                                    IsHitTestVisible="False"
                                    Visibility="Hidden">
                                <TextBlock Margin="0,0,0,3"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                           Text="&#xe624;" />
                            </Border>

                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="0,3,0,0"
                                              ContentSource="Header"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <TextBlock x:Name="InputGestureText"
                                       Grid.Column="3"
                                       Margin="0,0,10,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding InputGestureText}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  第一级  -->
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.CaptionBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.CaptionForeground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.CaptionBorderBrush)}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="templateRoot"
                                    MinWidth="44"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                    SnapsToDevicePixels="True">
                                <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="Icon"
                                                      Width="16"
                                                      Height="16"
                                                      Margin="0,0,10,0"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Visibility="Collapsed" />

                                    <Border x:Name="GlyphPanel"
                                            Grid.Column="0"
                                            Width="16"
                                            Height="16"
                                            Margin="0,0,10,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource PrimaryBrush}"
                                            ClipToBounds="False"
                                            CornerRadius="2"
                                            Visibility="Collapsed">
                                        <Path Width="12"
                                              Height="12"
                                              Data="{StaticResource CheckedGeometry}"
                                              Stretch="Uniform"
                                              Stroke="{DynamicResource TextIconBrush}"
                                              StrokeThickness="2"
                                              UseLayoutRounding="True" />
                                    </Border>

                                    <ContentPresenter x:Name="menuHeaderContainer"
                                                      Grid.Column="1"
                                                      ContentSource="Header"
                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <Popup x:Name="PART_Popup"
                                           Grid.Column="0"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Bottom"
                                           PlacementTarget="{Binding ElementName=templateRoot}"
                                           VerticalOffset="6">
                                        <Grid>
                                            <Polygon Margin="25,2"
                                                     HorizontalAlignment="Left"
                                                     Fill="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=(h:Cattach.MouseOverBackground)}"
                                                     FillRule="Nonzero"
                                                     Points="0,5 5,0 10,5 0,5"
                                                     Stroke="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                                            <StackPanel>
                                                <Border x:Name="SubMenuBorder"
                                                        Margin="0,6"
                                                        Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                                        BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                                        BorderThickness="1"
                                                        CornerRadius="{TemplateBinding h:Cattach.CornerRadius}">
                                                    <!--<ScrollViewer Margin="0,6">-->
                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                    Grid.IsSharedSizeScope="True"
                                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <!--</ScrollViewer>-->
                                                </Border>

                                                <Border Width="{Binding ActualWidth, ElementName=templateRoot}"
                                                        Height="1"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Top"
                                                        Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                                        BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                                        BorderThickness="1,1" />
                                            </StackPanel>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.MouseOverBorderBrush)}" />
                                    <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.MouseOverBackground)}" />
                                    <Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.MouseOverForeground)}" />
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen" Value="True">
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.SelectBorderBrush)}" />
                                    <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.SelectBackground)}" />
                                    <Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=(h:Cattach.SelectForeground)}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  最后一级 叶节点  -->
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="templateRoot"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                    SnapsToDevicePixels="True">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="Icon"
                                                      Width="16"
                                                      Height="16"
                                                      Margin="0,0,10,0"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Visibility="Collapsed" />

                                    <Border x:Name="GlyphPanel"
                                            Grid.Column="0"
                                            Width="16"
                                            Height="16"
                                            Margin="0,0,10,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource {x:Static h:BrushKeys.Accent}}"
                                            ClipToBounds="False"
                                            CornerRadius="2"
                                            IsHitTestVisible="False"
                                            Visibility="Collapsed">
                                        <Path Width="12"
                                              Height="12"
                                              Data="{StaticResource CheckedGeometry}"
                                              Stretch="Uniform"
                                              Stroke="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                                              StrokeThickness="2"
                                              UseLayoutRounding="True" />
                                    </Border>

                                    <ContentPresenter x:Name="menuHeaderContainer"
                                                      Grid.Column="1"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Header"
                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}" />
                                    <Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverForeground)}" />
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen" Value="True">
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectBackground)}" />
                                    <Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectForeground)}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True" />
                                        <Condition Property="IsEnabled" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="#0A000000" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#21000000" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  第二级  -->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="templateRoot"
                                    MinWidth="240"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                    SnapsToDevicePixels="True">
                                <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                                      Width="16"
                                                      Height="16"
                                                      Margin="0,0,10,0"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Border x:Name="GlyphPanel"
                                            Grid.Column="0"
                                            Width="16"
                                            Height="16"
                                            Margin="0,0,10,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource PrimaryBrush}"
                                            ClipToBounds="False"
                                            CornerRadius="2"
                                            IsHitTestVisible="False"
                                            Visibility="Hidden">
                                        <Path Width="12"
                                              Height="12"
                                              Data="{StaticResource CheckedGeometry}"
                                              Stretch="Uniform"
                                              Stroke="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
                                              StrokeThickness="2"
                                              UseLayoutRounding="True" />
                                    </Border>
                                    <ContentPresenter x:Name="menuHeaderContainer"
                                                      Grid.Column="1"
                                                      Margin="0,3,0,0"
                                                      ContentSource="Header"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextElement.Foreground="{TemplateBinding Foreground}" />

                                    <Path x:Name="Path"
                                          Grid.Column="4"
                                          Width="10"
                                          Height="10"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource RightGeometry}"
                                          Fill="{TemplateBinding Foreground}"
                                          Stretch="Uniform" />

                                    <Popup x:Name="PART_Popup"
                                           Grid.Column="1"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           HorizontalOffset="18"
                                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Right"
                                           VerticalOffset="-10">
                                        <Grid Margin="10,6">
                                            <Border x:Name="SubMenuBorder"
                                                    Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                                                    BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                                    BorderThickness="1"
                                                    CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                                                <!--<ScrollViewer Margin="0,6">-->
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                Grid.IsSharedSizeScope="True"
                                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <!--</ScrollViewer>-->
                                            </Border>

                                            <Polygon Margin="-5,15"
                                                     HorizontalAlignment="Left"
                                                     Fill="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=(h:Cattach.MouseOverBackground)}"
                                                     FillRule="Nonzero"
                                                     Points="5,0 0,5 5,10 5,0"
                                                     Stroke="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}" />
                                    <Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverForeground)}" />
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen" Value="True">
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectBackground)}" />
                                    <Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectForeground)}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.MenuItem.Icon, TypeInTargetAssembly={x:Type local:MenuItemKeys}}" BasedOn="{StaticResource {x:Static h:MenuItemKeys.Handy}}" TargetType="MenuItem">
        <Setter Property="h:Cattach.IconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Normal}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="True" />

                        <Border x:Name="boder_mouseover"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Opacity="0" />

                        <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="Icon"
                                       Margin="0,0,10,0"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconSize)}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                       Text="{TemplateBinding Icon}" />

                            <Border x:Name="GlyphPanel"
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Background="{DynamicResource PrimaryBrush}"
                                    ClipToBounds="False"
                                    CornerRadius="2"
                                    IsHitTestVisible="False"
                                    Visibility="Hidden">
                                <TextBlock Margin="0,0,0,3"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                           Text="&#xe624;" />
                            </Border>

                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="0,3,0,0"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <TextBlock x:Name="InputGestureText"
                                       Grid.Column="3"
                                       Margin="0,0,10,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding InputGestureText}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.MenuItem.Caption, TypeInTargetAssembly={x:Type local:MenuItemKeys}}" BasedOn="{StaticResource {x:Static h:MenuItemKeys.Handy}}" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Command" Value="{Binding RelayCommand}" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=(h:Cattach.CaptionForeground)}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=(h:Cattach.CaptionForeground)}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity1}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity1}}" />

        <Setter Property="h:Cattach.SelectBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity3}}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity3}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=(h:Cattach.CaptionForeground)}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Menu.Dynamic, TypeInTargetAssembly={x:Type local:MenuKeys}}" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Static h:MenuItemKeys.Icon}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Menu.Window, TypeInTargetAssembly={x:Type local:MenuKeys}}" BasedOn="{StaticResource {x:Static h:MenuKeys.Dynamic}}" TargetType="Menu">
        <Setter Property="h:Cattach.CaptionBackground" Value="Transparent" />
        <Setter Property="h:Cattach.CaptionForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CaptionForeground}" />
        <Setter Property="h:Cattach.CaptionBorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity2}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CaptionForeground}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity3}}" />
        <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.SelectForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CaptionForeground}" />
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=S.Menu.Handy, TypeInTargetAssembly={x:Type local:MenuKeys}}" BasedOn="{StaticResource {x:Static h:MenuKeys.Dynamic}}" TargetType="Menu">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Menu.Default, TypeInTargetAssembly={x:Type local:MenuKeys}}" BasedOn="{StaticResource {x:Static h:MenuKeys.Handy}}" TargetType="Menu" />

    <Style x:Key="{ComponentResourceKey ResourceId=S.Menu.Single, TypeInTargetAssembly={x:Type local:MenuKeys}}" BasedOn="{StaticResource {x:Static h:MenuKeys.Handy}}" TargetType="Menu">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Menu.Accent, TypeInTargetAssembly={x:Type local:MenuKeys}}" BasedOn="{StaticResource {x:Static h:MenuKeys.Handy}}" TargetType="Menu">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ContextMenu.Dynamic, TypeInTargetAssembly={x:Type local:ContextMenuKeys}}" BasedOn="{StaticResource {x:Static local:SelectorKeys.Dynamic}}" TargetType="{x:Type ContextMenu}">
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Static local:MenuItemKeys.Icon}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Margin="0,5">
                        <Border x:Name="Border"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <ItemsPresenter x:Name="ItemsPresenter"
                                            Margin="{TemplateBinding Padding}"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default2}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=S.ContextMenu.Handy, TypeInTargetAssembly={x:Type local:ContextMenuKeys}}" BasedOn="{StaticResource {x:Static h:ContextMenuKeys.Dynamic}}" TargetType="{x:Type ContextMenu}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ContextMenu.Default, TypeInTargetAssembly={x:Type local:ContextMenuKeys}}" BasedOn="{StaticResource {x:Static h:ContextMenuKeys.Handy}}" TargetType="{x:Type ContextMenu}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ContextMenu.Single, TypeInTargetAssembly={x:Type local:ContextMenuKeys}}" BasedOn="{StaticResource {x:Static h:ContextMenuKeys.Handy}}" TargetType="{x:Type ContextMenu}">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ContextMenu.Accent, TypeInTargetAssembly={x:Type local:ContextMenuKeys}}" BasedOn="{StaticResource {x:Static h:ContextMenuKeys.Handy}}" TargetType="{x:Type ContextMenu}">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

</ResourceDictionary>