<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="S.PasswordBox.Template.Default" TargetType="{x:Type PasswordBox}">
        <Grid x:Name="PART_Root">
            <Border x:Name="Bg"
                    Grid.Column="0"
                    Grid.ColumnSpan="8"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />
            <Grid x:Name="PART_InnerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ContentControl x:Name="Label" Content="{TemplateBinding h:Cattach.Title}" Template="{TemplateBinding h:Cattach.TitleTemplate}" />

                <TextBlock x:Name="ficon"
                           Grid.Column="1"
                           Margin="{TemplateBinding h:Cattach.IconMargin}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="{TemplateBinding h:Cattach.IconSize}"
                           Foreground="{TemplateBinding Foreground}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="{TemplateBinding h:Cattach.Icon}" />
                <ScrollViewer x:Name="PART_ContentHost"
                              Grid.Column="2"
                              Margin="2"
                              VerticalAlignment="Stretch"
                              Background="{x:Null}"
                              BorderThickness="0"
                              IsTabStop="False" />
                <TextBlock x:Name="Message"
                           Grid.Column="2"
                           Margin="5,2,5,2"
                           Padding="{TemplateBinding Padding}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           IsHitTestVisible="False"
                           Opacity="{DynamicResource {x:Static h:OpacityKeys.Watermark}}"
                           Text="{TemplateBinding h:Cattach.Watermark}"
                           Visibility="Collapsed" />
                <Border Grid.Column="3"
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                    <ContentControl x:Name="PART_AttachContent"
                                    VerticalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}"
                                    Template="{TemplateBinding h:Cattach.AttachContent}" />
                </Border>
            </Grid>

            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsHitTestVisible="False"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=Bg}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   VerticalOffset="10"
                   Visibility="Collapsed">
                <Grid Width="{Binding ActualWidth, ElementName=Bg}"
                      MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"
                      Margin="0,10,0,0"
                      HorizontalAlignment="Stretch">
                    <Polygon Margin="10,-5,8,0"
                             HorizontalAlignment="Right"
                             Fill="{DynamicResource {x:Static h:BrushKeys.Red}}"
                             FillRule="Nonzero"
                             Points="0,5 5,0 10,5 0,5" />
                    <Border MinHeight="{DynamicResource {x:Static h:SystemKeys.RowHeight}}"
                            Background="{DynamicResource {x:Static h:BrushKeys.Red}}"
                            CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                            IsHitTestVisible="False">
                        <TextBlock Margin="8,5,8,6"
                                   VerticalAlignment="Center"
                                   Foreground="White"
                                   Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(Validation.Errors)[0].ErrorContent}"
                                   TextWrapping="Wrap" />
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Validation.HasError" Value="True" />
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Popup" Property="IsOpen" Value="True" />
                <Setter TargetName="PART_Popup" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Default  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Default, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Template" Value="{StaticResource S.PasswordBox.Template.Default}" />
        <Setter Property="h:Cattach.IsMouseOver" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" />
        <Setter Property="h:Cattach.IsKeyboardFocusWithin" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsKeyboardFocusWithin}" />
        <Setter Property="h:Cattach.HasError" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Validation.HasError)}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Clear, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Default}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.AttachContent" Value="{DynamicResource {x:Static local:ShareKeys.ClearTemplate}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.Label, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Default}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static local:ShareKeys.TitleTemplate}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PasswordBox.LabelClear, TypeInTargetAssembly={x:Type local:PasswordBoxKeys}}" BasedOn="{StaticResource {x:Static h:PasswordBoxKeys.Default}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="h:Cattach.AttachContent" Value="{DynamicResource {x:Static local:ShareKeys.ClearTemplate}}" />
        <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static local:ShareKeys.TitleTemplate}}" />
    </Style>
</ResourceDictionary>