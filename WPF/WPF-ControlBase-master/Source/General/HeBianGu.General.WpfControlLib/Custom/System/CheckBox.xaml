<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Dynamic, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.ToggleButton}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.CheckedIcon" Value="&#xe624;" />
        <Setter Property="h:Cattach.UncheckedIcon" Value="&#xe6ac;" />
        <Setter Property="h:Cattach.Icon" Value="&#xe62b;" />
        <Setter Property="Template" Value="{DynamicResource {x:Static local:ControlTemplateKeys.ContentControlIcon}}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Default, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:CheckBoxKeys.Dynamic}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.StyleType" Value="Default" />

    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Label, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:CheckBoxKeys.Dynamic}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static local:ShareKeys.TitleTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {x:Static local:ControlTemplateKeys.ContentControlTitle}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Single, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:CheckBoxKeys.Default}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Single.Label, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:CheckBoxKeys.Single}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static local:ShareKeys.TitleTemplate}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Accent, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:CheckBoxKeys.Default}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Accent.Label, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static local:CheckBoxKeys.Accent}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static local:ShareKeys.TitleTemplate}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Box, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static h:ControlKeys.ForegroundChecked}}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="h:Cattach.CheckedIcon" Value="&#xe627;" />
        <Setter Property="h:Cattach.UncheckedIcon" Value="" />
        <Setter Property="h:Cattach.IconMargin" Value="0,0,-5,-8" />
        <Setter Property="h:Cattach.ItemHorizontalContentAlignment" Value="Right" />
        <Setter Property="h:Cattach.ItemVerticalContentAlignment" Value="Bottom" />
        <Setter Property="h:Cattach.CheckedBorderThickness" Value="1" />
        <Setter Property="h:Cattach.UnCheckedBorderThickness" Value="1" />
        <Setter Property="h:Cattach.IsChecked" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />


        <Setter Property="h:Cattach.CheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CheckedBorderThickness" Value="1" />

        <Setter Property="h:Cattach.UncheckForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.UncheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="h:Cattach.UnCheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.UnCheckedBorderThickness" Value="1" />
        <Setter Property="Template" Value="{DynamicResource {x:Static local:ControlTemplateKeys.ContentControlBox}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Box.Single, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static h:CheckBoxKeys.Box}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.StyleType" Value="Single" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.CheckBox.Box.Accent, TypeInTargetAssembly={x:Type local:CheckBoxKeys}}" BasedOn="{StaticResource {x:Static h:CheckBoxKeys.Box}}" TargetType="{x:Type CheckBox}">
        <Setter Property="h:Cattach.StyleType" Value="Accent" />
    </Style>

</ResourceDictionary>