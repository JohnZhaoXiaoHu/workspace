<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">
    <FontFamily x:Key="{ComponentResourceKey ResourceId=S.FontFamily.Icon, TypeInTargetAssembly={x:Type local:TextBlockKeys}}">
        /HeBianGu.Base.WpfBase;component/Resources/#HBG
    </FontFamily>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Icon, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/HeBianGu.Base.WpfBase;component/Resources/#HBG" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconMargin)}" />
        <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.IconSize)}" />
        <Setter Property="h:Cattach.Icon" Value="&#xe79c;" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Default, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Title, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Width" Value="{DynamicResource {x:Static h:SystemKeys.TitleWidth}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Binding, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Foreground}" />
        <Setter Property="FontSize" Value="{Binding FontSize}" />
        <Setter Property="Text" Value="{Binding Text}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily}" />
        <Setter Property="FontStretch" Value="{Binding FontStretch}" />
        <Setter Property="FontWeight" Value="{Binding FontWeight}" />
        <Setter Property="FontStyle" Value="{Binding FontStyle}" />
        <Setter Property="Opacity" Value="{Binding Opacity}" />
        <Setter Property="Height" Value="{Binding Height}" />
        <Setter Property="Margin" Value="{Binding Margin}" />
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={x:Static h:Converter.GetTrueToVisible}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment}" />
        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment}" />
        <Setter Property="Padding" Value="{Binding Padding}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.FontSize.18, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.FontSize.16, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.FontSize.14, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.FontSize, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="FontSize"
                                         From="5" To="50"
                                         Duration="0:0:2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.FontSize.BounceEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="FontSize"
                                         From="5" To="50"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <BounceEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.FontSize.BackEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="FontSize"
                                         From="5" To="50"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <BackEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.FontSize.ElasticEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="FontSize"
                                         From="5" To="50"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <ElasticEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Opacity, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1" To="0"
                                         Duration="0:0:2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Opacity.BackEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1" To="0"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <BackEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Opacity.CubicEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1" To="0"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Opacity.ElasticEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1" To="0"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <ElasticEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Opacity.BounceEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1" To="0"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <BounceEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Color, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <ColorAnimation RepeatBehavior="Forever"
                                        Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                        From="Green"
                                        To="#ED4646"
                                        Duration="0:0:2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Color.ElasticEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <ColorAnimation AutoReverse="True"
                                        RepeatBehavior="Forever"
                                        Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                        From="Green"
                                        To="#ED4646"
                                        Duration="0:0:2">
                            <ColorAnimation.EasingFunction>
                                <ElasticEase />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Color.CubicEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <ColorAnimation AutoReverse="True"
                                        RepeatBehavior="Forever"
                                        Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                        From="Green"
                                        To="#ED4646"
                                        Duration="0:0:2">
                            <ColorAnimation.EasingFunction>
                                <CubicEase />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Color.BounceEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <ColorAnimation RepeatBehavior="Forever"
                                        Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                        From="Green"
                                        To="#ED4646"
                                        Duration="0:0:2">
                            <ColorAnimation.EasingFunction>
                                <BounceEase />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Color.BackEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <ColorAnimation RepeatBehavior="Forever"
                                        Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                        From="Green"
                                        To="#ED4646"
                                        Duration="0:0:2">
                            <ColorAnimation.EasingFunction>
                                <BackEase />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Angle, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                         From="-30" To="0"
                                         Duration="0:0:2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Angle.BounceEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                         From="-30" To="0"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <BounceEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Angle.BackEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                         From="-30" To="0"
                                         Duration="0:0:2">
                            <DoubleAnimation.EasingFunction>
                                <BackEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Angle.ElasticEase, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                         From="-10" To="0"
                                         Duration="0:0:0.2">
                            <DoubleAnimation.EasingFunction>
                                <ElasticEase />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Translate.X, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                         From="500" To="-500"
                                         Duration="0:0:10" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Translate.X.ToRight, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                         From="-1000"
                                         To="1000"
                                         Duration="0:0:10" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Translate.X.ToLeft, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                         From="1000"
                                         To="-1000"
                                         Duration="0:0:10" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Translate.Y, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation AutoReverse="True"
                                         RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                         From="-30" To="30"
                                         Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Translate.Y.ToBottom, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                         From="-30" To="30"
                                         Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBlock.Animation.Translate.Y.ToTop, TypeInTargetAssembly={x:Type local:TextBlockKeys}}" BasedOn="{StaticResource {x:Static h:TextBlockKeys.Default}}" TargetType="TextBlock">
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Loaded">
                <BeginStoryboard>
                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                        <DoubleAnimation RepeatBehavior="Forever"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                         From="30" To="-30"
                                         Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>