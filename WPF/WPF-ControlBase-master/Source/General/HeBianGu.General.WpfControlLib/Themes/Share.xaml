<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.ControlTemplate.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Themes/Share.DataTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Control.Default, TypeInTargetAssembly={x:Type local:ControlKeys}}" TargetType="Control">
        <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.MouseOverBorderThickness" Value="1" />

        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.FocusForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />

        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.SelectBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

        <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.CheckedBackground" Value="{x:Null}" />
        <Setter Property="h:Cattach.CheckedBorderBrush" Value="{x:Null}" />
        <Setter Property="h:Cattach.CheckedBorderThickness" Value="0" />
        <Setter Property="h:Cattach.CheckedIcon" Value="&#xe624;" />
        <Setter Property="h:Cattach.CheckedOpacity" Value="1" />
        <Setter Property="h:Cattach.CheckedText" Value="" />

        <Setter Property="h:Cattach.UncheckForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.UncheckedBackground" Value="{x:Null}" />
        <Setter Property="h:Cattach.UnCheckedBorderBrush" Value="{x:Null}" />
        <Setter Property="h:Cattach.UnCheckedBorderThickness" Value="0" />
        <Setter Property="h:Cattach.UncheckedIcon" Value="&#xe6ac;" />
        <Setter Property="h:Cattach.UncheckedOpacity" Value="1" />
        <Setter Property="h:Cattach.UncheckedText" Value="" />

        <!--<Setter Property="h:Cattach.ChecknullForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.ChecknullBackground" Value="{x:Null}" />
        <Setter Property="h:Cattach.ChecknullBorderBrush" Value="{x:Null}" />
        <Setter Property="h:Cattach.ChecknullThickness" Value="0" />
        <Setter Property="h:Cattach.ChecknullIcon" Value="&#xe62b;" />
        <Setter Property="h:Cattach.ChecknullOpacity" Value="1" />
        <Setter Property="h:Cattach.ChecknullText" Value="" />-->

        <Setter Property="h:Cattach.AttachBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.AttachBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

        <Setter Property="h:Cattach.AttachHorizontalAlignment" Value="Left" />
        <Setter Property="h:Cattach.AttachVerticalAlignment" Value="Center" />
        <Setter Property="h:Cattach.AttachHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="h:Cattach.AttachMargin" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" />
        <Setter Property="h:Cattach.AttachWidth" Value="{DynamicResource {x:Static h:SystemKeys.TitleWidth}}" />

        <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.PressBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

        <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="h:Cattach.IconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Default}}" />
        <Setter Property="h:Cattach.IconMargin" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_2_0}}" />
        <Setter Property="h:Cattach.Icon" Value="&#xea5e;" />
        <Setter Property="h:Cattach.AllowsAnimation" Value="False" />
        <Setter Property="h:Cattach.Watermark" Value="请输入数据" />

        <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

        <Setter Property="h:Cattach.TitleHorizontalAlignment" Value="Left" />
        <Setter Property="h:Cattach.TitleVerticalAlignment" Value="Center" />
        <Setter Property="h:Cattach.TitleHeight" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="h:Cattach.TitleBorderThickness" Value="0" />
        <Setter Property="h:Cattach.TitleCornerRaius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.Left}}" />
        <Setter Property="h:Cattach.TitleMargin" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" />
        <Setter Property="h:Cattach.TitleWidth" Value="{DynamicResource {x:Static h:SystemKeys.TitleWidth}}" />

        <Setter Property="h:Cattach.CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.CaptionBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

        <Setter Property="h:Cattach.CaptionHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <Setter Property="h:Cattach.CaptionBorderThickness" Value="0" />
        <Setter Property="h:Cattach.CaptionCornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.Top}}" />
        <Setter Property="h:Cattach.CaptionHorizontalAlignment" Value="Left" />
        <Setter Property="h:Cattach.CaptionVerticalAlignment" Value="Stretch" />

        <Setter Property="h:Cattach.ItemBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="h:Cattach.ItemForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.ItemBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

        <Setter Property="h:Cattach.ItemHeight" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="h:Cattach.ItemBorderThickness" Value="0" />
        <Setter Property="h:Cattach.ItemCornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}" />
        <Setter Property="h:Cattach.ItemHorizontalAlignment" Value="Left" />

        <Setter Property="h:Cattach.ItemMargin" Value="0" />
        <Setter Property="h:Cattach.ItemPadding" Value="{DynamicResource {x:Static h:ThicknessKeys.Padding_10_6}}" />
        <Setter Property="h:Cattach.SearchDock" Value="Right" />
        <Setter Property="h:Cattach.SearchWidth" Value="150" />
        <Setter Property="h:Cattach.SearchUseHistory" Value="True" />
        <Setter Property="h:Cattach.UseSearch" Value="True" />

        <!--  Style  -->
        <Setter Property="h:Cattach.StyleType" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=StyleType}" />
        <Setter Property="h:Cattach.EffectType" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=EffectType}" />
        <Setter Property="h:Cattach.LayoutStyle" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=LayoutStyle}" />

        <Setter Property="h:Cattach.UseClear" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=UseClear}" />
        <Setter Property="h:Cattach.UseTitle" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=UseTitle}" />
        <Setter Property="h:Cattach.UseBackground" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=UseBackground}" />
        <Setter Property="h:Cattach.UseBorder" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=UseBorder}" />

        <Setter Property="h:Cattach.GuideData" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ToolTip}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.Title)}" />

        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_2_0}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        <Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static h:SystemKeys.FontFamily}}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="po:Freeze" Value="True"/>-->

        <!--  这样已经显示过的列表不会被重复创建和释放掉 需要测试  -->
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <!--  使用延迟滚动增强用户体验：如果你还记得可滚动的DataGrid或ListBox，它们往往会降低整个应用程序的性能，因为在滚动时会强制连续更新，这是默认的行为，在这种情况下，我们可以使用控件的延迟滚动(Deferred Scrolling)属性增强用户体验  -->
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Disable}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Control.Foreground.Selected, TypeInTargetAssembly={x:Type local:ControlKeys}}" TargetType="Control">
        <Setter Property="h:Cattach.StyleType" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=StyleType}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.MouseOverBorderThickness" Value="1" />

        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity1}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
        <Style.Triggers>
            <!--  Light  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Light">
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </DataTrigger>

            <!--  Single  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_3}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_5}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

            <!--  Reverse  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity2}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity4}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
            </DataTrigger>

            <!--  Clear  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_2}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_4}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

            <!--  Accent  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity2}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhiteOpacity4}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

            <!--  h:Cattach.IsMouseOver  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.IsMouseOver)}" Value="True">
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderBrush)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                <Setter Property="TextBlock.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderThickness)}" />
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverEffect)}" />
            </DataTrigger>

            <!--  h:Cattach.IsSelected  -->
            <Trigger Property="h:Cattach.IsSelected" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBorderThickness)}" />
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectEffect)}" />
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectedOpacity)}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Control.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Default}}" TargetType="Control">
        <Style.Triggers>
            <!--  Light  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Light">
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.FocusForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <!--  Single  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.FocusForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />

                <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.CaptionBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.AttachBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.AttachBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <!--  Reverse  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.FocusForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />

                <!--<Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />-->

                <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.CaptionBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.AttachBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.AttachBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <!--  Clear  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.FocusForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.TitleBackground" Value="Transparent" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.CaptionBackground" Value="Transparent" />
                <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.CaptionBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.AttachBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.AttachBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <!--  Accent  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />

                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.FocusForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.FocusBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                <!--<Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.TitleBorderBrush" Value="Transparent" />-->

                <Setter Property="h:Cattach.TitleBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.TitleBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

                <Setter Property="h:Cattach.CaptionBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.CaptionForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.CaptionBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.PressBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

                <Setter Property="h:Cattach.AttachBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.AttachBorderBrush" Value="Transparent" />
            </DataTrigger>

            <!--  MouseOverStyleType  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverStyleType}" Value="Accent" />
                </MultiDataTrigger.Conditions>
                <Setter Property="h:Cattach.StyleType" Value="Accent" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverStyleType}" Value="Single" />
                </MultiDataTrigger.Conditions>
                <Setter Property="h:Cattach.StyleType" Value="Single" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverStyleType}" Value="Default" />
                </MultiDataTrigger.Conditions>
                <Setter Property="h:Cattach.StyleType" Value="Default" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverStyleType}" Value="Reverse" />
                </MultiDataTrigger.Conditions>
                <Setter Property="h:Cattach.StyleType" Value="Reverse" />
            </MultiDataTrigger>

            <!--  UseClear  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UseClear)}" Value="True">
                <Setter Property="h:Cattach.AttachContent" Value="{DynamicResource {x:Static h:ShareKeys.ClearTemplate}}" />
            </DataTrigger>

            <!--  UseTitle  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UseTitle)}" Value="True">
                <Setter Property="h:Cattach.TitleTemplate" Value="{DynamicResource {x:Static h:ShareKeys.TitleTemplate}}" />
                <Setter Property="h:Cattach.TitleWidth" Value="{DynamicResource {x:Static h:SystemKeys.TitleWidth}}" />
                <Setter Property="h:Cattach.TitleMargin" Value="{DynamicResource {x:Static h:ThicknessKeys.Margin_10_0}}" />
                <Setter Property="h:Cattach.Title" Value="Title" />
            </DataTrigger>

            <!--  UseBackground  -->
            <!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UseBackground)}" Value="False">
                <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>-->

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UseBorder)}" Value="False" />
                    <Condition Value="False">
                        <Condition.Binding>
                            <Binding Converter="{x:Static h:XConverter.IsEqualConverter}" Path="(h:Cattach.LayoutStyle)">
                                <Binding.RelativeSource>
                                    <RelativeSource Mode="Self" />
                                </Binding.RelativeSource>
                                <Binding.ConverterParameter>
                                    <h:LayoutStyle>UnderLine</h:LayoutStyle>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>

                <Setter Property="h:Cattach.TitleBorderBrush" Value="Transparent" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />
                <Setter Property="h:Cattach.FocusBorderBrush" Value="Transparent" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
                <Setter Property="h:Cattach.PressBorderBrush" Value="Transparent" />
                <Setter Property="h:Cattach.AttachBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.MouseOverBorderThickness" Value="0" />
                <Setter Property="h:Cattach.FocusBorderThickness" Value="0" />
                <Setter Property="h:Cattach.TitleBorderThickness" Value="0" />
                <Setter Property="h:Cattach.SelectBorderThickness" Value="0" />
                <Setter Property="h:Cattach.PressBorderThickness" Value="0" />
                <Setter Property="h:Cattach.AttachBorderThickness" Value="0" />

                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </MultiDataTrigger>

            <!--  Layout Style  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.LayoutStyle)}" Value="Circle">
                <Setter Property="h:Cattach.CornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.Circle}}" />
                <Setter Property="h:Cattach.TitleCornerRaius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CircleLeft}}" />
                <Setter Property="h:Cattach.CaptionCornerRadius" Value="{DynamicResource {x:Static h:CornerRadiusKeys.CircleTop}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.LayoutStyle)}" Value="UnderLine">
                <Setter Property="h:Cattach.MouseOverBorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <Setter Property="h:Cattach.FocusBorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <Setter Property="h:Cattach.SelectBorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <Setter Property="h:Cattach.TitleBorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <Setter Property="h:Cattach.PressBorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <!--<Setter Property="BorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />-->
                <Setter Property="h:Cattach.AttachBorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <Setter Property="h:Cattach.CornerRadius" Value="0" />

                <Setter Property="BorderThickness" Value="{DynamicResource {x:Static h:ThicknessKeys.UnderLine}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <!--  EffectType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.EffectType)}" Value="Default1">
                <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default1}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.EffectType)}" Value="Default2">
                <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default2}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.EffectType)}" Value="Default3">
                <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default3}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.EffectType)}" Value="Default4">
                <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default4}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.EffectType)}" Value="Default5">
                <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default5}}" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverEffect)}" />
            </Trigger>

            <!--  MouseOverEffect  -->
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverEffect}" Value="Default1">
                <Setter Property="h:Cattach.MouseOverEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default1}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverEffect}" Value="Default2">
                <Setter Property="h:Cattach.MouseOverEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default2}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverEffect}" Value="Default3">
                <Setter Property="h:Cattach.MouseOverEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default3}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverEffect}" Value="Default4">
                <Setter Property="h:Cattach.MouseOverEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default4}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=MouseOverEffect}" Value="Default5">
                <Setter Property="h:Cattach.MouseOverEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default5}}" />
            </DataTrigger>

            <!--  SelectEffect  -->
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=SelectEffect}" Value="Default1">
                <Setter Property="h:Cattach.SelectEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default1}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=SelectEffect}" Value="Default2">
                <Setter Property="h:Cattach.SelectEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default2}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=SelectEffect}" Value="Default3">
                <Setter Property="h:Cattach.SelectEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default3}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=SelectEffect}" Value="Default4">
                <Setter Property="h:Cattach.SelectEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default4}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static h:StyleSetting.Instance}, Path=SelectEffect}" Value="Default5">
                <Setter Property="h:Cattach.SelectEffect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default5}}" />
            </DataTrigger>

            <!--  UsePressScale  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="h:Cattach.IsPressed" Value="True" />
                    <Condition Property="h:Cattach.UseMouseOverScale" Value="False" />
                    <Condition Property="h:Cattach.UsePressScale" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>


            <!--  UseMouseOverScale  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="h:Cattach.IsPressed" Value="False" />
                    <Condition Property="h:Cattach.UseMouseOverScale" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <!--  UseMouseOverScale_1_5  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="h:Cattach.UseMouseOverScale_1_5" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1.5" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1.5" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <!--  UseMouseOverOpacity  -->
            <!--
            <Trigger Property="h:Cattach.UseMouseOverOpacity" Value="True">
                <Setter Property="Opacity" Value="0.95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="h:Cattach.UseMouseOverOpacity" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.95" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>-->

            <Trigger Property="h:Cattach.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedBorderThickness)}" />
                <Setter Property="TextBlock.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedText)}" />
                <Setter Property="h:Cattach.Icon" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedIcon)}" />
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedOpacity)}" />
            </Trigger>

            <Trigger Property="h:Cattach.IsChecked" Value="False">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UnCheckedBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UnCheckedBorderThickness)}" />
                <Setter Property="TextBlock.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedText)}" />
                <Setter Property="h:Cattach.Icon" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedIcon)}" />
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedOpacity)}" />
            </Trigger>

            <Trigger Property="h:Cattach.IsChecked" Value="{x:Null}">
                <Setter Property="TextBlock.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.Icon)}" />
            </Trigger>

            <!--  h:Cattach.IsMouseOver  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.IsMouseOver)}" Value="True">
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderBrush)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                <Setter Property="TextBlock.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderThickness)}" />
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverEffect)}" />
            </DataTrigger>

            <!--  h:Cattach.IsKeyboardFocusWithin  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.IsKeyboardFocusWithin)}" Value="True">
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.FocusBorderBrush)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.FocusBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.FocusForeground)}" />
                <Setter Property="h:Cattach.TitleForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.FocusForeground)}" />
                <Setter Property="h:Cattach.AttachForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.FocusForeground)}" />
            </DataTrigger>

            <!--  h:Cattach.IsReadOnly  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.IsReadOnly)}" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:OpacityKeys.Readonly}}" />
                <!--<Setter Property="IsEnabled" Value="False"/>-->
            </DataTrigger>

            <!--  h:Cattach.HasError  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.HasError)}" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                <Setter Property="h:Cattach.Watermark" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Padding="0"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 StaysOpen="True">
                            <Border Height="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}"
                                    Background="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                    BorderBrush="Transparent"
                                    CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.CornerRadius}}">
                                <TextBlock Margin="10,0"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}"
                                           Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}">
                                    <Run Text="数据错误 ：" />
                                    <Run Text="{Binding RelativeSource={RelativeSource AncestorType=ToolTip}, Path=PlacementTarget.(Validation.Errors)[0].ErrorContent}" />
                                </TextBlock>
                            </Border>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <!--  h:Cattach.IsSelected  -->
            <Trigger Property="h:Cattach.IsSelected" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBorderThickness)}" />
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectEffect)}" />
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectedOpacity)}" />
            </Trigger>

            <!--  h:Cattach.AllowsAnimation  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="h:Cattach.AllowsAnimation" Value="true" />
                </MultiTrigger.Conditions>

                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Control.Foreground.Checked, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="Control">
        <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.CheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
        <Setter Property="h:Cattach.CheckedBorderThickness" Value="1" />

        <Setter Property="h:Cattach.UncheckForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="h:Cattach.UncheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
        <Setter Property="h:Cattach.UnCheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Setter Property="h:Cattach.UnCheckedBorderThickness" Value="0" />
        <Style.Triggers>
            <!--  Light  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Light">
                <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </DataTrigger>

            <!--  Single  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="h:Cattach.CheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.CheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </DataTrigger>

            <!--  Reverse  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="h:Cattach.CheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.CheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <!--  Clear  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="h:Cattach.CheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.CheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <!--  Accent  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="h:Cattach.CheckedBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.CheckedForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.CheckedBorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
            </DataTrigger>

            <Trigger Property="h:Cattach.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedBorderThickness)}" />
                <Setter Property="TextBlock.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedText)}" />
                <Setter Property="h:Cattach.Icon" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedIcon)}" />
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.CheckedOpacity)}" />
            </Trigger>

            <Trigger Property="h:Cattach.IsChecked" Value="False">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UnCheckedBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UnCheckedBorderThickness)}" />
                <Setter Property="TextBlock.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedText)}" />
                <Setter Property="h:Cattach.Icon" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedIcon)}" />
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.UncheckedOpacity)}" />
            </Trigger>

            <Trigger Property="h:Cattach.IsChecked" Value="{x:Null}">
                <Setter Property="TextBlock.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.Icon)}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Control.Foreground.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="Control">
        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
        <Setter Property="h:Cattach.UseTitle" Value="False" />

        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />

        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

        <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Style.Triggers>
            <!--  Light  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_1}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <!--<Setter Property="h:Cattach.IconMargin" Value="0" />-->
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
                <Setter Property="h:Cattach.PressBackground" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <!--<Setter Property="h:Cattach.IconMargin" Value="0" />-->
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity5}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <!--<Setter Property="h:Cattach.IconMargin" Value="0" />-->
            </DataTrigger>

            <!--  h:Cattach.IsMouseOver  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.IsMouseOver)}" Value="True">
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBorderBrush)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
            </DataTrigger>

            <!--  h:Cattach.IsPressed  -->
            <Trigger Property="h:Cattach.IsPressed" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.PressForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.PressBackground)}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.PressBorderBrush)}" />
                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.PressBorderThickness)}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ButtonBase.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static h:ControlKeys.ForegroundDynamic}}" TargetType="ButtonBase">
        <Setter Property="h:Cattach.IsPressed" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsPressed}" />
        <Setter Property="h:Cattach.IsMouseOver" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" />
        <Setter Property="h:Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" />
        <Setter Property="h:Cattach.UseMouseOverScale"  Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=UseMouseOverScale}"/>
        <Setter Property="h:Cattach.UsePressScale" Value="{Binding Source={x:Static h:StyleSetting.Instance}, Path=UsePressScale}" />
        <Setter Property="Template" Value="{DynamicResource {x:Static local:ControlTemplateKeys.ContentControlIcon}}" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ToggleButton.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.ButtonBase}}" TargetType="ToggleButton">
        <Setter Property="h:Cattach.MouseOverBackground" Value="{x:Null}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{x:Null}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        <!--<Setter Property="h:Cattach.SelectBackground" Value="{x:Null}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />-->
        <Setter Property="h:Cattach.PressBackground" Value="Transparent" />
        <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="h:Cattach.IsChecked" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {x:Static local:ControlTemplateKeys.ControlIconBackground}}" />
        <Style.Triggers>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Light">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBackground" Value="Transparent" />
                <Setter Property="h:Cattach.PressBackground" Value="Transparent" />
                <Setter Property="h:Cattach.SelectBackground" Value="Transparent" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                <Setter Property="h:Cattach.PressForeground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverForeground}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressBar.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" TargetType="Control">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Style.Triggers>
            <!--  Light  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
            </DataTrigger>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />

            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Range.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="Control">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
        <Style.Triggers>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
            </DataTrigger>

            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="MouseOver">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="MouseOver" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
            </MultiDataTrigger>-->

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ScrollViewer.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="Control">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity6}}" />
        <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentOpacity3}}" />
        <Setter Property="Tag" Value="Except" />
        <Style.Triggers>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
            </DataTrigger>

            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="MouseOver">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>-->


            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
                <Setter Property="h:Cattach.PressBackground" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_8}}" />
                <Setter Property="h:Cattach.FocusBackground" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Window.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="Control">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Style.Triggers>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBoxBase.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="TextBoxBase">
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.Icon" Value="&#xe6ed;" />
        <Setter Property="h:Cattach.AttachForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="h:Cattach.IsReadOnly" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsReadOnly}" />
        <Setter Property="h:Cattach.IsMouseOver" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" />
        <Setter Property="h:Cattach.IsKeyboardFocusWithin" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsKeyboardFocusWithin}" />
        <Setter Property="h:Cattach.HasError" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Validation.HasError)}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="h:Cattach.IconSize" Value="{DynamicResource {x:Static h:IconSizeKeys.Small}}" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource {x:Static local:ControlTemplateKeys.TextBoxError}}" />
        <Style.Triggers>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="MouseOver">
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="MouseOver" />
                </MultiDataTrigger.Conditions>

                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />

                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
            </MultiDataTrigger>-->

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="CaretBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Selector.Dynamic, TypeInTargetAssembly={x:Type local:SelectorKeys}}" BasedOn="{StaticResource {x:Static local:ControlKeys.Dynamic}}" TargetType="Control">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

        <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentSelectBackground}}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
        <Setter Property="Tag" Value="Except" />

        <Setter Property="h:Cattach.SearchDock" Value="Top" />
        <Setter Property="h:Cattach.SearchWidth" Value="Auto" />
        <Setter Property="h:Cattach.SearchVerticalAlignment" Value="Center" />
        <Setter Property="h:Cattach.SearchHorizontalAlignment" Value="Stretch" />
        <Setter Property="h:Cattach.SearchHeight" Value="{DynamicResource {x:Static h:SystemKeys.ItemHeight}}" />

        <Setter Property="h:Cattach.ItemHeight" Value="{DynamicResource {x:Static h:SystemKeys.RowHeight}}" />
        <!--<Setter Property="h:Cattach.ItemBorderBrush" Value="Transparent" />
        <Setter Property="h:Cattach.ItemBorderThickness" Value="0" />-->
        <Setter Property="h:Cattach.ItemBackground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}" />
        <Setter Property="h:Cattach.ItemForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}" />
        <!--<Setter Property="h:Cattach.ItemPadding" Value="0" />
        <Setter Property="h:Cattach.ItemMargin" Value="0" />-->
        <!--<Setter Property="h:Cattach.ItemMinHeight" Value="Auto" />
        <Setter Property="h:Cattach.ItemMinWidth" Value="Auto" />-->
        <Setter Property="h:Cattach.ItemHorizontalAlignment" Value="Stretch" />
        <Setter Property="h:Cattach.ItemHorizontalContentAlignment" Value="Left" />
        <Setter Property="h:Cattach.ItemVerticalAlignment" Value="Stretch" />
        <Setter Property="h:Cattach.ItemVerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <!--  StyleType  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Single">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Reverse">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelected}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Clear">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundMouseOver}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{x:Null}" />
            </Trigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.StyleType)}" Value="Accent">
                <Setter Property="h:Cattach.MouseOverBackground" Value="{DynamicResource {x:Static h:BrushKeys.AccentMouseOverBackground}}" />
                <Setter Property="h:Cattach.MouseOverForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />
                <Setter Property="h:Cattach.MouseOverBorderBrush" Value="Transparent" />

                <Setter Property="h:Cattach.SelectBackground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="h:Cattach.SelectForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                <Setter Property="h:Cattach.SelectBorderBrush" Value="Transparent" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Item.Dynamic, TypeInTargetAssembly={x:Type local:ControlKeys}}" TargetType="Control">
        <Setter Property="h:Cattach.UseClose" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.UseClose)}" />
        <Setter Property="h:Cattach.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverBackground)}" />
        <Setter Property="h:Cattach.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverForeground)}" />
        <Setter Property="h:Cattach.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverBorderBrush)}" />
        <Setter Property="h:Cattach.SelectBackground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.SelectBackground)}" />
        <Setter Property="h:Cattach.SelectForeground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.SelectForeground)}" />
        <Setter Property="h:Cattach.SelectBorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.SelectBorderBrush)}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemHeight)}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemBorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemBorderThickness)}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemBackground)}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemForeground)}" />
        <Setter Property="h:Cattach.CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemCornerRadius)}" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemPadding)}" />
        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemMargin)}" />
        <Setter Property="MinHeight" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemMinHeight)}" />
        <Setter Property="MinWidth" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemMinWidth)}" />
        <Setter Property="HorizontalAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemHorizontalAlignment)}" />
        <Setter Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemVerticalAlignment)}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemHorizontalContentAlignment)}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.ItemVerticalContentAlignment)}" />
        <Setter Property="h:Cattach.UseMouseOverScale" Value="False" />
        <Setter Property="h:Cattach.UseMouseOverScale_1_5" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.MouseOverEffect)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverBackground)}" />
                <Setter Property="Panel.ZIndex" Value="999" />
            </Trigger>
            <Trigger Property="h:Cattach.IsSelected" Value="True">
                <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(h:Cattach.SelectEffect)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectBackground)}" />
            </Trigger>
            <Trigger Property="h:Cattach.IsDragEnter" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="h:Cattach.CornerRadius" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>