<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.Template.Clear, TypeInTargetAssembly={x:Type local:ShareKeys}}">
        <Button x:Name="btn"
                Margin="0,0,0,0"
                Padding="{DynamicResource {x:Static h:ThicknessKeys.DockRight}}"
                h:Cattach.IsClearTextButtonBehaviorEnabled="True"
                Command="{x:Static h:Cattach.ClearTextCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=2, AncestorType={x:Type Control}}}"
                Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}"
                Visibility="Collapsed" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=IsMouseOver}" Value="True">
                <Setter TargetName="btn" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=IsKeyboardFocusWithin}" Value="True">
                <Setter TargetName="btn" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.Template.Close, TypeInTargetAssembly={x:Type local:ShareKeys}}">
        <Button Command="{x:Static local:Commander.Close}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=Foreground}" Style="{DynamicResource {x:Static local:ButtonKeys.Clear}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.Template.Title, TypeInTargetAssembly={x:Type local:ShareKeys}}" TargetType="ContentControl">
        <Border x:Name="border"
                Width="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleWidth)}"
                Height="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleHeight)}"
                MinWidth="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleMinWidth)}"
                VerticalAlignment="Stretch"
                Background="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleBackground)}"
                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleCornerRaius)}">
            <ContentPresenter x:Name="p"
                              Margin="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleMargin)}"
                              HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleHorizontalAlignment)}"
                              VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleVerticalAlignment)}"
                              Content="{TemplateBinding Content}"
                              TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.TitleForeground)}" />
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=(h:Cattach.UseBackground)}" Value="false">
                <Setter TargetName="border" Property="Background" Value="Transparent" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.Control.Icon, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type Control}">
        <TextBlock Margin="{TemplateBinding h:Cattach.IconMargin}"
                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                   FontSize="{TemplateBinding h:Cattach.IconSize}"
                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.Control.Icon.Background, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type Control}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CornerRadius)}">
            <TextBlock Margin="{TemplateBinding h:Cattach.IconMargin}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       FontSize="{TemplateBinding h:Cattach.IconSize}"
                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" />
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.ContentControl.Default, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type ContentControl}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CornerRadius)}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RenderTransform="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.ContentControl.Icon, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type ContentControl}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CornerRadius)}">
            <StackPanel Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Orientation="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Orientation)}">
                <TextBlock Margin="{TemplateBinding h:Cattach.IconMargin}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           FontSize="{TemplateBinding h:Cattach.IconSize}"
                           Foreground="{TemplateBinding Foreground}"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" />
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </StackPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.ContentControl.Title, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type ContentControl}">
        <StackPanel Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Orientation="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Orientation)}">
            <ContentControl Content="{TemplateBinding h:Cattach.Title}"
                            IsHitTestVisible="False"
                            IsTabStop="False"
                            Template="{TemplateBinding h:Cattach.TitleTemplate}"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Template, Converter={x:Static h:Converter.GetNullToCollapsed}}" />
            <TextBlock Margin="{TemplateBinding h:Cattach.IconMargin}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       FontSize="{TemplateBinding h:Cattach.IconSize}"
                       Foreground="{TemplateBinding Foreground}"
                       Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}" />
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.ContentControl.Box, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type ContentControl}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CornerRadius)}">
            <Grid>
                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <TextBlock Margin="{TemplateBinding h:Cattach.IconMargin}"
                           HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.ItemHorizontalContentAlignment)}"
                           VerticalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.ItemVerticalContentAlignment)}"
                           FontSize="25"
                           Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.ContentControl.Item.Close, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}" TargetType="{x:Type ContentControl}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

            <Button Grid.Column="1"
                    Height="Auto"
                    Margin="0"
                    Padding="{DynamicResource {x:Static h:ThicknessKeys.DockRight}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{Binding RelativeSource={RelativeSource AncestorType=Control, AncestorLevel=1}, Path=Foreground}"
                    Style="{DynamicResource {x:Static h:ButtonKeys.Clear}}"
                    Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.UseClose), Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}">
                <h:Interaction.Triggers>
                    <h:EventTrigger EventName="Click">
                        <h:CloseItemsAction Item="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
                    </h:EventTrigger>
                </h:Interaction.Triggers>
            </Button>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=S.ControlTemplate.TextBox.Error, TypeInTargetAssembly={x:Type local:ControlTemplateKeys}}">
        <!--<StackPanel Orientation="Vertical">-->
        <Border HorizontalAlignment="Center"
                VerticalAlignment="Top"
                BorderBrush="Transparent"
                BorderThickness="1">
            <!--<Grid>-->
            <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
            <!--</Grid>-->
        </Border>
        <!--</StackPanel>-->
    </ControlTemplate>
</ResourceDictionary>
